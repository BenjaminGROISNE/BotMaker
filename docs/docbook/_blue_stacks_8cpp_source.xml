<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__blue_stacks_8cpp_source" xml:lang="en-US">
<title>BlueStacks.cpp</title>
<indexterm><primary>src/BlueStacks.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__blue_stacks_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__blue_stacks_8h">BlueStacks.h</link>&quot;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00002"/>00002 
<anchor xml:id="__blue_stacks_8cpp_source_1l00003"/>00003 <emphasis role="comment">/*</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00004"/>00004 <emphasis role="comment">Bluestacks::Bluestacks()</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00005"/>00005 <emphasis role="comment">{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00006"/>00006 <emphasis role="comment">&#32;&#32;&#32;&#32;isInstalled&#32;=&#32;false;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00007"/>00007 <emphasis role="comment">&#32;&#32;&#32;&#32;nbInstances&#32;=&#32;0;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00008"/>00008 <emphasis role="comment">&#32;&#32;&#32;&#32;hdPlayerPath.clear();</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00009"/>00009 <emphasis role="comment">&#32;&#32;&#32;&#32;Engines.clear();</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00010"/>00010 <emphasis role="comment">&#32;&#32;&#32;&#32;blueStacksConfigPath.clear();</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00011"/>00011 <emphasis role="comment">&#32;&#32;&#32;&#32;hdPlayerFolder.clear();</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00012"/>00012 <emphasis role="comment">&#32;&#32;&#32;&#32;blueStacksConfigFolder.clear();</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00013"/>00013 <emphasis role="comment">&#32;&#32;&#32;&#32;BluestacksInstances.clear();</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00014"/>00014 <emphasis role="comment">&#32;&#32;&#32;&#32;gamepackage.clear();</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00015"/>00015 <emphasis role="comment">&#32;&#32;&#32;&#32;exename&#32;=&#32;&quot;HD-Player.exe&quot;;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00016"/>00016 <emphasis role="comment">&#32;&#32;&#32;&#32;confname&#32;=&#32;&quot;bluestacks.conf&quot;;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00017"/>00017 <emphasis role="comment">}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00018"/>00018 <emphasis role="comment"></emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00019"/>00019 <emphasis role="comment">Bluestacks::Bluestacks(std::string&#32;Gamepackage)</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00020"/>00020 <emphasis role="comment">{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00021"/>00021 <emphasis role="comment">&#32;&#32;&#32;&#32;isInstalled&#32;=&#32;false;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00022"/>00022 <emphasis role="comment">&#32;&#32;&#32;&#32;nbInstances&#32;=&#32;0;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00023"/>00023 <emphasis role="comment">&#32;&#32;&#32;&#32;hdPlayerPath.clear();</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00024"/>00024 <emphasis role="comment">&#32;&#32;&#32;&#32;Engines.clear();</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00025"/>00025 <emphasis role="comment">&#32;&#32;&#32;&#32;blueStacksConfigPath.clear();</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00026"/>00026 <emphasis role="comment">&#32;&#32;&#32;&#32;hdPlayerFolder.clear();</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00027"/>00027 <emphasis role="comment">&#32;&#32;&#32;&#32;blueStacksConfigFolder.clear();</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00028"/>00028 <emphasis role="comment">&#32;&#32;&#32;&#32;BluestacksInstances.clear();</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00029"/>00029 <emphasis role="comment">&#32;&#32;&#32;&#32;gamepackage&#32;=&#32;Gamepackage;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00030"/>00030 <emphasis role="comment">&#32;&#32;&#32;&#32;exename&#32;=&#32;&quot;HD-Player.exe&quot;;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00031"/>00031 <emphasis role="comment">&#32;&#32;&#32;&#32;confname&#32;=&#32;&quot;bluestacks.conf&quot;;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00032"/>00032 <emphasis role="comment">}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00033"/>00033 <emphasis role="comment"></emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00034"/>00034 <emphasis role="comment">void&#32;Bluestacks::sethdPlayerPath()</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00035"/>00035 <emphasis role="comment">{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00036"/>00036 <emphasis role="comment">&#32;&#32;&#32;&#32;hdPlayerPath&#32;=&#32;hdPlayerFolder&#32;+&#32;&quot;\\HD-player.exe&quot;;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00037"/>00037 <emphasis role="comment">}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00038"/>00038 <emphasis role="comment"></emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00039"/>00039 <emphasis role="comment">void&#32;Bluestacks::setConfigPath()</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00040"/>00040 <emphasis role="comment">{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00041"/>00041 <emphasis role="comment">&#32;&#32;&#32;&#32;blueStacksConfigPath&#32;=&#32;blueStacksConfigFolder&#32;+&#32;&quot;\\bluestacks.conf&quot;;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00042"/>00042 <emphasis role="comment">}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00043"/>00043 <emphasis role="comment"></emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00044"/>00044 <emphasis role="comment"></emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00045"/>00045 <emphasis role="comment">void&#32;Bluestacks::findBlueStacks()</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00046"/>00046 <emphasis role="comment">{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00047"/>00047 <emphasis role="comment">&#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;letters&#32;=&#32;returnAllDrivesLetter();</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00048"/>00048 <emphasis role="comment">&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;\nAll&#32;disks&#32;found:&quot;&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00049"/>00049 <emphasis role="comment">&#32;&#32;&#32;&#32;for&#32;(std::string&#32;let&#32;:&#32;letters)&#32;{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00050"/>00050 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;let&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00051"/>00051 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00052"/>00052 <emphasis role="comment">&#32;&#32;&#32;&#32;std::string&#32;programDataBlue&#32;=&#32;ExpandEnvironmentVariables(&quot;%ProgramData%&quot;)&#32;+&#32;&quot;\\BlueStacks_nxt&quot;;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00053"/>00053 <emphasis role="comment">&#32;&#32;&#32;&#32;std::string&#32;programData&#32;=&#32;ExpandEnvironmentVariables(&quot;%ProgramData%&quot;);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00054"/>00054 <emphasis role="comment">&#32;&#32;&#32;&#32;std::string&#32;programFiles&#32;=&#32;ExpandEnvironmentVariables(&quot;%ProgramFiles%&quot;);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00055"/>00055 <emphasis role="comment">&#32;&#32;&#32;&#32;std::string&#32;programFilesBlue&#32;=&#32;ExpandEnvironmentVariables(&quot;%ProgramFiles%&quot;)&#32;+&#32;&quot;\\BlueStacks_nxt&quot;;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00056"/>00056 <emphasis role="comment">&#32;&#32;&#32;&#32;std::string&#32;programFiles86&#32;=&#32;ExpandEnvironmentVariables(&quot;%ProgramFiles(x86)%&quot;);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00057"/>00057 <emphasis role="comment"></emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00058"/>00058 <emphasis role="comment">&#32;&#32;&#32;&#32;hdPlayerFolder&#32;=&#32;findPathFolder(programFilesBlue,&#32;&quot;HD-Player.exe&quot;);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00059"/>00059 <emphasis role="comment">&#32;&#32;&#32;&#32;if&#32;(hdPlayerFolder.empty())&#32;{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00060"/>00060 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hdPlayerFolder&#32;=&#32;findPathFolder(programFiles,&#32;&quot;HD-Player.exe&quot;);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00061"/>00061 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(hdPlayerFolder.empty())&#32;{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00062"/>00062 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hdPlayerFolder&#32;=&#32;findPathFolder(programFiles86,&#32;&quot;HD-Player.exe&quot;);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00063"/>00063 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(hdPlayerFolder.empty())&#32;{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00064"/>00064 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(std::string&#32;letter&#32;:&#32;letters)&#32;{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00065"/>00065 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;fold&#32;=&#32;letter&#32;+&#32;&quot;:\\&quot;;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00066"/>00066 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;hdPlayerFolder&#32;=&#32;findPathFolder(fold,&#32;&quot;HD-Player.exe&quot;);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00067"/>00067 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(!hdPlayerFolder.empty())break;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00068"/>00068 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00069"/>00069 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00070"/>00070 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00071"/>00071 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00072"/>00072 <emphasis role="comment"></emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00073"/>00073 <emphasis role="comment">&#32;&#32;&#32;&#32;blueStacksConfigFolder&#32;=&#32;findPathFolder(programDataBlue,&#32;&quot;bluestacks.conf&quot;);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00074"/>00074 <emphasis role="comment">&#32;&#32;&#32;&#32;if&#32;(blueStacksConfigFolder.empty())&#32;{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00075"/>00075 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blueStacksConfigFolder&#32;=&#32;findPathFolder(programData,&#32;&quot;bluestacks.conf&quot;);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00076"/>00076 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(blueStacksConfigFolder.empty())&#32;{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00077"/>00077 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(std::string&#32;letter&#32;:&#32;letters)&#32;{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00078"/>00078 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;fold&#32;=&#32;letter&#32;+&#32;&quot;:\\&quot;;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00079"/>00079 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blueStacksConfigFolder&#32;=&#32;findPathFolder(fold,&#32;&quot;bluestacks.conf&quot;);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00080"/>00080 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(!blueStacksConfigFolder.empty())break;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00081"/>00081 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00082"/>00082 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00083"/>00083 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00084"/>00084 <emphasis role="comment">&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;============================================================================================&quot;&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00085"/>00085 <emphasis role="comment">&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;END&#32;OF&#32;SEARCH&quot;&#32;&lt;&lt;&#32;std::endl&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00086"/>00086 <emphasis role="comment"></emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00087"/>00087 <emphasis role="comment">&#32;&#32;&#32;&#32;if&#32;(!blueStacksConfigFolder.empty()&#32;&amp;&amp;&#32;!hdPlayerFolder.empty())&#32;{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00088"/>00088 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;setConfigPath();</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00089"/>00089 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sethdPlayerPath();</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00090"/>00090 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;HD-Player&#32;Folder&#32;:&#32;&quot;&#32;&lt;&lt;&#32;hdPlayerFolder&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00091"/>00091 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;Config&#32;Folder&#32;:&#32;&quot;&#32;&lt;&lt;&#32;blueStacksConfigFolder&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00092"/>00092 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isInstalled&#32;=&#32;true;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00093"/>00093 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00094"/>00094 <emphasis role="comment">&#32;&#32;&#32;&#32;else&#32;throw&#32;40;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00095"/>00095 <emphasis role="comment">}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00096"/>00096 <emphasis role="comment"></emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00097"/>00097 <emphasis role="comment">bool&#32;Bluestacks::findGamePackage(const&#32;std::string&amp;&#32;path,&#32;const&#32;std::string&amp;&#32;packagename)</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00098"/>00098 <emphasis role="comment">{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00099"/>00099 <emphasis role="comment">&#32;&#32;&#32;&#32;std::string&#32;nameimg&#32;=&#32;packagename&#32;+&#32;&quot;.png&quot;;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00100"/>00100 <emphasis role="comment">&#32;&#32;&#32;&#32;std::string&#32;gamepath&#32;=&#32;path&#32;+&#32;&quot;\\AppCache&quot;;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00101"/>00101 <emphasis role="comment">&#32;&#32;&#32;&#32;if&#32;(findFileFolder(gamepath,&#32;nameimg))return&#32;true;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00102"/>00102 <emphasis role="comment">&#32;&#32;&#32;&#32;else&#32;return&#32;false;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00103"/>00103 <emphasis role="comment">}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00104"/>00104 <emphasis role="comment"></emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00105"/>00105 <emphasis role="comment">void&#32;Bluestacks::findAllInstancesGame()</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00106"/>00106 <emphasis role="comment">{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00107"/>00107 <emphasis role="comment">&#32;&#32;&#32;&#32;for&#32;(Instance&amp;&#32;inst&#32;:&#32;BluestacksInstances)&#32;{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00108"/>00108 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(findGamePackage(inst.path,&#32;gamepackage))&#32;{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00109"/>00109 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inst.hasgame&#32;=&#32;true;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00110"/>00110 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00111"/>00111 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else&#32;&#32;inst.hasgame&#32;=&#32;false;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00112"/>00112 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00113"/>00113 <emphasis role="comment"></emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00114"/>00114 <emphasis role="comment">}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00115"/>00115 <emphasis role="comment"></emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00116"/>00116 <emphasis role="comment">void&#32;Bluestacks::findInstancePath(Instance&amp;&#32;inst)</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00117"/>00117 <emphasis role="comment">{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00118"/>00118 <emphasis role="comment">&#32;&#32;&#32;&#32;std::string&#32;instancepath&#32;=&#32;blueStacksConfigFolder&#32;+&#32;&quot;\\Engine\\&quot;&#32;+&#32;inst.EngineName;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00119"/>00119 <emphasis role="comment">&#32;&#32;&#32;&#32;if&#32;(pathExists(instancepath))&#32;{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00120"/>00120 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inst.path&#32;=&#32;instancepath;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00121"/>00121 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00122"/>00122 <emphasis role="comment">}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00123"/>00123 <emphasis role="comment"></emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00124"/>00124 <emphasis role="comment">void&#32;Bluestacks::findAllInstancesPath()</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00125"/>00125 <emphasis role="comment">{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00126"/>00126 <emphasis role="comment">&#32;&#32;&#32;&#32;for&#32;(Instance&amp;&#32;inst&#32;:&#32;BluestacksInstances)&#32;{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00127"/>00127 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;findInstancePath(inst);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00128"/>00128 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00129"/>00129 <emphasis role="comment">}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00130"/>00130 <emphasis role="comment"></emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00131"/>00131 <emphasis role="comment">void&#32;Bluestacks::startInstance(Instance&#32;inst)</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00132"/>00132 <emphasis role="comment">{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00133"/>00133 <emphasis role="comment">&#32;&#32;&#32;&#32;if&#32;(!IsInstanceRunning(inst.InstanceName))&#32;{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00134"/>00134 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;PreviousBootTime:&#32;&quot;&#32;&lt;&lt;&#32;inst.boot&#32;&lt;&lt;&#32;&quot;&#32;milliseconds&quot;&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00135"/>00135 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;launchBluestacksInstance(hdPlayerFolder,&#32;inst.EngineName);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00136"/>00136 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;wait(inst.boot&#32;*&#32;2&#32;+&#32;5000);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00137"/>00137 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00138"/>00138 <emphasis role="comment"></emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00139"/>00139 <emphasis role="comment"></emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00140"/>00140 <emphasis role="comment">}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00141"/>00141 <emphasis role="comment"></emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00142"/>00142 <emphasis role="comment">void&#32;Bluestacks::wait(int&#32;milliSeconds)</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00143"/>00143 <emphasis role="comment">{</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00144"/>00144 <emphasis role="comment">&#32;&#32;&#32;&#32;std::this_thread::sleep_for(std::chrono::milliseconds(milliSeconds));</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00145"/>00145 <emphasis role="comment">}</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00146"/>00146 <emphasis role="comment">*/</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00147"/>00147 
<anchor xml:id="__blue_stacks_8cpp_source_1l00148"/><link linkend="_class_bluestacks_1a4895b9836fa2d54b4cee55100b2d3712">00148</link> <link linkend="_class_bluestacks_1a4895b9836fa2d54b4cee55100b2d3712">Bluestacks::Bluestacks</link>():<link linkend="_class_emulator">Emulator</link>()
<anchor xml:id="__blue_stacks_8cpp_source_1l00149"/>00149 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;<link linkend="_class_emulator_1a76ffe6e8b9a6f9336ac33d3fe4a34083">myType</link>&#32;=&#32;<link linkend="__instance_8h_1a5b026f4903e92a7e60dda754b5028227ac4edceeef1542a89fdcf6eb2aa687221">BLUESTACKS</link>;
<anchor xml:id="__blue_stacks_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;<link linkend="_class_emulator_1a6433f757edc9bf813dedef6f68f73b9f">playingInstance</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__blue_stacks_8cpp_source_1l00152"/>00152 
<anchor xml:id="__blue_stacks_8cpp_source_1l00153"/>00153 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00154"/><link linkend="_class_bluestacks_1ab4e16cfb437f85bdcbf1bc51e57bbf60">00154</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_bluestacks_1ab4e16cfb437f85bdcbf1bc51e57bbf60">Bluestacks::setListPlayableInstances</link>()
<anchor xml:id="__blue_stacks_8cpp_source_1l00155"/>00155 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_class_instance">Instance</link>*&amp;&#32;instance&#32;:&#32;<link linkend="_class_emulator_1a619a936779444867c815d5c443d663e6">getListInstances</link>())&#32;{
<anchor xml:id="__blue_stacks_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_bluestacks_1acae435f808653cbbd17165badcc6e9d7">hasGame</link>(instance))&#32;{
<anchor xml:id="__blue_stacks_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_emulator_1a4c0372049844947502d84334e7c0c7c1">getListPlayableInstances</link>().push_back(instance);
<anchor xml:id="__blue_stacks_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__blue_stacks_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;}
<anchor xml:id="__blue_stacks_8cpp_source_1l00161"/>00161 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00162"/>00162 
<anchor xml:id="__blue_stacks_8cpp_source_1l00163"/><link linkend="_class_bluestacks_1abcc56cc5e8e47efd9354f7098804937a">00163</link> <link linkend="_class_bluestacks_1a4895b9836fa2d54b4cee55100b2d3712">Bluestacks::Bluestacks</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;gamePackage,&#32;<emphasis role="keywordtype">int</emphasis>&#32;reqDimX,&#32;<emphasis role="keywordtype">int</emphasis>&#32;reqDimY,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dpi):&#32;<link linkend="_class_bluestacks">Bluestacks</link>()
<anchor xml:id="__blue_stacks_8cpp_source_1l00164"/>00164 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;this-&gt;gamePackage&#32;=&#32;<link linkend="_class_emulator_1a9a0bbebd40eee57823b313153b1c8cb5">gamePackage</link>;
<anchor xml:id="__blue_stacks_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;this-&gt;reqDimX&#32;=&#32;<link linkend="_class_emulator_1a3c7b1df3adc7ba81a9fa76ce1662fa06">reqDimX</link>;
<anchor xml:id="__blue_stacks_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;this-&gt;reqDimY&#32;=&#32;<link linkend="_class_emulator_1a4db78de463890def4e2296b9da9c0bfb">reqDimY</link>;
<anchor xml:id="__blue_stacks_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_emulator_1a99712a1a614fdbca45b8be35747e5f88">reqDpi</link>&#32;=&#32;dpi;
<anchor xml:id="__blue_stacks_8cpp_source_1l00169"/>00169 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00170"/>00170 
<anchor xml:id="__blue_stacks_8cpp_source_1l00171"/><link linkend="_class_bluestacks_1a00fae4a58be21841c4f388577494b548">00171</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_bluestacks_1a00fae4a58be21841c4f388577494b548">Bluestacks::startEmulator</link>()
<anchor xml:id="__blue_stacks_8cpp_source_1l00172"/>00172 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00173"/>00173 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00174"/>00174 
<anchor xml:id="__blue_stacks_8cpp_source_1l00175"/><link linkend="_class_bluestacks_1a3bb0c7f2d750fde081cfdc04a876f543">00175</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_bluestacks_1a3bb0c7f2d750fde081cfdc04a876f543">Bluestacks::startInstance</link>(<link linkend="_class_instance">Instance</link>*&#32;inst)
<anchor xml:id="__blue_stacks_8cpp_source_1l00176"/>00176 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00177"/>00177 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00178"/>00178 
<anchor xml:id="__blue_stacks_8cpp_source_1l00179"/><link linkend="_class_bluestacks_1a521e04d3a6b57da783d3248f308d8e2c">00179</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_bluestacks_1a521e04d3a6b57da783d3248f308d8e2c">Bluestacks::stopInstance</link>(<link linkend="_class_instance">Instance</link>*&#32;inst)
<anchor xml:id="__blue_stacks_8cpp_source_1l00180"/>00180 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00181"/>00181 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00182"/>00182 
<anchor xml:id="__blue_stacks_8cpp_source_1l00183"/><link linkend="_class_bluestacks_1a52ecfe65919c8f12ecc32167fe4ba811">00183</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_bluestacks_1a52ecfe65919c8f12ecc32167fe4ba811">Bluestacks::showInstance</link>(<link linkend="_class_instance">Instance</link>*&#32;Inst)
<anchor xml:id="__blue_stacks_8cpp_source_1l00184"/>00184 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_bluestacks_instance">BluestacksInstance</link>*&#32;blueInst&#32;=&#32;<emphasis role="keyword">dynamic_cast&lt;</emphasis><link linkend="_class_bluestacks_instance">BluestacksInstance</link>*<emphasis role="keyword">&gt;</emphasis>(Inst))&#32;{
<anchor xml:id="__blue_stacks_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;blueInst-&gt;showInstance();
<anchor xml:id="__blue_stacks_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;}
<anchor xml:id="__blue_stacks_8cpp_source_1l00188"/>00188 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00189"/>00189 
<anchor xml:id="__blue_stacks_8cpp_source_1l00190"/><link linkend="_class_bluestacks_1a2afa33cb22bb8529ff888107bc717898">00190</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_bluestacks_1a2afa33cb22bb8529ff888107bc717898">Bluestacks::getAdbKey</link>(<link linkend="_class_instance">Instance</link>*&#32;inst)
<anchor xml:id="__blue_stacks_8cpp_source_1l00191"/>00191 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00192"/>00192 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00193"/>00193 
<anchor xml:id="__blue_stacks_8cpp_source_1l00194"/><link linkend="_class_bluestacks_1ad3de3527564ca576a834c2b466bec2ea">00194</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_bluestacks_1ad3de3527564ca576a834c2b466bec2ea">Bluestacks::stopEmulator</link>()
<anchor xml:id="__blue_stacks_8cpp_source_1l00195"/>00195 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00196"/>00196 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00197"/>00197 
<anchor xml:id="__blue_stacks_8cpp_source_1l00198"/><link linkend="_class_bluestacks_1a386a0ff4bbe99dcd24d360af2369e564">00198</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_bluestacks_1a386a0ff4bbe99dcd24d360af2369e564">Bluestacks::searchEmulator</link>()
<anchor xml:id="__blue_stacks_8cpp_source_1l00199"/>00199 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__blue_stacks_8cpp_source_1l00201"/>00201 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00202"/>00202 
<anchor xml:id="__blue_stacks_8cpp_source_1l00203"/><link linkend="_class_bluestacks_1aed62dd421208481e7dd17a2dfa405eff">00203</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_bluestacks_1aed62dd421208481e7dd17a2dfa405eff">Bluestacks::searchAllInstances</link>()
<anchor xml:id="__blue_stacks_8cpp_source_1l00204"/>00204 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00205"/>00205 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00206"/><link linkend="_class_bluestacks_1a5ff0e57969f9cf6c45ef05a7fda9e17f">00206</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_bluestacks_1a5ff0e57969f9cf6c45ef05a7fda9e17f">Bluestacks::searchInstance</link>()&#32;{
<anchor xml:id="__blue_stacks_8cpp_source_1l00207"/>00207 
<anchor xml:id="__blue_stacks_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;<emphasis role="comment">//BluestacksInstance&#32;newInstance;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;<emphasis role="comment">//std::string&#32;before&#32;=&#32;&quot;bst.BluestacksInstance.&quot;&#32;+&#32;engineName&#32;+&#32;&quot;.&quot;;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;<emphasis role="comment">//newInstance.engineName&#32;=&#32;engineName;</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;<emphasis role="comment">//newInstance.instanceName&#32;=&#32;readString(filename,&#32;before&#32;+&#32;&quot;display_name&quot;,&#32;&quot;\&quot;&quot;,&#32;&quot;\&quot;&quot;);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;<emphasis role="comment">//newInstance.width&#32;=&#32;readInt(filename,&#32;before&#32;+&#32;&quot;fb_width&quot;,&#32;&quot;\&quot;&quot;,&#32;&quot;\&quot;&quot;);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;<emphasis role="comment">//newInstance.height&#32;=&#32;readInt(filename,&#32;before&#32;+&#32;&quot;fb_height&quot;,&#32;&quot;\&quot;&quot;,&#32;&quot;\&quot;&quot;);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;<emphasis role="comment">//newInstance.bootTime&#32;=&#32;readInt(filename,&#32;before&#32;+&#32;&quot;boot_duration&quot;,&#32;&quot;\&quot;&quot;,&#32;&quot;\&quot;&quot;);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;<emphasis role="comment">//newInstance.adbKey&#32;=&#32;readString(filename,&#32;before&#32;+&#32;&quot;status.adbKey&quot;,&#32;&quot;\&quot;&quot;,&#32;&quot;\&quot;&quot;);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;<emphasis role="comment">//newInstance.id&#32;=&#32;readString(filename,&#32;before&#32;+&#32;&quot;android_id&quot;,&#32;&quot;\&quot;&quot;,&#32;&quot;\&quot;&quot;);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;<emphasis role="comment">//blue.getListInstances().push_back(newInstance);</emphasis>
<anchor xml:id="__blue_stacks_8cpp_source_1l00218"/>00218 
<anchor xml:id="__blue_stacks_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;
<anchor xml:id="__blue_stacks_8cpp_source_1l00220"/>00220 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00221"/>00221 
<anchor xml:id="__blue_stacks_8cpp_source_1l00222"/><link linkend="_class_bluestacks_1a1f0042e419a5d6f7a7f6160043d0692d">00222</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_bluestacks_1a1f0042e419a5d6f7a7f6160043d0692d">Bluestacks::initEmulator</link>(<emphasis role="keywordtype">bool</emphasis>&#32;searchFiles)
<anchor xml:id="__blue_stacks_8cpp_source_1l00223"/>00223 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__blue_stacks_8cpp_source_1l00225"/>00225 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00226"/>00226 
<anchor xml:id="__blue_stacks_8cpp_source_1l00227"/><link linkend="_class_bluestacks_1ab3e585db72c0795deb22ef815e4096c0">00227</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_bluestacks_1ab3e585db72c0795deb22ef815e4096c0">Bluestacks::initInstances</link>()
<anchor xml:id="__blue_stacks_8cpp_source_1l00228"/>00228 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00229"/>00229 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00230"/>00230 
<anchor xml:id="__blue_stacks_8cpp_source_1l00231"/><link linkend="_class_bluestacks_1ab4f3076d8154c72a40f33f0cdfcff07d">00231</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_bluestacks_1ab4f3076d8154c72a40f33f0cdfcff07d">Bluestacks::init</link>(<emphasis role="keywordtype">bool</emphasis>&#32;searchFiles)
<anchor xml:id="__blue_stacks_8cpp_source_1l00232"/>00232 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__blue_stacks_8cpp_source_1l00234"/>00234 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00235"/>00235 
<anchor xml:id="__blue_stacks_8cpp_source_1l00236"/><link linkend="_class_bluestacks_1acae435f808653cbbd17165badcc6e9d7">00236</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_bluestacks_1acae435f808653cbbd17165badcc6e9d7">Bluestacks::hasGame</link>(<link linkend="_class_instance">Instance</link>*&#32;inst)
<anchor xml:id="__blue_stacks_8cpp_source_1l00237"/>00237 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__blue_stacks_8cpp_source_1l00239"/>00239 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00240"/>00240 
<anchor xml:id="__blue_stacks_8cpp_source_1l00241"/><link linkend="_class_bluestacks_1a9364fef9e26f24a10ea8e0ae2521fe4b">00241</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_bluestacks_1a9364fef9e26f24a10ea8e0ae2521fe4b">Bluestacks::setSubFolders</link>()
<anchor xml:id="__blue_stacks_8cpp_source_1l00242"/>00242 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00243"/>00243 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00244"/>00244 
<anchor xml:id="__blue_stacks_8cpp_source_1l00245"/><link linkend="_class_bluestacks_1a36f38d0c429baa15a1a4a009de5df6d0">00245</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_bluestacks_1a36f38d0c429baa15a1a4a009de5df6d0">Bluestacks::isInstanceRunning</link>(<link linkend="_class_instance">Instance</link>*&#32;inst)
<anchor xml:id="__blue_stacks_8cpp_source_1l00246"/>00246 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__blue_stacks_8cpp_source_1l00248"/>00248 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00249"/>00249 
<anchor xml:id="__blue_stacks_8cpp_source_1l00250"/><link linkend="_class_bluestacks_1a92becd39e7528f75b7117be5a396a7b8">00250</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_bluestacks_1a92becd39e7528f75b7117be5a396a7b8">Bluestacks::waitForInstance</link>(<link linkend="_class_instance">Instance</link>*&#32;inst)
<anchor xml:id="__blue_stacks_8cpp_source_1l00251"/>00251 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00252"/>00252 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00253"/>00253 
<anchor xml:id="__blue_stacks_8cpp_source_1l00254"/><link linkend="_class_bluestacks_1a6a33894616017361693d8f0dcc7f40c6">00254</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_bluestacks_1a6a33894616017361693d8f0dcc7f40c6">Bluestacks::clearAllInstances</link>()
<anchor xml:id="__blue_stacks_8cpp_source_1l00255"/>00255 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;<link linkend="_class_emulator_1a767c9d69943a0cd76a5c63f2cc25b234">Emulator::clearAllInstances</link>();
<anchor xml:id="__blue_stacks_8cpp_source_1l00257"/>00257 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00258"/>00258 
<anchor xml:id="__blue_stacks_8cpp_source_1l00259"/><link linkend="_class_bluestacks_1abc1b77ee2cda5de5289a5fb6f2959063">00259</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_bluestacks_1abc1b77ee2cda5de5289a5fb6f2959063">Bluestacks::isInstanceLoaded</link>(<link linkend="_class_instance">Instance</link>*&#32;inst)
<anchor xml:id="__blue_stacks_8cpp_source_1l00260"/>00260 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00261"/>00261 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__blue_stacks_8cpp_source_1l00262"/>00262 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00263"/>00263 
<anchor xml:id="__blue_stacks_8cpp_source_1l00264"/><link linkend="_class_bluestacks_1a678ac500167f5140adaf6453acc9a974">00264</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_bluestacks_1a678ac500167f5140adaf6453acc9a974">Bluestacks::setRequiredDimensions</link>(<link linkend="_class_instance">Instance</link>*&#32;inst)
<anchor xml:id="__blue_stacks_8cpp_source_1l00265"/>00265 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00266"/>00266 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00267"/>00267 
<anchor xml:id="__blue_stacks_8cpp_source_1l00268"/><link linkend="_class_bluestacks_1aeeb0532c8208679fd22ae1447bb892f7">00268</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_bluestacks_1aeeb0532c8208679fd22ae1447bb892f7">Bluestacks::adbActivated</link>(<link linkend="_class_instance">Instance</link>*&#32;inst)
<anchor xml:id="__blue_stacks_8cpp_source_1l00269"/>00269 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__blue_stacks_8cpp_source_1l00271"/>00271 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00272"/>00272 
<anchor xml:id="__blue_stacks_8cpp_source_1l00273"/><link linkend="_class_bluestacks_1a0374bd8ed909a068f809cec36b5b92f9">00273</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_bluestacks_1a0374bd8ed909a068f809cec36b5b92f9">Bluestacks::activateAdb</link>(<link linkend="_class_instance">Instance</link>*&#32;inst)
<anchor xml:id="__blue_stacks_8cpp_source_1l00274"/>00274 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00275"/>00275 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00276"/>00276 
<anchor xml:id="__blue_stacks_8cpp_source_1l00277"/>00277 
<anchor xml:id="__blue_stacks_8cpp_source_1l00278"/>00278 
<anchor xml:id="__blue_stacks_8cpp_source_1l00279"/><link linkend="_class_bluestacks_1a96b195f415dc60c4329f508bf54331f5">00279</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_bluestacks_1a96b195f415dc60c4329f508bf54331f5">Bluestacks::receiveFolders</link>(std::string&#32;hdPlayerFolder,&#32;std::string&#32;configFolder)
<anchor xml:id="__blue_stacks_8cpp_source_1l00280"/>00280 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;this-&gt;hdPlayerFolder&#32;=&#32;<link linkend="_class_bluestacks_1af8ff24fe55ea696c944c0819ad53690a">hdPlayerFolder</link>;
<anchor xml:id="__blue_stacks_8cpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;this-&gt;configFolder&#32;=&#32;<link linkend="_class_bluestacks_1afb053ca9aefed7324c712b7b567e3bd0">configFolder</link>;
<anchor xml:id="__blue_stacks_8cpp_source_1l00283"/>00283 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00284"/>00284 
<anchor xml:id="__blue_stacks_8cpp_source_1l00285"/><link linkend="_class_bluestacks_1a4ee2fe0a801d17d3fdf2476a8351c60e">00285</link> <link linkend="_class_bluestacks_instance">BluestacksInstance</link>*&#32;<link linkend="_class_bluestacks_1a4ee2fe0a801d17d3fdf2476a8351c60e">Bluestacks::transformInstance</link>(<link linkend="_class_instance">Instance</link>*&#32;inst)
<anchor xml:id="__blue_stacks_8cpp_source_1l00286"/>00286 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">dynamic_cast&lt;</emphasis><link linkend="_class_bluestacks_instance">BluestacksInstance</link>*<emphasis role="keyword">&gt;</emphasis>(inst);
<anchor xml:id="__blue_stacks_8cpp_source_1l00288"/>00288 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00289"/>00289 
<anchor xml:id="__blue_stacks_8cpp_source_1l00290"/>00290 
<anchor xml:id="__blue_stacks_8cpp_source_1l00291"/><link linkend="_class_bluestacks_1a9c04cc1e226501924677803bce946c05">00291</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_bluestacks_1a9c04cc1e226501924677803bce946c05">Bluestacks::startPlayingInstance</link>()
<anchor xml:id="__blue_stacks_8cpp_source_1l00292"/>00292 {
<anchor xml:id="__blue_stacks_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_emulator_1a89579d9f83f96e3dcc5d13be7e837724">selectedPlayingInstance</link>())&#32;{
<anchor xml:id="__blue_stacks_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_bluestacks_1a3bb0c7f2d750fde081cfdc04a876f543">startInstance</link>(<link linkend="_class_emulator_1a6433f757edc9bf813dedef6f68f73b9f">playingInstance</link>);
<anchor xml:id="__blue_stacks_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__blue_stacks_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;}
<anchor xml:id="__blue_stacks_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__blue_stacks_8cpp_source_1l00298"/>00298 }
<anchor xml:id="__blue_stacks_8cpp_source_1l00299"/>00299 
<anchor xml:id="__blue_stacks_8cpp_source_1l00300"/>00300 
</programlisting></section>
