<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__interpretor_8h_source" xml:lang="en-US">
<title>Interpretor.h</title>
<indexterm><primary>src/Interpretor.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__interpretor_8h_source_1l00001"/>00001 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
<anchor xml:id="__interpretor_8h_source_1l00002"/>00002 
<anchor xml:id="__interpretor_8h_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="__interpretor_8h_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;fstream&gt;</emphasis>
<anchor xml:id="__interpretor_8h_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
<anchor xml:id="__interpretor_8h_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="__interpretor_8h_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__interactions_8h">Interactions.h</link>&quot;</emphasis>
<anchor xml:id="__interpretor_8h_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__tags_8h">tags.h</link>&quot;</emphasis>
<anchor xml:id="__interpretor_8h_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&lt;unordered_set&gt;</emphasis>
<anchor xml:id="__interpretor_8h_source_1l00010"/>00010 <emphasis role="comment">//Punctuation&#32;Tokens&#32;string</emphasis>
<anchor xml:id="__interpretor_8h_source_1l00011"/>00011 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;commaP&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=<emphasis role="stringliteral">&quot;,&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00012"/>00012 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;openParenthesisP&#32;&#32;&#32;=<emphasis role="stringliteral">&quot;(&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00013"/>00013 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;closeParenthesisP&#32;&#32;=<emphasis role="stringliteral">&quot;)&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00014"/>00014 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;openBracketsP&#32;&#32;&#32;&#32;&#32;&#32;=<emphasis role="stringliteral">&quot;{&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00015"/>00015 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;closeBracketsP&#32;&#32;&#32;&#32;&#32;=<emphasis role="stringliteral">&quot;}&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00016"/>00016 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;openAngleBracketsP&#32;&#32;&#32;&#32;&#32;=<emphasis role="stringliteral">&quot;&lt;&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00017"/>00017 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;closeAngleBracketsP&#32;=&#32;<emphasis role="stringliteral">&quot;&gt;&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00018"/>00018 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;quotation&#32;&#32;=<emphasis role="stringliteral">&quot;\&quot;&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00019"/>00019 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;whitespace&#32;=&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00020"/>00020 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;tabulation&#32;=&#32;<emphasis role="stringliteral">&quot;\t&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00021"/>00021 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;backspace&#32;=&#32;<emphasis role="stringliteral">&quot;\b&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00022"/>00022 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;newline&#32;=&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00023"/>00023 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;carriagereturn&#32;=&#32;<emphasis role="stringliteral">&quot;\r&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00024"/>00024 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;allPunctuations&#32;=&#32;<emphasis role="stringliteral">&quot;&#32;&lt;&gt;\&quot;,(){}\t\b\n\r&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00025"/>00025 
<anchor xml:id="__interpretor_8h_source_1l00026"/>00026 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&#32;allPunctuationsTokensStrings&#32;=&#32;{&#32;openAngleBracketsP,closeAngleBracketsP,&#32;quotation,carriagereturn,&#32;newline,&#32;whitespace,tabulation,backspace,&#32;commaP,&#32;openParenthesisP,&#32;closeParenthesisP,&#32;openBracketsP,&#32;closeBracketsP&#32;};
<anchor xml:id="__interpretor_8h_source_1l00027"/>00027 
<anchor xml:id="__interpretor_8h_source_1l00028"/>00028 <emphasis role="comment">//Operators&#32;Tokens&#32;</emphasis>
<anchor xml:id="__interpretor_8h_source_1l00029"/>00029 <emphasis role="comment">//string</emphasis>
<anchor xml:id="__interpretor_8h_source_1l00030"/>00030 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;plusO&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00031"/>00031 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;minusO&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00032"/>00032 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;divideO&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="stringliteral">&quot;/&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00033"/>00033 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;multiplyO&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="stringliteral">&quot;*&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00034"/>00034 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;biggerO&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="stringliteral">&quot;&gt;&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00035"/>00035 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;biggerEqualO&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="stringliteral">&quot;&gt;=&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00036"/>00036 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;lesserO&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="stringliteral">&quot;&lt;&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00037"/>00037 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;lesserEqualO&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="stringliteral">&quot;&lt;=&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00038"/>00038 
<anchor xml:id="__interpretor_8h_source_1l00039"/>00039 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&#32;allOperatorsTokensStrings&#32;=&#32;{&#32;plusO,&#32;minusO,&#32;divideO,&#32;multiplyO,&#32;biggerO,&#32;biggerEqualO,&#32;lesserO,&#32;lesserEqualO&#32;};
<anchor xml:id="__interpretor_8h_source_1l00040"/>00040 
<anchor xml:id="__interpretor_8h_source_1l00041"/>00041 
<anchor xml:id="__interpretor_8h_source_1l00042"/>00042 <emphasis role="comment">//Literal&#32;Tokens&#32;string</emphasis>
<anchor xml:id="__interpretor_8h_source_1l00043"/>00043 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;trueL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="stringliteral">&quot;true&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00044"/>00044 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;falseL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="stringliteral">&quot;false&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00045"/>00045 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;secondL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="stringliteral">&quot;SECOND&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00046"/>00046 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;millisecondL&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="stringliteral">&quot;MILLISECOND&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00047"/>00047 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;minuteL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="stringliteral">&quot;MINUTE&quot;</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00048"/>00048 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&#32;allLiteralsTokensStrings&#32;=&#32;{&#32;trueL,falseL,secondL,millisecondL,minuteL&#32;};
<anchor xml:id="__interpretor_8h_source_1l00049"/>00049 
<anchor xml:id="__interpretor_8h_source_1l00050"/>00050 
<anchor xml:id="__interpretor_8h_source_1l00051"/>00051 <emphasis role="comment">//&#32;Concatenate&#32;all&#32;token&#32;vectors</emphasis>
<anchor xml:id="__interpretor_8h_source_1l00052"/>00052 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&#32;allTokensStrings&#32;=&#32;[]&#32;{
<anchor xml:id="__interpretor_8h_source_1l00053"/>00053 &#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;&#32;result;
<anchor xml:id="__interpretor_8h_source_1l00054"/>00054 &#32;&#32;&#32;&#32;result.reserve(allKeywordsTokensString.size()&#32;+
<anchor xml:id="__interpretor_8h_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allPunctuationsTokensStrings.size()&#32;+
<anchor xml:id="__interpretor_8h_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allOperatorsTokensStrings.size()&#32;+
<anchor xml:id="__interpretor_8h_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allLiteralsTokensStrings.size());
<anchor xml:id="__interpretor_8h_source_1l00058"/>00058 
<anchor xml:id="__interpretor_8h_source_1l00059"/>00059 &#32;&#32;&#32;&#32;result.insert(result.end(),&#32;allKeywordsTokensString.begin(),&#32;allKeywordsTokensString.end());
<anchor xml:id="__interpretor_8h_source_1l00060"/>00060 &#32;&#32;&#32;&#32;result.insert(result.end(),&#32;allPunctuationsTokensStrings.begin(),&#32;allPunctuationsTokensStrings.end());
<anchor xml:id="__interpretor_8h_source_1l00061"/>00061 &#32;&#32;&#32;&#32;result.insert(result.end(),&#32;allOperatorsTokensStrings.begin(),&#32;allOperatorsTokensStrings.end());
<anchor xml:id="__interpretor_8h_source_1l00062"/>00062 &#32;&#32;&#32;&#32;result.insert(result.end(),&#32;allLiteralsTokensStrings.begin(),&#32;allLiteralsTokensStrings.end());
<anchor xml:id="__interpretor_8h_source_1l00063"/>00063 
<anchor xml:id="__interpretor_8h_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__interpretor_8h_source_1l00065"/>00065 &#32;&#32;&#32;&#32;}();
<anchor xml:id="__interpretor_8h_source_1l00066"/>00066 
<anchor xml:id="__interpretor_8h_source_1l00067"/>00067 
<anchor xml:id="__interpretor_8h_source_1l00068"/>00068 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__interpretor_8cpp_1ad42767aaf8252eb57581d009530bd527">isTokenString</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text);
<anchor xml:id="__interpretor_8h_source_1l00069"/>00069 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__interpretor_8cpp_1a3276e6efe4a3f409262ffe0b345e9636">isKeywordString</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text);
<anchor xml:id="__interpretor_8h_source_1l00070"/>00070 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__interpretor_8cpp_1ae8bab56314c8b787497a84c189b9114d">isLiteralString</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text);
<anchor xml:id="__interpretor_8h_source_1l00071"/>00071 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__interpretor_8cpp_1ad93eecc58b3fdba57ba605dcb296f03e">isPunctuationString</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text);
<anchor xml:id="__interpretor_8h_source_1l00072"/>00072 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__interpretor_8cpp_1ae80d3823673e42ed3ce7e84597bbd552">isOperatorString</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text);
<anchor xml:id="__interpretor_8h_source_1l00073"/>00073 
<anchor xml:id="__interpretor_8h_source_1l00074"/>00074 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__interpretor_8cpp_1a38a3bc682b32b85fc40cda646569d271">isTokenStringContained</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text);
<anchor xml:id="__interpretor_8h_source_1l00075"/>00075 
<anchor xml:id="__interpretor_8h_source_1l00076"/>00076 
<anchor xml:id="__interpretor_8h_source_1l00077"/><link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">00077</link> <emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca10df3d67626099df882920ba6552f16d">NOT</link>,<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca94c8aa2452bccd82ee129b46f7c4be79">TOKEN</link>,<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46caf7193622145fd3c92db6f1b14f175dc0">QUOTATION</link>,<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca09d62a98aa0b2c29e66b3f81c3641657">OPENANGLEBRACKETS</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46cad473a02cda3fb53f1def18c632bf4e9d">CLOSEANGLEBRACKETS</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca38b13c5b8b7fa5cdbe5e49dbea3cd5b1">FLOW</link>,<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca4d9b3e9fc12849d060371eb65154c751">COMMA</link>,<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46cabaaceccc27b1d4e0968c999583f97de5">SEMICOLON</link>,<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46cab22f521f17b09d0fd389e231f8f6d66d">NUMERIC</link>,<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca6fcc416051346daca31c571646af127a">IDENTIFIER</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46caf62b7b10a36ac4ff1386de6dc9c3ec13">CLOSEBRACKETS</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca56d9d72077d098fe411d4f715c339e92">OPENBRACKETS</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46caab5f2c1029696d0fa27db2acf531e951">OPENPARENTHESIS</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46cab658c0ab7888b812782bb032dbf4815c">CLOSEPARENTHESIS</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46cace7e8413589722ee650cbce0ea040f86">STRINGLITERAL</link>,<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46cad36335449b5720a1384868719f487119">TRUELITERAL</link>,<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca3667ab316297387f31aa717670424e7b">FALSELITERAL</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca2200becb80f0019c4a2ccecec350d0db">SECOND</link>,<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca52f1e315372b38db1b8f4e3666c4f721">WHITESPACE</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca46bda4cde2f10bdb9e51e3bbefa4a2bf">MINUTE</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca241d7907de05ad50c011812e927cd671">MILLISECOND</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca5d5cd46919fa987731fb2edefe0f2a0c">INTEGER</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46cad5cc6a0064b5c25ba37826aa3fda910c">WAIT</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46cae738c26bf4ce1037fa81b039a915cbf6">FLOAT</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46caa97b2c144243b2b9d2c593ec268b62f5">BOOL</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca558ffc8f5770d8e4f95f51d822685532">AND</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca1d00e7dce692e8dc3f6877f035e3a616">OR</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46cafee1f202df8193b3ba65f00ad61efcef">COMPARE</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca63b588d5559f64f89a416e656880b949">STRING</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca6a977bf6454341ccb0b79c3d0900db91">COORD</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca823d5f6b867f6d6adec93ad4999bae9f">DIRECTION</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca1d23cac77df97a722cd2ec7767a06e06">ZONE</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca298cb25408234de02baf2085803a464a">LIST</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46cade6ee2b5d856295add4d5e3631fbfb93">IF</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca9159b3578e4e1eb31ffdf90acd6f6e40">LOOP</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca94682254f1edc02f9576916290a5fddd">DOLOOP</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca4239f063a3d4fb9d38a0182be6e39e76">SWITCH</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca5b39c8b553c821e7cddc6da64b5bd2ee">DEFAULT</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca778537b0acce06229cb78d5f72c907ab">ELSE</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca722462c878f454d0872804374ef77c95">ELIF</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca14d6a3e0201f58bfe7c01e775973e80e">BREAK</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca2f453cfe638e57e27bb0c9512436111e">CONTINUE</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46cabea5438a9521adc1b23a9117024bbb43">CASE</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca3cfba54f6873dfd55b0b09d32910b20e">STORE</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca186495f7da296bf880df3a22a492b378">MAIN</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46caf96eee4e48ee90430f17fb3a8388507b">PRINT</link>
<anchor xml:id="__interpretor_8h_source_1l00079"/>00079 };
<anchor xml:id="__interpretor_8h_source_1l00080"/>00080 
<anchor xml:id="__interpretor_8h_source_1l00081"/><link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">00081</link> <emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6ab50339a10e1de285ac99d4c3990b8693">NONE</link>,<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca6a977bf6454341ccb0b79c3d0900db91">COORD</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca1d23cac77df97a722cd2ec7767a06e06">ZONE</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca63b588d5559f64f89a416e656880b949">STRING</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46ca823d5f6b867f6d6adec93ad4999bae9f">DIRECTION</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46cae738c26bf4ce1037fa81b039a915cbf6">FLOAT</link>,&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a53f93baa3057821107c750323892fa92">INT</link>,&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46caa97b2c144243b2b9d2c593ec268b62f5">BOOL</link>,&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6af03689713d1683f6872267046e6de33c">TIMETYPE</link>
<anchor xml:id="__interpretor_8h_source_1l00083"/>00083 };
<anchor xml:id="__interpretor_8h_source_1l00084"/>00084 
<anchor xml:id="__interpretor_8h_source_1l00085"/>00085 
<anchor xml:id="__interpretor_8h_source_1l00086"/>00086 
<anchor xml:id="__interpretor_8h_source_1l00087"/>00087 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;<link linkend="__interpretor_8cpp_1a0060c66efc18253619637b287095821c">getTokenValue</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text);
<anchor xml:id="__interpretor_8h_source_1l00088"/>00088 <emphasis role="keyword">static</emphasis>&#32;std::string&#32;<link linkend="__interpretor_8cpp_1a2368ff9f88ff6f6529bd474e94d3ef7c">getTokenString</link>(<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;value);
<anchor xml:id="__interpretor_8h_source_1l00089"/>00089 std::string&#32;<link linkend="__interpretor_8h_1a44cd9137229f6cc0f965ce359f482379">getNextPunctuationToken</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;str);
<anchor xml:id="__interpretor_8h_source_1l00090"/>00090 <emphasis role="keyword">static</emphasis>&#32;std::string&#32;<link linkend="__interpretor_8cpp_1aeadcc798628a739f30945ade9bf7c9a1">getNextTokenString</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text);
<anchor xml:id="__interpretor_8h_source_1l00091"/>00091 <emphasis role="keyword">static</emphasis>&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;<link linkend="__interpretor_8cpp_1a1efffcc83c5a23c247b70fca364ece06">getNextTokenValue</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text);
<anchor xml:id="__interpretor_8h_source_1l00092"/>00092 <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__interpretor_8h_1a3de0a259acea81f7a880327324e53e4b">isWhitespace</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&amp;&#32;c);
<anchor xml:id="__interpretor_8h_source_1l00093"/>00093 
<anchor xml:id="__interpretor_8h_source_1l00094"/><link linkend="__interpretor_8h_1ab0df38968e4f03a3f1f6d6df0f31f45a">00094</link> <emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="__interpretor_8h_1ab0df38968e4f03a3f1f6d6df0f31f45a">ErrorType</link>{<link linkend="__interpretor_8h_1ab0df38968e4f03a3f1f6d6df0f31f45aa10d1208b485425756fcc932229386b02">MISSING</link>,<link linkend="__interpretor_8h_1ab0df38968e4f03a3f1f6d6df0f31f45aa79c6a788549c6275055c935df474f0e7">UNEXPECTED</link>,<link linkend="__interpretor_8h_1ab0df38968e4f03a3f1f6d6df0f31f45aad5edacc5c1724ff7055e7db625117c71">REPLACED</link>};
<anchor xml:id="__interpretor_8h_source_1l00095"/>00095 
<anchor xml:id="__interpretor_8h_source_1l00096"/><link linkend="_class_error">00096</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_error">Error</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00097"/>00097 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00098"/>00098 &#32;&#32;&#32;&#32;<link linkend="_class_error_1aca339d00ad8481fb4c184f0ece42698b">Error</link>();
<anchor xml:id="__interpretor_8h_source_1l00099"/>00099 &#32;&#32;&#32;&#32;<link linkend="_class_error_1aca339d00ad8481fb4c184f0ece42698b">Error</link>(<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;ev,<link linkend="__interpretor_8h_1ab0df38968e4f03a3f1f6d6df0f31f45a">ErrorType</link>&#32;et,<emphasis role="keywordtype">int</emphasis>&#32;el);
<anchor xml:id="__interpretor_8h_source_1l00100"/>00100 &#32;&#32;&#32;&#32;<link linkend="_class_error_1aca339d00ad8481fb4c184f0ece42698b">Error</link>(<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_error_1a69186124b4acc75df505345de7b934a1">dType</link>,<link linkend="__interpretor_8h_1ab0df38968e4f03a3f1f6d6df0f31f45a">ErrorType</link>&#32;et,<emphasis role="keywordtype">int</emphasis>&#32;el);
<anchor xml:id="__interpretor_8h_source_1l00101"/>00101 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_error_1a690b81205a544b44f91746f086b752d2">showError</link>();
<anchor xml:id="__interpretor_8h_source_1l00102"/><link linkend="_class_error_1a435fcafbddc8eb133017119c555a2ed0">00102</link> &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ab0df38968e4f03a3f1f6d6df0f31f45a">ErrorType</link>&#32;<link linkend="_class_error_1a435fcafbddc8eb133017119c555a2ed0">errorType</link>;
<anchor xml:id="__interpretor_8h_source_1l00103"/><link linkend="_class_error_1ad04a7a6376aba5b6337b3865648ef8ba">00103</link> &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;<link linkend="_class_error_1ad04a7a6376aba5b6337b3865648ef8ba">errorValue</link>;
<anchor xml:id="__interpretor_8h_source_1l00104"/><link linkend="_class_error_1a69186124b4acc75df505345de7b934a1">00104</link> &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_error_1a69186124b4acc75df505345de7b934a1">dType</link>;
<anchor xml:id="__interpretor_8h_source_1l00105"/><link linkend="_class_error_1acbea8a404e63977dc75c9f5e615fabe5">00105</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_error_1acbea8a404e63977dc75c9f5e615fabe5">errorLine</link>;
<anchor xml:id="__interpretor_8h_source_1l00106"/>00106 };
<anchor xml:id="__interpretor_8h_source_1l00107"/>00107 
<anchor xml:id="__interpretor_8h_source_1l00108"/><link linkend="_class_token_result">00108</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_token_result">TokenResult</link>{
<anchor xml:id="__interpretor_8h_source_1l00109"/>00109 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<link linkend="_class_token_result_1ac49cd5f7a236cd78ac5633df0144e54b">TokenResult</link>();
<anchor xml:id="__interpretor_8h_source_1l00111"/>00111 &#32;&#32;&#32;&#32;<link linkend="_class_token_result_1ac49cd5f7a236cd78ac5633df0144e54b">TokenResult</link>(<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;value,<emphasis role="keywordtype">int</emphasis>&#32;l);
<anchor xml:id="__interpretor_8h_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_token_result_1a1b90cbf9042a502868ffbb657399f5bf">showErrors</link>();
<anchor xml:id="__interpretor_8h_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_token_result_1acce057f14c7bd3ccab85dc021b709b50">addError</link>(<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;value,<link linkend="__interpretor_8h_1ab0df38968e4f03a3f1f6d6df0f31f45a">ErrorType</link>&#32;et,&#32;<emphasis role="keywordtype">int</emphasis>&#32;l);
<anchor xml:id="__interpretor_8h_source_1l00114"/>00114 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_token_result_1acce057f14c7bd3ccab85dc021b709b50">addError</link>(<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;type,&#32;<link linkend="__interpretor_8h_1ab0df38968e4f03a3f1f6d6df0f31f45a">ErrorType</link>&#32;et,<emphasis role="keywordtype">int</emphasis>&#32;l);
<anchor xml:id="__interpretor_8h_source_1l00115"/>00115 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_token_result_1acce057f14c7bd3ccab85dc021b709b50">addError</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;TokenResult&gt;&amp;&#32;nestedToken);
<anchor xml:id="__interpretor_8h_source_1l00116"/>00116 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_token_result_1acfc405b7a0e288b9463f24fd105931cf">addVar</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;name,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&amp;&#32;type);
<anchor xml:id="__interpretor_8h_source_1l00117"/>00117 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_token_result_1a40eab1e11abedf2ad760a9095579573c">isSuccess</link>();
<anchor xml:id="__interpretor_8h_source_1l00118"/><link linkend="_class_token_result_1a9de92354db253e5cc26c490d3768eb6c">00118</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;std::map&lt;std::string,&#32;DataType&gt;&gt;&#32;<link linkend="_class_token_result_1a9de92354db253e5cc26c490d3768eb6c">varTable</link>;
<anchor xml:id="__interpretor_8h_source_1l00119"/><link linkend="_class_token_result_1afa05387cebf6ba69bfbd086155a63d8d">00119</link> &#32;&#32;&#32;&#32;std::vector&lt;std::shared_ptr&lt;Error&gt;&gt;&#32;<link linkend="_class_token_result_1afa05387cebf6ba69bfbd086155a63d8d">listErrors</link>;
<anchor xml:id="__interpretor_8h_source_1l00120"/>00120 };
<anchor xml:id="__interpretor_8h_source_1l00121"/>00121 
<anchor xml:id="__interpretor_8h_source_1l00122"/>00122 
<anchor xml:id="__interpretor_8h_source_1l00123"/>00123 
<anchor xml:id="__interpretor_8h_source_1l00124"/>00124 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__interpretor_8h_source_1l00125"/><link linkend="_class_iterator_list">00125</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_iterator_list">IteratorList</link>{
<anchor xml:id="__interpretor_8h_source_1l00126"/>00126 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00127"/><link linkend="_class_iterator_list_1ac84f1df8a81719e605831cdf5e8ca2be">00127</link> &#32;&#32;&#32;&#32;<link linkend="_class_iterator_list_1ac84f1df8a81719e605831cdf5e8ca2be">IteratorList</link>()&#32;{
<anchor xml:id="__interpretor_8h_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_iterator_list_1af59aaed33fc08d91967d6b67e3aea521">current</link>&#32;=&#32;0;
<anchor xml:id="__interpretor_8h_source_1l00129"/>00129 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interpretor_8h_source_1l00130"/><link linkend="_class_iterator_list_1aa2e38b07218344321979abe6669565c3">00130</link> &#32;&#32;&#32;&#32;<link linkend="_class_iterator_list_1aa2e38b07218344321979abe6669565c3">IteratorList</link>(std::vector&lt;std::shared_ptr&lt;T&gt;&gt;&#32;<link linkend="_class_iterator_list_1abeee71ef05dfd58e3031ed33b521f2bc">nextTokens</link>)&#32;:<link linkend="_class_iterator_list">IteratorList</link>()&#32;{
<anchor xml:id="__interpretor_8h_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_iterator_list_1abeee71ef05dfd58e3031ed33b521f2bc">nextTokens</link>&#32;=&#32;<link linkend="_class_iterator_list_1abeee71ef05dfd58e3031ed33b521f2bc">nextTokens</link>;
<anchor xml:id="__interpretor_8h_source_1l00132"/>00132 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interpretor_8h_source_1l00133"/><link linkend="_class_iterator_list_1af5c370ccb8698e2a9fb0714782d57203">00133</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_iterator_list_1af5c370ccb8698e2a9fb0714782d57203">next</link>()&#32;{
<anchor xml:id="__interpretor_8h_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++<link linkend="_class_iterator_list_1af59aaed33fc08d91967d6b67e3aea521">current</link>;
<anchor xml:id="__interpretor_8h_source_1l00135"/>00135 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interpretor_8h_source_1l00136"/><link linkend="_class_iterator_list_1a2ebc1118094754b7d333b0a9d257d12b">00136</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_iterator_list_1a2ebc1118094754b7d333b0a9d257d12b">ended</link>()&#32;{
<anchor xml:id="__interpretor_8h_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_iterator_list_1af59aaed33fc08d91967d6b67e3aea521">current</link>&#32;&gt;=&#32;<link linkend="_class_iterator_list_1abeee71ef05dfd58e3031ed33b521f2bc">nextTokens</link>.size();
<anchor xml:id="__interpretor_8h_source_1l00138"/>00138 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interpretor_8h_source_1l00139"/><link linkend="_class_iterator_list_1a86b9f14e5ba8bdedd859d93a0a0e6f7b">00139</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_iterator_list_1a86b9f14e5ba8bdedd859d93a0a0e6f7b">size</link>()<emphasis role="keyword">const&#32;</emphasis>{
<anchor xml:id="__interpretor_8h_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_iterator_list_1abeee71ef05dfd58e3031ed33b521f2bc">nextTokens</link>.size();
<anchor xml:id="__interpretor_8h_source_1l00141"/>00141 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interpretor_8h_source_1l00142"/><link linkend="_class_iterator_list_1a4acf162e4a194bddd3c2fe26b073f45a">00142</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;T&gt;&#32;<link linkend="_class_iterator_list_1a4acf162e4a194bddd3c2fe26b073f45a">currentToken</link>()&#32;{
<anchor xml:id="__interpretor_8h_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_iterator_list_1abeee71ef05dfd58e3031ed33b521f2bc">nextTokens</link>.at(<link linkend="_class_iterator_list_1af59aaed33fc08d91967d6b67e3aea521">current</link>);
<anchor xml:id="__interpretor_8h_source_1l00144"/>00144 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interpretor_8h_source_1l00145"/><link linkend="_class_iterator_list_1a274f3c1e2569b42fe6e2b014c68bd7ce">00145</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_iterator_list_1a274f3c1e2569b42fe6e2b014c68bd7ce">empty</link>()<emphasis role="keyword">const&#32;</emphasis>{
<anchor xml:id="__interpretor_8h_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_iterator_list_1abeee71ef05dfd58e3031ed33b521f2bc">nextTokens</link>.empty();
<anchor xml:id="__interpretor_8h_source_1l00147"/>00147 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interpretor_8h_source_1l00148"/><link linkend="_class_iterator_list_1abeee71ef05dfd58e3031ed33b521f2bc">00148</link> &#32;&#32;&#32;&#32;std::vector&lt;std::shared_ptr&lt;T&gt;&gt;&#32;<link linkend="_class_iterator_list_1abeee71ef05dfd58e3031ed33b521f2bc">nextTokens</link>;
<anchor xml:id="__interpretor_8h_source_1l00149"/><link linkend="_class_iterator_list_1af59aaed33fc08d91967d6b67e3aea521">00149</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_iterator_list_1af59aaed33fc08d91967d6b67e3aea521">current</link>;
<anchor xml:id="__interpretor_8h_source_1l00150"/>00150 };
<anchor xml:id="__interpretor_8h_source_1l00151"/>00151 
<anchor xml:id="__interpretor_8h_source_1l00152"/><link linkend="_class_token">00152</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_token">Token</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00153"/>00153 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00154"/>00154 &#32;&#32;&#32;&#32;<link linkend="_class_token_1aa3c5868ba4115f3189df6b2ac5b36f39">Token</link>();
<anchor xml:id="__interpretor_8h_source_1l00155"/><link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">00155</link> &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>;
<anchor xml:id="__interpretor_8h_source_1l00156"/><link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">00156</link> &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>;
<anchor xml:id="__interpretor_8h_source_1l00157"/><link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">00157</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>;
<anchor xml:id="__interpretor_8h_source_1l00158"/>00158 &#32;&#32;&#32;&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1af13c7d494e5fe273558cb37286fa7185">updateRes</link>(std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00159"/>00159 &#32;&#32;&#32;&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a4c0f84a84656f0b5e28c4193c3c13ea3">addError</link>(<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;value,&#32;<link linkend="__interpretor_8h_1ab0df38968e4f03a3f1f6d6df0f31f45a">ErrorType</link>&#32;et=<link linkend="__interpretor_8h_1ab0df38968e4f03a3f1f6d6df0f31f45aa10d1208b485425756fcc932229386b02">ErrorType::MISSING</link>);
<anchor xml:id="__interpretor_8h_source_1l00160"/>00160 &#32;&#32;&#32;&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a4c0f84a84656f0b5e28c4193c3c13ea3">addError</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&#32;&lt;TokenResult&gt;&amp;&#32;tr);
<anchor xml:id="__interpretor_8h_source_1l00161"/>00161 &#32;&#32;&#32;&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a4c0f84a84656f0b5e28c4193c3c13ea3">addError</link>(<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;type,&#32;<link linkend="__interpretor_8h_1ab0df38968e4f03a3f1f6d6df0f31f45a">ErrorType</link>&#32;et=<link linkend="__interpretor_8h_1ab0df38968e4f03a3f1f6d6df0f31f45aad5edacc5c1724ff7055e7db625117c71">ErrorType::REPLACED</link>);
<anchor xml:id="__interpretor_8h_source_1l00162"/><link linkend="_class_token_1a4b96c2a31d7c374fd2bd1986794f80dd">00162</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_token_1a4b96c2a31d7c374fd2bd1986794f80dd">line</link>;
<anchor xml:id="__interpretor_8h_source_1l00163"/>00163 
<anchor xml:id="__interpretor_8h_source_1l00164"/>00164 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_token_1a41ebddd1a5ac42b80e3bd916e1f8e472">getDataType</link>();
<anchor xml:id="__interpretor_8h_source_1l00165"/>00165 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1ad692018745d72ed2bc87f1f6a8dbf156">addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00166"/>00166 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_token_1aea759b8376bff558791fdc1f2f70f4fb">execute</link>();
<anchor xml:id="__interpretor_8h_source_1l00167"/>00167 };
<anchor xml:id="__interpretor_8h_source_1l00168"/>00168 
<anchor xml:id="__interpretor_8h_source_1l00169"/>00169 <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__interpretor_8h_1add26727275e38a1c0054c4baa0c2662a">isBooleanToken</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Token&gt;&amp;&#32;token);
<anchor xml:id="__interpretor_8h_source_1l00170"/>00170 
<anchor xml:id="__interpretor_8h_source_1l00171"/>00171 
<anchor xml:id="__interpretor_8h_source_1l00172"/><link linkend="_class_o_token">00172</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_o_token">OToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_token">Token</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00173"/>00173 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00174"/>00174 };
<anchor xml:id="__interpretor_8h_source_1l00175"/><link linkend="_class_p_token">00175</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_p_token">PToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_token">Token</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00176"/>00176 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00177"/>00177 };
<anchor xml:id="__interpretor_8h_source_1l00178"/>00178 
<anchor xml:id="__interpretor_8h_source_1l00179"/><link linkend="_class_l_token">00179</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_l_token">LToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_token">Token</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00180"/>00180 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00181"/>00181 };
<anchor xml:id="__interpretor_8h_source_1l00182"/>00182 
<anchor xml:id="__interpretor_8h_source_1l00183"/><link linkend="_class_k_token">00183</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_k_token">KToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_token">Token</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00184"/>00184 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00185"/>00185 
<anchor xml:id="__interpretor_8h_source_1l00186"/>00186 };
<anchor xml:id="__interpretor_8h_source_1l00187"/>00187 
<anchor xml:id="__interpretor_8h_source_1l00188"/><link linkend="_class_k_p_token">00188</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_k_p_token">KPToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_k_token">KToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00189"/>00189 <emphasis role="keyword">protected</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00190"/>00190 &#32;&#32;&#32;&#32;<link linkend="_class_k_p_token_1abb5c3e0fd2d70e45246277e7b4e6229f">KPToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00191"/>00191 &#32;&#32;&#32;&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_k_p_token_1a7d6892f81389e89ec9f255ab1032758d">addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00192"/>00192 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_k_p_token_1a35b0aee206a6f3296d01adb8597ea331">addNumber</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00193"/>00193 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_k_p_token_1aa9f011132395d98cbf2563233b16a510">addInteger</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00194"/>00194 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_k_p_token_1af0e2ae4f677dc0ac40543384c090afca">addFloat</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00195"/>00195 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_k_p_token_1a9cd65bfbd30b7157eff902f162a45553">addCoord</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00196"/>00196 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_k_p_token_1a79d7487ddc6918bf30349557f379fc04">addString</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00197"/>00197 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_k_p_token_1a53794cd4c78b5873550ca3f5a457f346">addComma</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl);
<anchor xml:id="__interpretor_8h_source_1l00198"/>00198 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_k_p_token_1acbaa6483144d6800ad8ffa2df21392d2">addTimeType</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00199"/>00199 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_k_p_token_1a0d6ee24aa23095edb2b1c9ba4baedc03">addOp</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl);
<anchor xml:id="__interpretor_8h_source_1l00200"/>00200 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_k_p_token_1a0a95e55ef2440fbaa21cd74442eb3c65">addCp</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00201"/>00201 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_k_p_token_1a87c8af27b17d6ecbc8f7338d1f7737a7">handleCp</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00202"/>00202 };
<anchor xml:id="__interpretor_8h_source_1l00203"/>00203 
<anchor xml:id="__interpretor_8h_source_1l00204"/><link linkend="_class_flow_k_token">00204</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_flow_k_token">FlowKToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_k_token">KToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00205"/>00205 <emphasis role="keyword">protected</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00206"/>00206 &#32;&#32;&#32;&#32;<link linkend="_class_flow_k_token_1a1520ab9f311f4f2a5dc06189f7349d07">FlowKToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00207"/><link linkend="_class_flow_k_token_1aa99ba504a4a6c16a90ec747fc5a70f40">00207</link> &#32;&#32;&#32;&#32;std::vector&lt;std::shared_ptr&lt;Token&gt;&gt;&#32;<link linkend="_class_flow_k_token_1aa99ba504a4a6c16a90ec747fc5a70f40">nestedTokens</link>;
<anchor xml:id="__interpretor_8h_source_1l00208"/>00208 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_flow_k_token_1aa97c47a59e43f8984764231f9101bddb">addOb</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl);
<anchor xml:id="__interpretor_8h_source_1l00209"/>00209 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_flow_k_token_1ab92c7a3ef4e07f22d45998b1217a037e">addCb</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00210"/>00210 &#32;&#32;&#32;&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_flow_k_token_1a23ed367b143107ff3085178a6c30dbd4">addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00211"/>00211 };
<anchor xml:id="__interpretor_8h_source_1l00212"/>00212 
<anchor xml:id="__interpretor_8h_source_1l00213"/><link linkend="_class_flow_k_p_token">00213</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_flow_k_p_token">FlowKPToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_k_p_token">KPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00214"/>00214 <emphasis role="keyword">protected</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00215"/>00215 &#32;&#32;&#32;&#32;<link linkend="_class_flow_k_p_token_1a81a6a11e3248c8b9387670d0f7915659">FlowKPToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00216"/><link linkend="_class_flow_k_p_token_1aa45da600dc21ac842a04f7f7c51ece11">00216</link> &#32;&#32;&#32;&#32;std::vector&lt;std::shared_ptr&lt;Token&gt;&gt;&#32;<link linkend="_class_flow_k_p_token_1aa45da600dc21ac842a04f7f7c51ece11">nestedTokens</link>;
<anchor xml:id="__interpretor_8h_source_1l00217"/>00217 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_flow_k_p_token_1a2a3c69d4e82ac4a76c1f39ea505a64e7">addOb</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl);
<anchor xml:id="__interpretor_8h_source_1l00218"/>00218 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_flow_k_p_token_1ab25c9519d5389e5abbda0b6b378ef9ad">addCb</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00219"/>00219 &#32;&#32;&#32;&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_flow_k_p_token_1afb97e689d4a475e1c20b5ae2a6732c62">addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00220"/>00220 };
<anchor xml:id="__interpretor_8h_source_1l00221"/>00221 
<anchor xml:id="__interpretor_8h_source_1l00222"/><link linkend="_class_flow_k_c_token">00222</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_flow_k_c_token">FlowKCToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_flow_k_p_token">FlowKPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00223"/>00223 <emphasis role="keyword">protected</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00224"/>00224 &#32;&#32;&#32;&#32;<link linkend="_class_flow_k_c_token_1a49224042869042f190daaea38ac73ad1">FlowKCToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00225"/><link linkend="_class_flow_k_c_token_1a4f78286ec5e4f3116d6cb152fa75ec92">00225</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_flow_k_c_token_1a4f78286ec5e4f3116d6cb152fa75ec92">condition</link>;
<anchor xml:id="__interpretor_8h_source_1l00226"/>00226 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_flow_k_c_token_1aa8e871c7b557b02746ffad16e531a567">addCondition</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00227"/>00227 &#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;TokenResult&gt;&#32;<link linkend="_class_flow_k_c_token_1aabbf4019cb69b07eb25b11bd070824fc">addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00228"/>00228 };
<anchor xml:id="__interpretor_8h_source_1l00229"/>00229 
<anchor xml:id="__interpretor_8h_source_1l00230"/><link linkend="_class_identifier_token">00230</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_identifier_token">IdentifierToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_token">Token</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00231"/>00231 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00232"/>00232 &#32;&#32;&#32;&#32;<link linkend="_class_identifier_token_1a7be51f313dff6ce44902faddf3e0c8a1">IdentifierToken</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;varName);
<anchor xml:id="__interpretor_8h_source_1l00233"/>00233 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_identifier_token_1ad9da654f9973551c59750220e2016120">getDataType</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00234"/>00234 &#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;TokenResult&gt;&#32;<link linkend="_class_identifier_token_1aedcfa4072f22665a7e9fc872ef9dbcbb">addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00235"/>00235 };
<anchor xml:id="__interpretor_8h_source_1l00236"/>00236 
<anchor xml:id="__interpretor_8h_source_1l00237"/><link linkend="_class_unknown_token">00237</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_unknown_token">UnknownToken</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_token">Token</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00238"/>00238 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00239"/>00239 &#32;&#32;&#32;&#32;<link linkend="_class_unknown_token_1ac37d05a7251a0636f36a703cc69bbc69">UnknownToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00240"/>00240 };
<anchor xml:id="__interpretor_8h_source_1l00241"/>00241 
<anchor xml:id="__interpretor_8h_source_1l00242"/><link linkend="_class_main_token">00242</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_main_token">MainToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_flow_k_p_token">FlowKPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00243"/>00243 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00244"/>00244 &#32;&#32;&#32;&#32;<link linkend="_class_main_token_1a1c3f66d8b2aed831a6c1f7098aad4bc3">MainToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00245"/><link linkend="_class_main_token_1af98ced0e22c3cfbc1f7b37768a9c7695">00245</link> &#32;&#32;&#32;&#32;std::vector&lt;std::shared_ptr&lt;Token&gt;&gt;&#32;<link linkend="_class_main_token_1af98ced0e22c3cfbc1f7b37768a9c7695">argvTokens</link>;
<anchor xml:id="__interpretor_8h_source_1l00246"/>00246 &#32;&#32;&#32;&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_main_token_1afe612ccf1e5346401b2fff76d029bbbe">addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00247"/>00247 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_main_token_1a7903f95481d0b435c6f1f01b17695b40">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00248"/>00248 };
<anchor xml:id="__interpretor_8h_source_1l00249"/>00249 
<anchor xml:id="__interpretor_8h_source_1l00250"/><link linkend="_class_do_loop_token">00250</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_do_loop_token">DoLoopToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_flow_k_p_token">FlowKPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00251"/>00251 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00252"/>00252 &#32;&#32;&#32;&#32;<link linkend="_class_do_loop_token_1adb97a09bf62c4d496cd2d693c9ed3cf9">DoLoopToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00253"/>00253 &#32;&#32;&#32;&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_do_loop_token_1a7990e235e81ba0ffe31c5fa9af52ac92">addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00254"/>00254 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_do_loop_token_1a98c55d62059c3f6d6956e6c52a249ee8">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00255"/>00255 };
<anchor xml:id="__interpretor_8h_source_1l00256"/>00256 
<anchor xml:id="__interpretor_8h_source_1l00257"/><link linkend="_class_if_token">00257</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_if_token">IfToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_flow_k_c_token">FlowKCToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00258"/>00258 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00259"/>00259 &#32;&#32;&#32;&#32;<link linkend="_class_if_token_1acba71a2f073560d50a15417ce40b739c">IfToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00260"/>00260 &#32;&#32;&#32;&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_if_token_1a01465e20c31d5d3bdbc0248209f4c3f4">addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00261"/>00261 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_if_token_1ac6a6d93dfcadc5348593bcc2350834f5">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00262"/>00262 };
<anchor xml:id="__interpretor_8h_source_1l00263"/>00263 
<anchor xml:id="__interpretor_8h_source_1l00264"/><link linkend="_class_else_token">00264</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_else_token">ElseToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_flow_k_token">FlowKToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00265"/>00265 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00266"/>00266 &#32;&#32;&#32;&#32;<link linkend="_class_else_token_1a41f4dc1b51e7bab3d583b0684b387879">ElseToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00267"/>00267 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_else_token_1a04c498b5b90ae54baec24cff3c93fa84">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00268"/>00268 };
<anchor xml:id="__interpretor_8h_source_1l00269"/>00269 
<anchor xml:id="__interpretor_8h_source_1l00270"/><link linkend="_class_elif_token">00270</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_elif_token">ElifToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_flow_k_c_token">FlowKCToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00271"/>00271 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00272"/>00272 &#32;&#32;&#32;&#32;<link linkend="_class_elif_token_1a877b2c5a0fc06e8d50b0a84adf0a848b">ElifToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00273"/>00273 &#32;&#32;&#32;&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_elif_token_1a9b61f58f6728377b662938a34c9edcf9">addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00274"/>00274 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_elif_token_1a7d4b264b0c023e44f7edc2b5781482f7">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00275"/>00275 };
<anchor xml:id="__interpretor_8h_source_1l00276"/>00276 
<anchor xml:id="__interpretor_8h_source_1l00277"/><link linkend="_class_loop_token">00277</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_loop_token">LoopToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_flow_k_c_token">FlowKCToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00278"/>00278 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00279"/>00279 &#32;&#32;&#32;&#32;<link linkend="_class_loop_token_1a461d7fb8e702cd1af27236ef796c1491">LoopToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00280"/><link linkend="_class_loop_token_1a31a461ebcf1f5deea6a66276c7772513">00280</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_loop_token_1a31a461ebcf1f5deea6a66276c7772513">conditionToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00281"/>00281 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_loop_token_1aaf2ed4676012f15ef2b551241f2957aa">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00282"/>00282 };
<anchor xml:id="__interpretor_8h_source_1l00283"/>00283 
<anchor xml:id="__interpretor_8h_source_1l00284"/>00284 
<anchor xml:id="__interpretor_8h_source_1l00285"/><link linkend="_class_wait_token">00285</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_wait_token">WaitToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_k_p_token">KPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00286"/>00286 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00287"/>00287 &#32;&#32;&#32;&#32;<link linkend="_class_wait_token_1aba6c9c4c6466b72c1ff3a545feb10050">WaitToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00288"/>00288 &#32;&#32;&#32;&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_wait_token_1a025496a739c85ce044f303b38fee7608">addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00289"/><link linkend="_class_wait_token_1a43d8ea1eada1a0f9831736cba160dda2">00289</link> &#32;&#32;&#32;&#32;std::vector&lt;std::shared_ptr&lt;Token&gt;&gt;&#32;<link linkend="_class_wait_token_1a43d8ea1eada1a0f9831736cba160dda2">listToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00290"/><link linkend="_class_wait_token_1aa4d5a469d180186cc08223eb42fa7a40">00290</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_wait_token_1aa4d5a469d180186cc08223eb42fa7a40">integerToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00291"/>00291 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_wait_token_1afdc303d17be95afa35bbee3b36936303">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00292"/>00292 };
<anchor xml:id="__interpretor_8h_source_1l00293"/>00293 
<anchor xml:id="__interpretor_8h_source_1l00294"/><link linkend="_class_and_token">00294</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_and_token">AndToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_k_p_token">KPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00295"/>00295 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00296"/>00296 &#32;&#32;&#32;&#32;<link linkend="_class_and_token_1ad19dda0405dae7acad6ff7d1276b55d0">AndToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00297"/>00297 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_and_token_1a42000f1686aca243ba7f5092fec77887">getDataType</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00298"/>00298 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_and_token_1a70df2a2057b7d0c554fe086df11467cc">handleCp</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00299"/><link linkend="_class_and_token_1a2383bb4ae73bc0de91169bcb3a7c8413">00299</link> &#32;&#32;&#32;&#32;std::vector&lt;std::shared_ptr&lt;Token&gt;&gt;&#32;<link linkend="_class_and_token_1a2383bb4ae73bc0de91169bcb3a7c8413">listBoolToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00300"/>00300 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_and_token_1a8412cc2be91843dbcec6bde30b06d146">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00301"/>00301 };
<anchor xml:id="__interpretor_8h_source_1l00302"/>00302 
<anchor xml:id="__interpretor_8h_source_1l00303"/><link linkend="_class_or_token">00303</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_or_token">OrToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_k_p_token">KPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00304"/>00304 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00305"/>00305 &#32;&#32;&#32;&#32;<link linkend="_class_or_token_1a7c85002ad97533e99a9512267eede569">OrToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00306"/>00306 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_or_token_1af570d875bf11afa30430cf12dc37623b">getDataType</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00307"/>00307 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_or_token_1a9be27028cfb5166cbd2f2fabea9b9800">handleCp</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00308"/><link linkend="_class_or_token_1abda4c3f969be77557e76a56776ac3b4f">00308</link> &#32;&#32;&#32;&#32;std::vector&lt;std::shared_ptr&lt;Token&gt;&gt;&#32;<link linkend="_class_or_token_1abda4c3f969be77557e76a56776ac3b4f">listBoolToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00309"/>00309 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_or_token_1ad079040ecd6dc5384d817249f80eed65">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00310"/>00310 };
<anchor xml:id="__interpretor_8h_source_1l00311"/>00311 
<anchor xml:id="__interpretor_8h_source_1l00312"/><link linkend="_class_not_token">00312</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_not_token">NotToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_k_p_token">KPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00313"/>00313 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00314"/>00314 &#32;&#32;&#32;&#32;<link linkend="_class_not_token_1a9a532a1f09a418d06d923114deebb5e9">NotToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_not_token_1a7e2dd6fce2e6f2b3791a2dfd02231959">getDataType</link>();
<anchor xml:id="__interpretor_8h_source_1l00316"/>00316 &#32;&#32;&#32;&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_not_token_1acdcf74ae5a8e5aa08e5226b7943cc192">addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00317"/>00317 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_not_token_1a339f5cf0de259706aa841d25abe8ac9e">handleCp</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00318"/><link linkend="_class_not_token_1acbba7af9fd3eb65ef2c34c32138ba2d2">00318</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_not_token_1acbba7af9fd3eb65ef2c34c32138ba2d2">boolToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00319"/>00319 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_not_token_1a6c122b3073499f07b79eed8e8576ab2a">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00320"/>00320 };
<anchor xml:id="__interpretor_8h_source_1l00321"/>00321 
<anchor xml:id="__interpretor_8h_source_1l00322"/><link linkend="_class_false_token">00322</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_false_token">FalseToken</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_l_token">LToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00323"/>00323 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00324"/>00324 &#32;&#32;&#32;&#32;<link linkend="_class_false_token_1a4cc46b13ce0b957d44cdcfd648ce00bc">FalseToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00325"/>00325 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_false_token_1a1f5193ea1cf36b142e8e822a578632e5">getDataType</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00326"/>00326 };
<anchor xml:id="__interpretor_8h_source_1l00327"/>00327 
<anchor xml:id="__interpretor_8h_source_1l00328"/><link linkend="_class_true_token">00328</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_true_token">TrueToken</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_l_token">LToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00329"/>00329 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00330"/>00330 &#32;&#32;&#32;&#32;<link linkend="_class_true_token_1a08aca6511e1fbde286a4776207b2d9c1">TrueToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00331"/>00331 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_true_token_1a1bbbceed5cfcad7e022df9925ca8b4cf">getDataType</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00332"/>00332 };
<anchor xml:id="__interpretor_8h_source_1l00333"/>00333 
<anchor xml:id="__interpretor_8h_source_1l00334"/><link linkend="_class_second_token">00334</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_second_token">SecondToken</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_l_token">LToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00335"/>00335 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00336"/>00336 &#32;&#32;&#32;&#32;<link linkend="_class_second_token_1adf8fe7d7c5ae3fc0f72dd5035f7fa317">SecondToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00337"/>00337 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_second_token_1aa4d852983520e6d5fd31aadffe80d8e4">getDataType</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00338"/>00338 };
<anchor xml:id="__interpretor_8h_source_1l00339"/><link linkend="_class_milli_second_token">00339</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_milli_second_token">MilliSecondToken</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_l_token">LToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00340"/>00340 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00341"/>00341 &#32;&#32;&#32;&#32;<link linkend="_class_milli_second_token_1a0a728a23e8a29752ba7e999143741fd3">MilliSecondToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00342"/>00342 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_milli_second_token_1a648c3017582444e693a59bef9b3a5d71">getDataType</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00343"/>00343 };
<anchor xml:id="__interpretor_8h_source_1l00344"/><link linkend="_class_minute_token">00344</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_minute_token">MinuteToken</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_l_token">LToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00345"/>00345 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00346"/>00346 &#32;&#32;&#32;&#32;<link linkend="_class_minute_token_1a7aecee81b39ae555fe1c231c3c80df17">MinuteToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00347"/>00347 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_minute_token_1af9875f90d35c8034c5a8f073c1b27b43">getDataType</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00348"/>00348 };
<anchor xml:id="__interpretor_8h_source_1l00349"/>00349 
<anchor xml:id="__interpretor_8h_source_1l00350"/><link linkend="_class_numeric_token">00350</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_numeric_token">NumericToken</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_l_token">LToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00351"/>00351 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00352"/>00352 &#32;&#32;&#32;&#32;<link linkend="_class_numeric_token_1a7f1b43277fb39aeab23502635e8a0126">NumericToken</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;nb);
<anchor xml:id="__interpretor_8h_source_1l00353"/>00353 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_numeric_token_1af1967ab001cb9d95aba3de02e9fd78c5">getDataType</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00354"/><link linkend="_class_numeric_token_1a3349ba56e3f951e3c3473b66fcf195ee">00354</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_numeric_token_1a3349ba56e3f951e3c3473b66fcf195ee">number</link>;
<anchor xml:id="__interpretor_8h_source_1l00355"/>00355 };
<anchor xml:id="__interpretor_8h_source_1l00356"/>00356 
<anchor xml:id="__interpretor_8h_source_1l00357"/><link linkend="_class_string_literal_token">00357</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_string_literal_token">StringLiteralToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_l_token">LToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00358"/>00358 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00359"/>00359 &#32;&#32;&#32;&#32;<link linkend="_class_string_literal_token_1af17431409d177d987b1e7e2851658e04">StringLiteralToken</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;content);
<anchor xml:id="__interpretor_8h_source_1l00360"/>00360 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_string_literal_token_1a9f1db1ae9a350867f394676d5b809be3">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00361"/>00361 };
<anchor xml:id="__interpretor_8h_source_1l00362"/>00362 
<anchor xml:id="__interpretor_8h_source_1l00363"/>00363 
<anchor xml:id="__interpretor_8h_source_1l00364"/>00364 
<anchor xml:id="__interpretor_8h_source_1l00365"/>00365 
<anchor xml:id="__interpretor_8h_source_1l00366"/><link linkend="_class_list_token">00366</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_list_token">ListToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_k_p_token">KPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00367"/>00367 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00368"/>00368 &#32;&#32;&#32;&#32;<link linkend="_class_list_token_1a6f8b1c210bafe2fe677ddb92726567aa">ListToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00369"/>00369 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_list_token_1ae736d7d0f7a3cd54847651f1d2cf9ffb">addOab</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tokenList);
<anchor xml:id="__interpretor_8h_source_1l00370"/>00370 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_list_token_1a31080aaed35fe7176403a5e84d295fbe">addCab</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tokenList);
<anchor xml:id="__interpretor_8h_source_1l00371"/>00371 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_list_token_1aea0a223d95a5cef71aa01f13bae99b9f">addType</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00372"/><link linkend="_class_list_token_1ac099c58eaacdd550708afdfb00eb8ba1">00372</link> &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_list_token_1ac099c58eaacdd550708afdfb00eb8ba1">dType</link>;
<anchor xml:id="__interpretor_8h_source_1l00373"/>00373 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_list_token_1a906d4ed5d5198e7238a04207579c5718">handleCp</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00374"/>00374 &#32;&#32;&#32;&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_list_token_1ad933b167a7d348852edf2700a8c2985b">addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00375"/><link linkend="_class_list_token_1aa261f2c9074d7aa9e3e9aff9dcf4fce0">00375</link> &#32;&#32;&#32;&#32;std::vector&lt;std::shared_ptr&lt;Token&gt;&gt;&#32;<link linkend="_class_list_token_1aa261f2c9074d7aa9e3e9aff9dcf4fce0">listToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00376"/>00376 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_list_token_1a7fe18acce7131bdfb768b8a8977173d3">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00377"/>00377 };
<anchor xml:id="__interpretor_8h_source_1l00378"/>00378 
<anchor xml:id="__interpretor_8h_source_1l00379"/><link linkend="_class_store_token">00379</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_store_token">StoreToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_k_p_token">KPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00380"/>00380 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00381"/>00381 &#32;&#32;&#32;&#32;<link linkend="_class_store_token_1afacb2d9d11cafbf437764c86753029b4">StoreToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00382"/><link linkend="_class_store_token_1ac688bd71a918146db1def1a415b80863">00382</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_store_token_1ac688bd71a918146db1def1a415b80863">identifierToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00383"/><link linkend="_class_store_token_1afd9ad7493758a02837af451ddb4fec2d">00383</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_store_token_1afd9ad7493758a02837af451ddb4fec2d">valueToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00384"/>00384 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_store_token_1abbb9193503dd3dc6f03f96be9f71b45a">addIdentifier</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00385"/>00385 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_store_token_1a477dcacce7acf5a3c4ff14ff5e4f95fd">addValue</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00386"/>00386 &#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;TokenResult&gt;&#32;<link linkend="_class_store_token_1ada7a74bb6d2f11f78f026be0554183e9">addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00387"/>00387 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_store_token_1a431a003fb845c3562c1ebab9b2b40bcd">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00388"/>00388 };
<anchor xml:id="__interpretor_8h_source_1l00389"/>00389 
<anchor xml:id="__interpretor_8h_source_1l00390"/>00390 
<anchor xml:id="__interpretor_8h_source_1l00391"/><link linkend="_class_e_k_p_token">00391</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_e_k_p_token">EKPToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_k_p_token">KPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00392"/>00392 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00393"/>00393 &#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;TokenResult&gt;&#32;<link linkend="_class_e_k_p_token_1a710d49b38ba2eff3d0f4221e30d687b2">addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00394"/>00394 };
<anchor xml:id="__interpretor_8h_source_1l00395"/>00395 
<anchor xml:id="__interpretor_8h_source_1l00396"/><link linkend="_class_integer_token">00396</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_integer_token">IntegerToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_e_k_p_token">EKPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00397"/>00397 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00398"/>00398 &#32;&#32;&#32;&#32;<link linkend="_class_integer_token_1ab1ee2a5de4630d98a7d9cd6351947927">IntegerToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00399"/><link linkend="_class_integer_token_1ae2125154d69dda08817a461786e8b9c6">00399</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_integer_token_1ae2125154d69dda08817a461786e8b9c6">intToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00400"/>00400 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_integer_token_1a879058f4e3d138165efd66bcf46cfdf7">getDataType</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00401"/>00401 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_integer_token_1ac31b66dbfeaf1298537cbe6c21df1b4f">handleCp</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00402"/>00402 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_integer_token_1a33e827ea234b1c0b5b305b5857331960">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00403"/>00403 };
<anchor xml:id="__interpretor_8h_source_1l00404"/>00404 
<anchor xml:id="__interpretor_8h_source_1l00405"/><link linkend="_class_float_token">00405</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_float_token">FloatToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_e_k_p_token">EKPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00406"/>00406 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00407"/>00407 &#32;&#32;&#32;&#32;<link linkend="_class_float_token_1ac8c34bb808d391d316bcd3a7094bc98a">FloatToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00408"/>00408 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_float_token_1acd02252e5f8e5d0eba5f3d23f647d2c2">handleCp</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00409"/>00409 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_float_token_1a298ff5025132041ec4356af92e79a1bc">getDataType</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00410"/><link linkend="_class_float_token_1ad9c85537da9f13181c11a6b715fd9e3c">00410</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_float_token_1ad9c85537da9f13181c11a6b715fd9e3c">floatToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00411"/>00411 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_float_token_1af10a6ccf3e8f957f3926d837160bc429">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00412"/>00412 };
<anchor xml:id="__interpretor_8h_source_1l00413"/>00413 
<anchor xml:id="__interpretor_8h_source_1l00414"/><link linkend="_class_bool_token">00414</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_bool_token">BoolToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_e_k_p_token">EKPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00415"/>00415 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00416"/>00416 &#32;&#32;&#32;&#32;<link linkend="_class_bool_token_1a230b4c663f336dfe394307a4f5eaf4c9">BoolToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00417"/>00417 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_bool_token_1a63b853332ad1212e93334291e995d2ca">handleCp</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00418"/><link linkend="_class_bool_token_1ac12b05810b85e3b523e62c1021f27931">00418</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_bool_token_1ac12b05810b85e3b523e62c1021f27931">boolToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00419"/>00419 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_bool_token_1ac36af9eaf07bd532297437ee0290da30">getDataType</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00420"/>00420 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_bool_token_1ae9094e6512fb1f196d3ee7b456556e69">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00421"/>00421 };
<anchor xml:id="__interpretor_8h_source_1l00422"/><link linkend="_class_string_token">00422</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_string_token">StringToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_e_k_p_token">EKPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00423"/>00423 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00424"/>00424 
<anchor xml:id="__interpretor_8h_source_1l00425"/>00425 &#32;&#32;&#32;&#32;<link linkend="_class_string_token_1a4d387ee58a3492caf7cc5b5c69ea1577">StringToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00426"/>00426 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_string_token_1a75a4182fa9fd3c6e287fd8dddc366762">handleCp</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>);
<anchor xml:id="__interpretor_8h_source_1l00427"/><link linkend="_class_string_token_1ab768b8533ae582f827befc327bb4387e">00427</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_string_token_1ab768b8533ae582f827befc327bb4387e">stringToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00428"/>00428 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_string_token_1a1dbc21181980b768c55acb13d0213601">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00429"/>00429 };
<anchor xml:id="__interpretor_8h_source_1l00430"/><link linkend="_class_coord_token">00430</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_coord_token">CoordToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_e_k_p_token">EKPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00431"/>00431 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00432"/>00432 &#32;&#32;&#32;&#32;<link linkend="_class_coord_token_1a3540101def18b72bc447578fa6efc39f">CoordToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00433"/>00433 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_coord_token_1ab48d66922a8f08a8cf2f84b8d626e085">getDataType</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00434"/><link linkend="_class_coord_token_1a21470f2dfdc0677999da55c3731c1b4a">00434</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_coord_token_1a21470f2dfdc0677999da55c3731c1b4a">xPoint</link>;
<anchor xml:id="__interpretor_8h_source_1l00435"/><link linkend="_class_coord_token_1ac1290944990250ad960c7004a7eef459">00435</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_coord_token_1ac1290944990250ad960c7004a7eef459">yPoint</link>;
<anchor xml:id="__interpretor_8h_source_1l00436"/><link linkend="_class_coord_token_1a1da90086131fc87de755754d41ecbf41">00436</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_coord_token_1a1da90086131fc87de755754d41ecbf41">coordToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00437"/>00437 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_coord_token_1a73b59fd963fc06d9691307e4f8db3a70">handleCp</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00438"/>00438 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_coord_token_1a3399a3cb18d077bb51dbfc13b12bf642">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00439"/>00439 };
<anchor xml:id="__interpretor_8h_source_1l00440"/>00440 
<anchor xml:id="__interpretor_8h_source_1l00441"/><link linkend="_class_zone_token">00441</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_zone_token">ZoneToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_e_k_p_token">EKPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00442"/>00442 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00443"/>00443 &#32;&#32;&#32;&#32;<link linkend="_class_zone_token_1aa3c56031d3943698209e5e5b16fca705">ZoneToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00444"/>00444 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_zone_token_1adbf3a11a1bcecda9ede8f5b43fdfdb56">getDataType</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00445"/><link linkend="_class_zone_token_1ab04473b2a544a8c989cc36636a0ca1fe">00445</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_zone_token_1ab04473b2a544a8c989cc36636a0ca1fe">topLeft</link>;
<anchor xml:id="__interpretor_8h_source_1l00446"/><link linkend="_class_zone_token_1a470e67610ee539fb9ef8116c7b11674f">00446</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_zone_token_1a470e67610ee539fb9ef8116c7b11674f">bottomRight</link>;
<anchor xml:id="__interpretor_8h_source_1l00447"/><link linkend="_class_zone_token_1a6393e6a8f503370941ecde68361e1f4f">00447</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_zone_token_1a6393e6a8f503370941ecde68361e1f4f">zoneToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00448"/>00448 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_zone_token_1a896e13f73755782e2ac32543beadc429">handleCp</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00449"/>00449 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_zone_token_1a9c4b24525c5f7b3b6a502662d3a4f31c">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00450"/>00450 };
<anchor xml:id="__interpretor_8h_source_1l00451"/>00451 
<anchor xml:id="__interpretor_8h_source_1l00452"/><link linkend="_class_direction_token">00452</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_direction_token">DirectionToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_e_k_p_token">EKPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00453"/>00453 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00454"/>00454 &#32;&#32;&#32;&#32;<link linkend="_class_direction_token_1aa4defb606ee71a120de033877d441b7f">DirectionToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00455"/><link linkend="_class_direction_token_1ab0ec7aa97a8f96ef83875e9174931aa4">00455</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_direction_token_1ab0ec7aa97a8f96ef83875e9174931aa4">dirToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00456"/>00456 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Token&gt;&#32;<link linkend="_class_direction_token_1a7871329df529c15890f973f5cb37cc41">handleCp</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00457"/>00457 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_direction_token_1a6666932ae4f403b4ce21ea406e633f97">getDataType</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00458"/>00458 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_direction_token_1a124c7609d3a4d859d6ef466cf03034b6">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00459"/>00459 };
<anchor xml:id="__interpretor_8h_source_1l00460"/>00460 
<anchor xml:id="__interpretor_8h_source_1l00461"/><link linkend="_class_compare_token">00461</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_compare_token">CompareToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_k_p_token">KPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00462"/>00462 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00463"/>00463 &#32;&#32;&#32;&#32;<link linkend="_class_compare_token_1a20829f6e8ec72cd4c9c239f20ac795b3">CompareToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00464"/>00464 &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_compare_token_1aa97ce5363e522dab34e83c34c45d8be1">getDataType</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00465"/><link linkend="_class_compare_token_1ae5422bfa00705d74664db93db1b04c4f">00465</link> &#32;&#32;&#32;&#32;std::vector&lt;std::shared_ptr&lt;Token&gt;&gt;&#32;<link linkend="_class_compare_token_1ae5422bfa00705d74664db93db1b04c4f">listTokens</link>;
<anchor xml:id="__interpretor_8h_source_1l00466"/><link linkend="_class_compare_token_1af14333d1e73b5ca964889bb43455010a">00466</link> &#32;&#32;&#32;&#32;<link linkend="__tags_8h_1afbc5396d9a88c41d6aeb522b9f06f426">CompareType</link>&#32;<link linkend="_class_compare_token_1af14333d1e73b5ca964889bb43455010a">cmpType</link>;
<anchor xml:id="__interpretor_8h_source_1l00467"/><link linkend="_class_compare_token_1a03488c79224ca6dd3c1e824a1ee13198">00467</link> &#32;&#32;&#32;&#32;<link linkend="__interpretor_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_compare_token_1a03488c79224ca6dd3c1e824a1ee13198">valuesType</link>;
<anchor xml:id="__interpretor_8h_source_1l00468"/>00468 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_compare_token_1ac71c9bacc5349631b6e4972746934d48">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00469"/>00469 };
<anchor xml:id="__interpretor_8h_source_1l00470"/>00470 
<anchor xml:id="__interpretor_8h_source_1l00471"/>00471 
<anchor xml:id="__interpretor_8h_source_1l00472"/>00472 
<anchor xml:id="__interpretor_8h_source_1l00473"/><link linkend="_class_print_token">00473</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_print_token">PrintToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_k_p_token">KPToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00474"/>00474 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00475"/>00475 &#32;&#32;&#32;&#32;<link linkend="_class_print_token_1a3a58305f4f8a92f90fcca62aa4544db8">PrintToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00476"/>00476 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_print_token_1a9e4931aa23c45ae8947c9a2258981fa3">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00477"/>00477 };
<anchor xml:id="__interpretor_8h_source_1l00478"/>00478 
<anchor xml:id="__interpretor_8h_source_1l00479"/><link linkend="_class_break_token">00479</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_break_token">BreakToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_k_token">KToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00480"/>00480 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00481"/>00481 &#32;&#32;&#32;&#32;<link linkend="_class_break_token_1a87c201c9b7d271136bd63d7256a62b19">BreakToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00482"/>00482 &#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;TokenResult&gt;&#32;<link linkend="_class_break_token_1af33466835286c8736861de37184073e9">addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00483"/>00483 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_break_token_1a623e413d2ea0c720de427739602b2002">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00484"/>00484 };
<anchor xml:id="__interpretor_8h_source_1l00485"/>00485 
<anchor xml:id="__interpretor_8h_source_1l00486"/><link linkend="_class_continue_token">00486</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_continue_token">ContinueToken</link>&#32;:<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_k_token">KToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00487"/>00487 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00488"/>00488 &#32;&#32;&#32;&#32;<link linkend="_class_continue_token_1a13d28523acec8f04193ce06919127a0a">ContinueToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00489"/>00489 &#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;TokenResult&gt;&#32;<link linkend="_class_continue_token_1a139b728b49c813acb14f990a31054f5e">addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_token_1a374f334f070a5a07daf0bbde3be02ced">tRes</link>)<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00490"/>00490 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_continue_token_1aa9fad99e91e2fb23af6fed27c815b01f">execute</link>()<emphasis role="keyword">override</emphasis>;
<anchor xml:id="__interpretor_8h_source_1l00491"/>00491 };
<anchor xml:id="__interpretor_8h_source_1l00492"/>00492 
<anchor xml:id="__interpretor_8h_source_1l00493"/><link linkend="_class_open_parenthesis_token">00493</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_open_parenthesis_token">OpenParenthesisToken</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_p_token">PToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00494"/>00494 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00495"/>00495 &#32;&#32;&#32;&#32;<link linkend="_class_open_parenthesis_token_1a47a89050befd5ba73d4742338688584f">OpenParenthesisToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00496"/>00496 };
<anchor xml:id="__interpretor_8h_source_1l00497"/>00497 
<anchor xml:id="__interpretor_8h_source_1l00498"/><link linkend="_class_close_parenthesis_token">00498</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_close_parenthesis_token">CloseParenthesisToken</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_p_token">PToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00499"/>00499 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00500"/>00500 &#32;&#32;&#32;&#32;<link linkend="_class_close_parenthesis_token_1a19722cdf09d45d79725d6e8227ccd2ce">CloseParenthesisToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00501"/>00501 };
<anchor xml:id="__interpretor_8h_source_1l00502"/>00502 
<anchor xml:id="__interpretor_8h_source_1l00503"/><link linkend="_class_close_brackets_token">00503</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_close_brackets_token">CloseBracketsToken</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_p_token">PToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00504"/>00504 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00505"/>00505 &#32;&#32;&#32;&#32;<link linkend="_class_close_brackets_token_1a804df0a59ddcffeff2c90a25e036f672">CloseBracketsToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00506"/>00506 };
<anchor xml:id="__interpretor_8h_source_1l00507"/>00507 
<anchor xml:id="__interpretor_8h_source_1l00508"/><link linkend="_class_open_brackets_token">00508</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_open_brackets_token">OpenBracketsToken</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_p_token">PToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00509"/>00509 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00510"/>00510 &#32;&#32;&#32;&#32;<link linkend="_class_open_brackets_token_1abe41351997882bec5477c775f5bc1673">OpenBracketsToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00511"/>00511 };
<anchor xml:id="__interpretor_8h_source_1l00512"/>00512 
<anchor xml:id="__interpretor_8h_source_1l00513"/><link linkend="_class_close_angle_brackets_token">00513</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_close_angle_brackets_token">CloseAngleBracketsToken</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_p_token">PToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00514"/>00514 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00515"/>00515 &#32;&#32;&#32;&#32;<link linkend="_class_close_angle_brackets_token_1a2009810627062cc4676f13c689e5c383">CloseAngleBracketsToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00516"/>00516 };
<anchor xml:id="__interpretor_8h_source_1l00517"/>00517 
<anchor xml:id="__interpretor_8h_source_1l00518"/><link linkend="_class_open_angle_brackets_token">00518</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_open_angle_brackets_token">OpenAngleBracketsToken</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_p_token">PToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00519"/>00519 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00520"/>00520 &#32;&#32;&#32;&#32;<link linkend="_class_open_angle_brackets_token_1a64a65c59aebef72567fcb68046362e9f">OpenAngleBracketsToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00521"/>00521 };
<anchor xml:id="__interpretor_8h_source_1l00522"/>00522 
<anchor xml:id="__interpretor_8h_source_1l00523"/><link linkend="_class_comma_token">00523</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_comma_token">CommaToken</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_p_token">PToken</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00524"/>00524 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00525"/>00525 &#32;&#32;&#32;&#32;<link linkend="_class_comma_token_1abc5636c6b36a649ebed92d14ab3e6419">CommaToken</link>();
<anchor xml:id="__interpretor_8h_source_1l00526"/>00526 };
<anchor xml:id="__interpretor_8h_source_1l00527"/>00527 
<anchor xml:id="__interpretor_8h_source_1l00528"/>00528 
<anchor xml:id="__interpretor_8h_source_1l00529"/>00529 
<anchor xml:id="__interpretor_8h_source_1l00530"/>00530 
<anchor xml:id="__interpretor_8h_source_1l00531"/>00531 std::shared_ptr&lt;Token&gt;&#32;<link linkend="__interpretor_8h_1a7e41e92472c2a2c1aafa174217d4734f">getToken</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text);
<anchor xml:id="__interpretor_8h_source_1l00532"/>00532 
<anchor xml:id="__interpretor_8h_source_1l00533"/>00533 std::shared_ptr&lt;Token&gt;&#32;<link linkend="__interpretor_8h_1a7e41e92472c2a2c1aafa174217d4734f">getToken</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&amp;&#32;tValue,<emphasis role="keyword">const</emphasis>&#32;std::string&amp;text);
<anchor xml:id="__interpretor_8h_source_1l00534"/>00534 
<anchor xml:id="__interpretor_8h_source_1l00535"/>00535 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isSpaceToken(std::string&amp;&#32;c);
<anchor xml:id="__interpretor_8h_source_1l00536"/>00536 
<anchor xml:id="__interpretor_8h_source_1l00537"/>00537 
<anchor xml:id="__interpretor_8h_source_1l00538"/>00538 
<anchor xml:id="__interpretor_8h_source_1l00539"/><link linkend="_class_lexer">00539</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_lexer">Lexer</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00540"/>00540 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00541"/>00541 &#32;&#32;&#32;&#32;<link linkend="_class_lexer_1a2752a2b16cc1ffbcb8fc3e82e95bf331">Lexer</link>();
<anchor xml:id="__interpretor_8h_source_1l00542"/>00542 &#32;&#32;&#32;&#32;<link linkend="_class_lexer_1a2752a2b16cc1ffbcb8fc3e82e95bf331">Lexer</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text);
<anchor xml:id="__interpretor_8h_source_1l00543"/><link linkend="_class_lexer_1a4a8dcaa4abeabbfb67122d79b861d6de">00543</link> &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_class_lexer_1a4a8dcaa4abeabbfb67122d79b861d6de">nameToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00544"/><link linkend="_class_lexer_1a8a81c9e13952e5afda794af56ba46455">00544</link> &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_class_lexer_1a8a81c9e13952e5afda794af56ba46455">totalContent</link>;
<anchor xml:id="__interpretor_8h_source_1l00545"/><link linkend="_class_lexer_1a5aaf781571efdb75f4f689ec4c219fc0">00545</link> &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_class_lexer_1a5aaf781571efdb75f4f689ec4c219fc0">updatedContent</link>;
<anchor xml:id="__interpretor_8h_source_1l00546"/>00546 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_lexer_1a142db843cfdc2ef25cf8e59c7b209861">empty</link>();
<anchor xml:id="__interpretor_8h_source_1l00547"/>00547 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_lexer_1ab0ca8b5adc1af3cdec4855fba11491c1">extractTokens</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;text);
<anchor xml:id="__interpretor_8h_source_1l00548"/><link linkend="_class_lexer_1a5147254cee0022d532a50e683a3fa688">00548</link> &#32;&#32;&#32;&#32;std::vector&lt;std::shared_ptr&lt;Token&gt;&gt;&#32;<link linkend="_class_lexer_1a5147254cee0022d532a50e683a3fa688">listTokens</link>;
<anchor xml:id="__interpretor_8h_source_1l00549"/>00549 &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_class_lexer_1a5a008a99eb5bc34590b62a99ea9065c3">showAllTokens</link>();
<anchor xml:id="__interpretor_8h_source_1l00550"/><link linkend="_class_lexer_1a3fea0d83414fdefc952e215be92e756e">00550</link> &#32;&#32;&#32;&#32;<link linkend="_struct_user_variables">UserVariables</link>*&#32;<link linkend="_class_lexer_1a3fea0d83414fdefc952e215be92e756e">uv</link>;
<anchor xml:id="__interpretor_8h_source_1l00551"/>00551 };
<anchor xml:id="__interpretor_8h_source_1l00552"/>00552 
<anchor xml:id="__interpretor_8h_source_1l00553"/>00553 
<anchor xml:id="__interpretor_8h_source_1l00554"/>00554 
<anchor xml:id="__interpretor_8h_source_1l00555"/>00555 
<anchor xml:id="__interpretor_8h_source_1l00556"/><link linkend="_class_interpretor">00556</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_interpretor">Interpretor</link>&#32;{
<anchor xml:id="__interpretor_8h_source_1l00557"/>00557 
<anchor xml:id="__interpretor_8h_source_1l00558"/>00558 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__interpretor_8h_source_1l00559"/>00559 
<anchor xml:id="__interpretor_8h_source_1l00560"/>00560 &#32;&#32;&#32;&#32;<link linkend="_class_interpretor_1ae1c703a0f32d7f063dd5f46f89018255">Interpretor</link>();
<anchor xml:id="__interpretor_8h_source_1l00561"/>00561 &#32;&#32;&#32;&#32;<link linkend="_class_interpretor_1ae1c703a0f32d7f063dd5f46f89018255">Interpretor</link>(std::string&#32;folder);
<anchor xml:id="__interpretor_8h_source_1l00562"/>00562 &#32;&#32;&#32;&#32;<link linkend="_class_interpretor_1a9592d800744d237aea6a91dbf44bdb80">~Interpretor</link>();
<anchor xml:id="__interpretor_8h_source_1l00563"/>00563 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interpretor_1a860d7cc665a3202f6f462dc1293fe5e6">readActivityFile</link>(std::string&#32;ActivityName);
<anchor xml:id="__interpretor_8h_source_1l00564"/>00564 &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_class_interpretor_1a61ecb8df4ca776f58573955153f1b842">copyActivity</link>(std::filesystem::path&#32;ActivityName);
<anchor xml:id="__interpretor_8h_source_1l00565"/>00565 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_interpretor_1a51befa58f2bca099b38ee074be359f3d">getActivityTag</link>();
<anchor xml:id="__interpretor_8h_source_1l00566"/>00566 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interpretor_1aa49f073000719629567f5563fc487836">createMainTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text);
<anchor xml:id="__interpretor_8h_source_1l00567"/><link linkend="_class_interpretor_1a6047e27b007f05c73a917a1acbb9e4e6">00567</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;MainToken&gt;&#32;<link linkend="_class_interpretor_1a6047e27b007f05c73a917a1acbb9e4e6">mainToken</link>;
<anchor xml:id="__interpretor_8h_source_1l00568"/><link linkend="_class_interpretor_1a9f3b79e228492d9b54ab4f96dc068bac">00568</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;MainTag&gt;&#32;<link linkend="_class_interpretor_1a9f3b79e228492d9b54ab4f96dc068bac">mainTag</link>;
<anchor xml:id="__interpretor_8h_source_1l00569"/><link linkend="_class_interpretor_1abac4c2fa228b8056804feb6498a75798">00569</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;Lexer&gt;&#32;<link linkend="_class_interpretor_1abac4c2fa228b8056804feb6498a75798">mainStack</link>;
<anchor xml:id="__interpretor_8h_source_1l00570"/><link linkend="_class_interpretor_1a3478998b0244a81ee6fc8c51baec47d6">00570</link> &#32;&#32;&#32;&#32;<link linkend="_struct_user_variables">UserVariables</link>&#32;<link linkend="_class_interpretor_1a3478998b0244a81ee6fc8c51baec47d6">uv</link>;
<anchor xml:id="__interpretor_8h_source_1l00571"/><link linkend="_class_interpretor_1a822ce37652e007c938ad45edc3e7a1bb">00571</link> &#32;&#32;&#32;&#32;std::shared_ptr&lt;TokenResult&gt;&#32;<link linkend="_class_interpretor_1a822ce37652e007c938ad45edc3e7a1bb">tr</link>;
<anchor xml:id="__interpretor_8h_source_1l00572"/><link linkend="_class_interpretor_1a4cd759828967910afe67c7f4ddd1bbda">00572</link> &#32;&#32;&#32;&#32;<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&#32;<link linkend="_class_interpretor_1a4cd759828967910afe67c7f4ddd1bbda">tl</link>;
<anchor xml:id="__interpretor_8h_source_1l00573"/><link linkend="_class_interpretor_1ab6858c07200eaab9b1060663149aefee">00573</link> &#32;&#32;&#32;&#32;<link linkend="_class_lexer">Lexer</link>&#32;<link linkend="_class_interpretor_1ab6858c07200eaab9b1060663149aefee">lex</link>;
<anchor xml:id="__interpretor_8h_source_1l00574"/><link linkend="_class_interpretor_1a84426d5bbc8f8cabc1a21458a9eb04ad">00574</link> &#32;&#32;&#32;&#32;std::filesystem::path&#32;<link linkend="_class_interpretor_1a84426d5bbc8f8cabc1a21458a9eb04ad">ActivityFolder</link>;
<anchor xml:id="__interpretor_8h_source_1l00575"/>00575 };
<anchor xml:id="__interpretor_8h_source_1l00576"/>00576 
</programlisting></section>
