<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__interpretor_8cpp" xml:lang="en-US">
<title>src/Interpretor.cpp File Reference</title>
<indexterm><primary>src/Interpretor.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;Interpretor.h&quot;<?linebreak?></programlisting>Include dependency graph for Interpretor.cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp__incl.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1ad42767aaf8252eb57581d009530bd527">isTokenString</link> (const std::string &amp;text)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1a3276e6efe4a3f409262ffe0b345e9636">isKeywordString</link> (const std::string &amp;text)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1add26727275e38a1c0054c4baa0c2662a">isBooleanToken</link> (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp;token)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1aec0df2353787cc680461682d1d76e4ff">isNumericToken</link> (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp;token)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1a46ef193bb5ca69f1c3333042917a93bf">isTimeTypeToken</link> (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp;token)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1ab2efcdda00b3a9b0a300553dc78d1fbd">isStringToken</link> (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp;token)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1a40f9b1829e7de9bd4d9522c575baca2c">isIntegerToken</link> (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp;token)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1abfaf0794a6bff6410b3ec7aa59251549">isBoolToken</link> (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp;token)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1a6ff2c6b83000da7ed17cba0b3f8e326f">isCoordToken</link> (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp;token)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1a0916bdca9f86432f19dba325a765a138">isDirectionToken</link> (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp;token)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1a0dd9b1dce01c40a60d47ba1d5533a850">isFloatToken</link> (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp;token)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1ac85f7e2fe47e049ac6a0f86ba22c9923">isZoneToken</link> (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp;token)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1ae8bab56314c8b787497a84c189b9114d">isLiteralString</link> (const std::string &amp;text)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1ad93eecc58b3fdba57ba605dcb296f03e">isPunctuationString</link> (const std::string &amp;text)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1ae80d3823673e42ed3ce7e84597bbd552">isOperatorString</link> (const std::string &amp;text)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1a38a3bc682b32b85fc40cda646569d271">isTokenStringContained</link> (const std::string &amp;text)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1a3de0a259acea81f7a880327324e53e4b">isWhitespace</link> (const char &amp;c)</para>
</listitem>
            <listitem><para>std::string <link linkend="__interpretor_8cpp_1a226930df4269e20dd367d4b70f0ad457">getNextNumeric</link> (const std::string str)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1aaa3b01d6b7b6b5bf4b868b37fcf3ac6f">isNumber</link> (const std::string &amp;s)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1a32fa5cbc79c968c5b53e8303ad77091d">isIdentifier</link> (const std::string &amp;s)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1a910f9c92b4e541a09214dedd7338b6b5">isIdentifier</link> (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp;token)</para>
</listitem>
            <listitem><para>void <link linkend="__interpretor_8cpp_1aa6913b7fe272fe20684f1c5c701d54d7">skipSpace</link> (std::string &amp;text)</para>
</listitem>
            <listitem><para>std::string <link linkend="__interpretor_8cpp_1a44cd9137229f6cc0f965ce359f482379">getNextPunctuationToken</link> (const std::string &amp;str)</para>
</listitem>
            <listitem><para>std::string <link linkend="__interpretor_8cpp_1aeadcc798628a739f30945ade9bf7c9a1">getNextTokenString</link> (const std::string &amp;text)</para>
</listitem>
            <listitem><para>void <link linkend="__interpretor_8cpp_1ac4b7c24de418895778c317466f485ce5">getPastTokenString</link> (std::string &amp;text, const std::string tokenText)</para>
</listitem>
            <listitem><para><link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link> <link linkend="__interpretor_8cpp_1a1efffcc83c5a23c247b70fca364ece06">getNextTokenValue</link> (const std::string &amp;text)</para>
</listitem>
            <listitem><para>std::string <link linkend="__interpretor_8cpp_1a426cbd25cc7742ac6cface09364031ba">getStringLiteral</link> (std::string &amp;text)</para>
</listitem>
            <listitem><para>std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; <link linkend="__interpretor_8cpp_1aa3e235e0cfc2dd090f76c893bbb5078c">getStringLiteralToken</link> (std::string &amp;stringLiteral)</para>
</listitem>
            <listitem><para><link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link> <link linkend="__interpretor_8cpp_1a0060c66efc18253619637b287095821c">getTokenValue</link> (const std::string &amp;text)</para>
</listitem>
            <listitem><para>std::string <link linkend="__interpretor_8cpp_1a2368ff9f88ff6f6529bd474e94d3ef7c">getTokenString</link> (<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link> value)</para>
</listitem>
            <listitem><para>std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; <link linkend="__interpretor_8cpp_1a7e41e92472c2a2c1aafa174217d4734f">getToken</link> (const std::string &amp;text)</para>
</listitem>
            <listitem><para>std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; <link linkend="__interpretor_8cpp_1a7e77c38c7369e6bffb038003c5083888">getToken</link> (const <link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link> &amp;tValue, const std::string &amp;text)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1abcc4565ee1966ac13a3f10b4f9a878ba">isValue</link> (std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; token)</para>
</listitem>
            <listitem><para>bool <link linkend="__interpretor_8cpp_1aeae120e34ddae125123ab27fd7a2eeb3">isType</link> (std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; token)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="__interpretor_8cpp_1a226930df4269e20dd367d4b70f0ad457"/><section>
    <title>getNextNumeric()</title>
<indexterm><primary>getNextNumeric</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>getNextNumeric</secondary></indexterm>
<para><computeroutput>std::string getNextNumeric (const std::string str)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00116">116</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
</section>
<anchor xml:id="__interpretor_8cpp_1a44cd9137229f6cc0f965ce359f482379"/><section>
    <title>getNextPunctuationToken()</title>
<indexterm><primary>getNextPunctuationToken</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>getNextPunctuationToken</secondary></indexterm>
<para><computeroutput>std::string getNextPunctuationToken (const std::string &amp; str)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00154">154</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_a44cd9137229f6cc0f965ce359f482379_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1aeadcc798628a739f30945ade9bf7c9a1"/><section>
    <title>getNextTokenString()</title>
<indexterm><primary>getNextTokenString</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>getNextTokenString</secondary></indexterm>
<para><computeroutput>std::string getNextTokenString (const std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00171">171</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_aeadcc798628a739f30945ade9bf7c9a1_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_aeadcc798628a739f30945ade9bf7c9a1_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1a1efffcc83c5a23c247b70fca364ece06"/><section>
    <title>getNextTokenValue()</title>
<indexterm><primary>getNextTokenValue</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>getNextTokenValue</secondary></indexterm>
<para><computeroutput><link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link> getNextTokenValue (const std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00189">189</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_a1efffcc83c5a23c247b70fca364ece06_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1ac4b7c24de418895778c317466f485ce5"/><section>
    <title>getPastTokenString()</title>
<indexterm><primary>getPastTokenString</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>getPastTokenString</secondary></indexterm>
<para><computeroutput>void getPastTokenString (std::string &amp; text, const std::string tokenText)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00184">184</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_ac4b7c24de418895778c317466f485ce5_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_ac4b7c24de418895778c317466f485ce5_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1a426cbd25cc7742ac6cface09364031ba"/><section>
    <title>getStringLiteral()</title>
<indexterm><primary>getStringLiteral</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>getStringLiteral</secondary></indexterm>
<para><computeroutput>std::string getStringLiteral (std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00194">194</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_a426cbd25cc7742ac6cface09364031ba_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_a426cbd25cc7742ac6cface09364031ba_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1aa3e235e0cfc2dd090f76c893bbb5078c"/><section>
    <title>getStringLiteralToken()</title>
<indexterm><primary>getStringLiteralToken</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>getStringLiteralToken</secondary></indexterm>
<para><computeroutput>std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; getStringLiteralToken (std::string &amp; stringLiteral)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00200">200</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
</section>
<anchor xml:id="__interpretor_8cpp_1a7e41e92472c2a2c1aafa174217d4734f"/><section>
    <title>getToken()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>getToken</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>getToken</secondary></indexterm>
<para><computeroutput>std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; getToken (const std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00441">441</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_a7e41e92472c2a2c1aafa174217d4734f_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_a7e41e92472c2a2c1aafa174217d4734f_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1a7e77c38c7369e6bffb038003c5083888"/><section>
    <title>getToken()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>getToken</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>getToken</secondary></indexterm>
<para><computeroutput>std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; getToken (const <link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link> &amp; tValue, const std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00444">444</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
</section>
<anchor xml:id="__interpretor_8cpp_1a2368ff9f88ff6f6529bd474e94d3ef7c"/><section>
    <title>getTokenString()</title>
<indexterm><primary>getTokenString</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>getTokenString</secondary></indexterm>
<para><computeroutput>std::string getTokenString (<link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link> value)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00356">356</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
</section>
<anchor xml:id="__interpretor_8cpp_1a0060c66efc18253619637b287095821c"/><section>
    <title>getTokenValue()</title>
<indexterm><primary>getTokenValue</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>getTokenValue</secondary></indexterm>
<para><computeroutput><link linkend="__interpretor_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link> getTokenValue (const std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00225">225</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_a0060c66efc18253619637b287095821c_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_a0060c66efc18253619637b287095821c_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1add26727275e38a1c0054c4baa0c2662a"/><section>
    <title>isBooleanToken()</title>
<indexterm><primary>isBooleanToken</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isBooleanToken</secondary></indexterm>
<para><computeroutput>bool isBooleanToken (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp; token)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00015">15</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_add26727275e38a1c0054c4baa0c2662a_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1abfaf0794a6bff6410b3ec7aa59251549"/><section>
    <title>isBoolToken()</title>
<indexterm><primary>isBoolToken</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isBoolToken</secondary></indexterm>
<para><computeroutput>bool isBoolToken (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp; token)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00050">50</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_abfaf0794a6bff6410b3ec7aa59251549_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1a6ff2c6b83000da7ed17cba0b3f8e326f"/><section>
    <title>isCoordToken()</title>
<indexterm><primary>isCoordToken</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isCoordToken</secondary></indexterm>
<para><computeroutput>bool isCoordToken (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp; token)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00056">56</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_a6ff2c6b83000da7ed17cba0b3f8e326f_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1a0916bdca9f86432f19dba325a765a138"/><section>
    <title>isDirectionToken()</title>
<indexterm><primary>isDirectionToken</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isDirectionToken</secondary></indexterm>
<para><computeroutput>bool isDirectionToken (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp; token)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00062">62</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_a0916bdca9f86432f19dba325a765a138_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1a0dd9b1dce01c40a60d47ba1d5533a850"/><section>
    <title>isFloatToken()</title>
<indexterm><primary>isFloatToken</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isFloatToken</secondary></indexterm>
<para><computeroutput>bool isFloatToken (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp; token)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00068">68</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_a0dd9b1dce01c40a60d47ba1d5533a850_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1a910f9c92b4e541a09214dedd7338b6b5"/><section>
    <title>isIdentifier()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>isIdentifier</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isIdentifier</secondary></indexterm>
<para><computeroutput>bool isIdentifier (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp; token)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00143">143</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
</section>
<anchor xml:id="__interpretor_8cpp_1a32fa5cbc79c968c5b53e8303ad77091d"/><section>
    <title>isIdentifier()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>isIdentifier</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isIdentifier</secondary></indexterm>
<para><computeroutput>bool isIdentifier (const std::string &amp; s)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00133">133</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_a32fa5cbc79c968c5b53e8303ad77091d_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_a32fa5cbc79c968c5b53e8303ad77091d_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1a40f9b1829e7de9bd4d9522c575baca2c"/><section>
    <title>isIntegerToken()</title>
<indexterm><primary>isIntegerToken</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isIntegerToken</secondary></indexterm>
<para><computeroutput>bool isIntegerToken (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp; token)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00044">44</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_a40f9b1829e7de9bd4d9522c575baca2c_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1a3276e6efe4a3f409262ffe0b345e9636"/><section>
    <title>isKeywordString()</title>
<indexterm><primary>isKeywordString</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isKeywordString</secondary></indexterm>
<para><computeroutput>bool isKeywordString (const std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00008">8</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_a3276e6efe4a3f409262ffe0b345e9636_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1ae8bab56314c8b787497a84c189b9114d"/><section>
    <title>isLiteralString()</title>
<indexterm><primary>isLiteralString</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isLiteralString</secondary></indexterm>
<para><computeroutput>bool isLiteralString (const std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00081">81</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_ae8bab56314c8b787497a84c189b9114d_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1aaa3b01d6b7b6b5bf4b868b37fcf3ac6f"/><section>
    <title>isNumber()</title>
<indexterm><primary>isNumber</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isNumber</secondary></indexterm>
<para><computeroutput>bool isNumber (const std::string &amp; s)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00126">126</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_aaa3b01d6b7b6b5bf4b868b37fcf3ac6f_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1aec0df2353787cc680461682d1d76e4ff"/><section>
    <title>isNumericToken()</title>
<indexterm><primary>isNumericToken</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isNumericToken</secondary></indexterm>
<para><computeroutput>bool isNumericToken (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp; token)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00022">22</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_aec0df2353787cc680461682d1d76e4ff_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1ae80d3823673e42ed3ce7e84597bbd552"/><section>
    <title>isOperatorString()</title>
<indexterm><primary>isOperatorString</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isOperatorString</secondary></indexterm>
<para><computeroutput>bool isOperatorString (const std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00097">97</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_ae80d3823673e42ed3ce7e84597bbd552_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1ad93eecc58b3fdba57ba605dcb296f03e"/><section>
    <title>isPunctuationString()</title>
<indexterm><primary>isPunctuationString</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isPunctuationString</secondary></indexterm>
<para><computeroutput>bool isPunctuationString (const std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00089">89</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_ad93eecc58b3fdba57ba605dcb296f03e_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1ab2efcdda00b3a9b0a300553dc78d1fbd"/><section>
    <title>isStringToken()</title>
<indexterm><primary>isStringToken</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isStringToken</secondary></indexterm>
<para><computeroutput>bool isStringToken (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp; token)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00037">37</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_ab2efcdda00b3a9b0a300553dc78d1fbd_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1a46ef193bb5ca69f1c3333042917a93bf"/><section>
    <title>isTimeTypeToken()</title>
<indexterm><primary>isTimeTypeToken</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isTimeTypeToken</secondary></indexterm>
<para><computeroutput>bool isTimeTypeToken (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp; token)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00030">30</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_a46ef193bb5ca69f1c3333042917a93bf_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1ad42767aaf8252eb57581d009530bd527"/><section>
    <title>isTokenString()</title>
<indexterm><primary>isTokenString</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isTokenString</secondary></indexterm>
<para><computeroutput>bool isTokenString (const std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00003">3</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_ad42767aaf8252eb57581d009530bd527_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_ad42767aaf8252eb57581d009530bd527_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1a38a3bc682b32b85fc40cda646569d271"/><section>
    <title>isTokenStringContained()</title>
<indexterm><primary>isTokenStringContained</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isTokenStringContained</secondary></indexterm>
<para><computeroutput>bool isTokenStringContained (const std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00105">105</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
</section>
<anchor xml:id="__interpretor_8cpp_1aeae120e34ddae125123ab27fd7a2eeb3"/><section>
    <title>isType()</title>
<indexterm><primary>isType</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isType</secondary></indexterm>
<para><computeroutput>bool isType (std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; token)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00769">769</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_aeae120e34ddae125123ab27fd7a2eeb3_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1abcc4565ee1966ac13a3f10b4f9a878ba"/><section>
    <title>isValue()</title>
<indexterm><primary>isValue</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isValue</secondary></indexterm>
<para><computeroutput>bool isValue (std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; token)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00765">765</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_abcc4565ee1966ac13a3f10b4f9a878ba_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1a3de0a259acea81f7a880327324e53e4b"/><section>
    <title>isWhitespace()</title>
<indexterm><primary>isWhitespace</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isWhitespace</secondary></indexterm>
<para><computeroutput>bool isWhitespace (const char &amp; c)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00112">112</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
</section>
<anchor xml:id="__interpretor_8cpp_1ac85f7e2fe47e049ac6a0f86ba22c9923"/><section>
    <title>isZoneToken()</title>
<indexterm><primary>isZoneToken</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>isZoneToken</secondary></indexterm>
<para><computeroutput>bool isZoneToken (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp; token)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00074">74</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_ac85f7e2fe47e049ac6a0f86ba22c9923_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__interpretor_8cpp_1aa6913b7fe272fe20684f1c5c701d54d7"/><section>
    <title>skipSpace()</title>
<indexterm><primary>skipSpace</primary><secondary>Interpretor.cpp</secondary></indexterm>
<indexterm><primary>Interpretor.cpp</primary><secondary>skipSpace</secondary></indexterm>
<para><computeroutput>void skipSpace (std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__interpretor_8cpp_source_1l00148">148</link> of file <link linkend="__interpretor_8cpp_source">Interpretor.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_interpretor_8cpp_aa6913b7fe272fe20684f1c5c701d54d7_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
