<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__tags_8cpp_source" xml:lang="en-US">
<title>Tags.cpp</title>
<indexterm><primary>src/Tags.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__tags_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__tags_8h">tags.h</link>&quot;</emphasis>
<anchor xml:id="__tags_8cpp_source_1l00002"/>00002 
<anchor xml:id="__tags_8cpp_source_1l00003"/>00003 
<anchor xml:id="__tags_8cpp_source_1l00004"/>00004 
<anchor xml:id="__tags_8cpp_source_1l00005"/><link linkend="_class_tag_1af2008705aa18e21efecb9e737b6b1a26">00005</link> <link linkend="_class_tag_1af2008705aa18e21efecb9e737b6b1a26">Tag::Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l00006"/>00006 {
<anchor xml:id="__tags_8cpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880ab0db3c4898b28269905a7a00a0133812">TAG</link>;
<anchor xml:id="__tags_8cpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a25aa826cd8818bcf0670164d285c3fdd">nbParents</link>&#32;=&#32;0;
<anchor xml:id="__tags_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>.clear();
<anchor xml:id="__tags_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a688d838bee273d203d6b16caaca3ed2b">doExecute</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00011"/>00011 }
<anchor xml:id="__tags_8cpp_source_1l00012"/>00012 
<anchor xml:id="__tags_8cpp_source_1l00013"/><link linkend="_class_tag_1a5955a7ef3228749f5d264581d5c612ab">00013</link> <link linkend="_class_tag_1af2008705aa18e21efecb9e737b6b1a26">Tag::Tag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_tag">Tag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l00014"/>00014 {
<anchor xml:id="__tags_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a688d838bee273d203d6b16caaca3ed2b">doExecute</link>&#32;=&#32;toCopy.<link linkend="_class_tag_1a688d838bee273d203d6b16caaca3ed2b">doExecute</link>;
<anchor xml:id="__tags_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a25aa826cd8818bcf0670164d285c3fdd">nbParents</link>&#32;=&#32;toCopy.<link linkend="_class_tag_1a25aa826cd8818bcf0670164d285c3fdd">nbParents</link>;
<anchor xml:id="__tags_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;toCopy.<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>;
<anchor xml:id="__tags_8cpp_source_1l00018"/>00018 
<anchor xml:id="__tags_8cpp_source_1l00019"/>00019 }
<anchor xml:id="__tags_8cpp_source_1l00020"/>00020 
<anchor xml:id="__tags_8cpp_source_1l00021"/>00021 
<anchor xml:id="__tags_8cpp_source_1l00022"/>00022 
<anchor xml:id="__tags_8cpp_source_1l00023"/><link linkend="_class_tag_1ae01465d32e9a52c777492048fd06bdd5">00023</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_tag_1ae01465d32e9a52c777492048fd06bdd5">Tag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;Tag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00025"/>00025 }&#32;
<anchor xml:id="__tags_8cpp_source_1l00026"/>00026 
<anchor xml:id="__tags_8cpp_source_1l00027"/><link linkend="_class_flow_tag_1aab4741be53f0357c81cfb05f800f387e">00027</link> std::shared_ptr&lt;FlowTag&gt;&#32;<link linkend="_class_flow_tag_1aab4741be53f0357c81cfb05f800f387e">FlowTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;FlowTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00029"/>00029 }
<anchor xml:id="__tags_8cpp_source_1l00030"/>00030 
<anchor xml:id="__tags_8cpp_source_1l00031"/><link linkend="_class_main_tag_1a8d32cbe9f42813c0b131575b8a0f7663">00031</link> std::shared_ptr&lt;MainTag&gt;&#32;<link linkend="_class_main_tag_1a8d32cbe9f42813c0b131575b8a0f7663">MainTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;MainTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00033"/>00033 }
<anchor xml:id="__tags_8cpp_source_1l00034"/>00034 
<anchor xml:id="__tags_8cpp_source_1l00035"/><link linkend="_class_do_loop_tag_1a79d0495ffbc33da8ca623d7f3d3c9cea">00035</link> std::shared_ptr&lt;DoLoopTag&gt;&#32;<link linkend="_class_do_loop_tag_1a79d0495ffbc33da8ca623d7f3d3c9cea">DoLoopTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;DoLoopTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00037"/>00037 }
<anchor xml:id="__tags_8cpp_source_1l00038"/>00038 
<anchor xml:id="__tags_8cpp_source_1l00039"/><link linkend="_class_if_tag_1af88791bec65c6834513c926d1b07a119">00039</link> std::shared_ptr&lt;IfTag&gt;&#32;<link linkend="_class_if_tag_1af88791bec65c6834513c926d1b07a119">IfTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;IfTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00041"/>00041 }
<anchor xml:id="__tags_8cpp_source_1l00042"/>00042 
<anchor xml:id="__tags_8cpp_source_1l00043"/><link linkend="_class_else_tag_1af3def34d4ac6a18ae6d6b02688d16f32">00043</link> std::shared_ptr&lt;ElseTag&gt;&#32;<link linkend="_class_else_tag_1af3def34d4ac6a18ae6d6b02688d16f32">ElseTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;ElseTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00045"/>00045 }
<anchor xml:id="__tags_8cpp_source_1l00046"/>00046 
<anchor xml:id="__tags_8cpp_source_1l00047"/><link linkend="_class_elif_tag_1a544c055c7b30fe1849b24230e41ff320">00047</link> std::shared_ptr&lt;ElifTag&gt;&#32;<link linkend="_class_elif_tag_1a544c055c7b30fe1849b24230e41ff320">ElifTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;ElifTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00049"/>00049 }
<anchor xml:id="__tags_8cpp_source_1l00050"/>00050 
<anchor xml:id="__tags_8cpp_source_1l00051"/><link linkend="_class_loop_tag_1a21f67e9bdd06193a0dfa1f0a3946aa06">00051</link> std::shared_ptr&lt;LoopTag&gt;&#32;<link linkend="_class_loop_tag_1a21f67e9bdd06193a0dfa1f0a3946aa06">LoopTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;LoopTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00053"/>00053 }
<anchor xml:id="__tags_8cpp_source_1l00054"/>00054 
<anchor xml:id="__tags_8cpp_source_1l00055"/><link linkend="_class_break_tag_1a739057f6ca0f693fc31985b99cbbe2c9">00055</link> std::shared_ptr&lt;BreakTag&gt;&#32;<link linkend="_class_break_tag_1a739057f6ca0f693fc31985b99cbbe2c9">BreakTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;BreakTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00057"/>00057 }
<anchor xml:id="__tags_8cpp_source_1l00058"/>00058 
<anchor xml:id="__tags_8cpp_source_1l00059"/><link linkend="_class_continue_tag_1a8a175e060912d5ee0dddc22822f5ad31">00059</link> std::shared_ptr&lt;ContinueTag&gt;&#32;<link linkend="_class_continue_tag_1a8a175e060912d5ee0dddc22822f5ad31">ContinueTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;ContinueTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00061"/>00061 }
<anchor xml:id="__tags_8cpp_source_1l00062"/>00062 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00063"/><link linkend="_class_store_tag_1a4d4f4c5c435bdb8c805a2d3809615d29">00063</link> std::shared_ptr&lt;StoreTag&lt;T&gt;&gt;&#32;<link linkend="_class_store_tag_1a4d4f4c5c435bdb8c805a2d3809615d29">StoreTag&lt;T&gt;::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;StoreTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00065"/>00065 }
<anchor xml:id="__tags_8cpp_source_1l00066"/>00066 
<anchor xml:id="__tags_8cpp_source_1l00067"/>00067 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00068"/><link linkend="_class_load_tag_1a51123f558061c33dd75309c55701ba18">00068</link> std::shared_ptr&lt;LoadTag&lt;T&gt;&gt;&#32;<link linkend="_class_load_tag_1a51123f558061c33dd75309c55701ba18">LoadTag&lt;T&gt;::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;LoadTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00070"/>00070 }
<anchor xml:id="__tags_8cpp_source_1l00071"/>00071 
<anchor xml:id="__tags_8cpp_source_1l00072"/><link linkend="_class_time_type_tag_1a366b293af48fd35f74c7d58a803c500f">00072</link> std::shared_ptr&lt;TimeTypeTag&gt;&#32;<link linkend="_class_time_type_tag_1a366b293af48fd35f74c7d58a803c500f">TimeTypeTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;TimeTypeTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00074"/>00074 }
<anchor xml:id="__tags_8cpp_source_1l00075"/>00075 
<anchor xml:id="__tags_8cpp_source_1l00076"/><link linkend="_class_compare_type_tag_1a17ae3bff108ce2709d481e3ada26b40a">00076</link> std::shared_ptr&lt;CompareTypeTag&gt;&#32;<link linkend="_class_compare_type_tag_1a17ae3bff108ce2709d481e3ada26b40a">CompareTypeTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;CompareTypeTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00078"/>00078 }
<anchor xml:id="__tags_8cpp_source_1l00079"/>00079 
<anchor xml:id="__tags_8cpp_source_1l00080"/>00080 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00081"/><link linkend="_class_list_tag_1addbf5b9d89f8069cc7486bf17f392660">00081</link> std::shared_ptr&lt;ListTag&lt;T&gt;&gt;&#32;<link linkend="_class_list_tag_1addbf5b9d89f8069cc7486bf17f392660">ListTag&lt;T&gt;::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;ListTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00083"/>00083 }
<anchor xml:id="__tags_8cpp_source_1l00084"/>00084 
<anchor xml:id="__tags_8cpp_source_1l00085"/><link linkend="_class_wait_tag_1a9c3974df4c52f18502892cf280470842">00085</link> std::shared_ptr&lt;WaitTag&gt;&#32;<link linkend="_class_wait_tag_1a9c3974df4c52f18502892cf280470842">WaitTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;WaitTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00087"/>00087 }
<anchor xml:id="__tags_8cpp_source_1l00088"/>00088 
<anchor xml:id="__tags_8cpp_source_1l00089"/>00089 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00090"/><link linkend="_class_print_tag_1af57d39909110062e087d728fc392543d">00090</link> std::shared_ptr&lt;PrintTag&lt;T&gt;&gt;&#32;<link linkend="_class_print_tag_1af57d39909110062e087d728fc392543d">PrintTag&lt;T&gt;::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;PrintTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00092"/>00092 }
<anchor xml:id="__tags_8cpp_source_1l00093"/>00093 
<anchor xml:id="__tags_8cpp_source_1l00094"/><link linkend="_class_bool_tag_1af6016dc8e74a29099ba9c174f4f747df">00094</link> std::shared_ptr&lt;BoolTag&gt;&#32;<link linkend="_class_bool_tag_1af6016dc8e74a29099ba9c174f4f747df">BoolTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;BoolTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00096"/>00096 }
<anchor xml:id="__tags_8cpp_source_1l00097"/>00097 
<anchor xml:id="__tags_8cpp_source_1l00098"/><link linkend="_class_int_tag_1a016a5287e36bd9c2e481a8afaaaff6bb">00098</link> std::shared_ptr&lt;IntTag&gt;&#32;<link linkend="_class_int_tag_1a016a5287e36bd9c2e481a8afaaaff6bb">IntTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;IntTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00100"/>00100 }
<anchor xml:id="__tags_8cpp_source_1l00101"/>00101 
<anchor xml:id="__tags_8cpp_source_1l00102"/><link linkend="_class_float_tag_1a868aa391943c55dce1f9ab9f7c2f990b">00102</link> std::shared_ptr&lt;FloatTag&gt;&#32;<link linkend="_class_float_tag_1a868aa391943c55dce1f9ab9f7c2f990b">FloatTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;FloatTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00104"/>00104 }
<anchor xml:id="__tags_8cpp_source_1l00105"/><link linkend="_class_not_tag_1abf49587b3dcfca85a8204580e8b2c8e2">00105</link> std::shared_ptr&lt;NotTag&gt;&#32;<link linkend="_class_not_tag_1abf49587b3dcfca85a8204580e8b2c8e2">NotTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;NotTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00107"/>00107 }
<anchor xml:id="__tags_8cpp_source_1l00108"/><link linkend="_class_and_tag_1ad17322ae712b460fd5a995469345912e">00108</link> std::shared_ptr&lt;AndTag&gt;&#32;<link linkend="_class_and_tag_1ad17322ae712b460fd5a995469345912e">AndTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;AndTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00110"/>00110 }
<anchor xml:id="__tags_8cpp_source_1l00111"/>00111 
<anchor xml:id="__tags_8cpp_source_1l00112"/><link linkend="_class_or_tag_1a98d9b116152758f98e4c62195f60e1a6">00112</link> std::shared_ptr&lt;OrTag&gt;&#32;<link linkend="_class_or_tag_1a98d9b116152758f98e4c62195f60e1a6">OrTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;OrTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00114"/>00114 }
<anchor xml:id="__tags_8cpp_source_1l00115"/>00115 
<anchor xml:id="__tags_8cpp_source_1l00116"/>00116 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00117"/><link linkend="_class_compare_tag_1a2b2135b5515c04d997bf74d823149dfa">00117</link> std::shared_ptr&lt;CompareTag&lt;T&gt;&gt;&#32;<link linkend="_class_compare_tag_1a2b2135b5515c04d997bf74d823149dfa">CompareTag&lt;T&gt;::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;CompareTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00119"/>00119 }
<anchor xml:id="__tags_8cpp_source_1l00120"/><link linkend="_class_coord_tag_1aaa9eb624bf748127688fcbec8a90e03d">00120</link> std::shared_ptr&lt;CoordTag&gt;&#32;<link linkend="_class_coord_tag_1aaa9eb624bf748127688fcbec8a90e03d">CoordTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;CoordTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00122"/>00122 }
<anchor xml:id="__tags_8cpp_source_1l00123"/><link linkend="_class_zone_tag_1ad4f1e13518757d6fa364c3a112ba81f3">00123</link> std::shared_ptr&lt;ZoneTag&gt;&#32;<link linkend="_class_zone_tag_1ad4f1e13518757d6fa364c3a112ba81f3">ZoneTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;ZoneTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00125"/>00125 }
<anchor xml:id="__tags_8cpp_source_1l00126"/><link linkend="_class_direction_tag_1a30f8090fb5679db41a961df8d6a4bf75">00126</link> std::shared_ptr&lt;DirectionTag&gt;&#32;<link linkend="_class_direction_tag_1a30f8090fb5679db41a961df8d6a4bf75">DirectionTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;DirectionTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00128"/>00128 }
<anchor xml:id="__tags_8cpp_source_1l00129"/><link linkend="_class_string_tag_1a0e03d685315e13d5be564044a7362d12">00129</link> std::shared_ptr&lt;StringTag&gt;&#32;<link linkend="_class_string_tag_1a0e03d685315e13d5be564044a7362d12">StringTag::clone</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;StringTag&gt;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="__tags_8cpp_source_1l00131"/>00131 }
<anchor xml:id="__tags_8cpp_source_1l00132"/>00132 
<anchor xml:id="__tags_8cpp_source_1l00133"/>00133 
<anchor xml:id="__tags_8cpp_source_1l00134"/><link linkend="_class_flow_tag_1a68efd2baf60d2d06c2386f509681fd5b">00134</link> <link linkend="_class_flow_tag_1a012d94d66d6801e961a688229923ff56">FlowTag::FlowTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_flow_tag">FlowTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_flow_tag">FlowTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00135"/>00135 {
<anchor xml:id="__tags_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(toCopy.<link linkend="_class_flow_tag_1ac26bb1c7e6e0543a02fc8ddb007548fa">condition</link>)<link linkend="_class_flow_tag_1ac26bb1c7e6e0543a02fc8ddb007548fa">condition</link>&#32;=toCopy.<link linkend="_class_flow_tag_1ac26bb1c7e6e0543a02fc8ddb007548fa">condition</link>-&gt;clone();
<anchor xml:id="__tags_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a55889e6a0b482006dc3940782e892b76">previousTag</link>=&#32;toCopy.<link linkend="_class_flow_tag_1a55889e6a0b482006dc3940782e892b76">previousTag</link>;
<anchor xml:id="__tags_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1abc8bd4efabae9ac712d76869d6ae7621">parentFlowTag</link>&#32;=&#32;toCopy.<link linkend="_class_flow_tag_1abc8bd4efabae9ac712d76869d6ae7621">parentFlowTag</link>;
<anchor xml:id="__tags_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1acd2b7db4f8634f186244c308cc2499c7">listPreviousFlowTags</link>&#32;=&#32;toCopy.<link linkend="_class_flow_tag_1acd2b7db4f8634f186244c308cc2499c7">listPreviousFlowTags</link>;
<anchor xml:id="__tags_8cpp_source_1l00140"/>00140 }
<anchor xml:id="__tags_8cpp_source_1l00141"/>00141 
<anchor xml:id="__tags_8cpp_source_1l00142"/>00142 
<anchor xml:id="__tags_8cpp_source_1l00143"/><link linkend="_class_main_tag_1a0e708aab6c532a7f544203a52885eb25">00143</link> <link linkend="_class_main_tag_1a78d5543dafe277cb3d92a7dc81d4a1a9">MainTag::MainTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_main_tag">MainTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_flow_tag">FlowTag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00144"/>00144 {
<anchor xml:id="__tags_8cpp_source_1l00145"/>00145 
<anchor xml:id="__tags_8cpp_source_1l00146"/>00146 }
<anchor xml:id="__tags_8cpp_source_1l00147"/>00147 
<anchor xml:id="__tags_8cpp_source_1l00148"/><link linkend="_class_do_loop_tag_1a48587d62c0a4d9507b635047ce013a2b">00148</link> <link linkend="_class_do_loop_tag_1a085ed8fcbf9b512abed4a275ba2f3f3f">DoLoopTag::DoLoopTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_do_loop_tag">DoLoopTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_flow_tag">FlowTag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00149"/>00149 {
<anchor xml:id="__tags_8cpp_source_1l00150"/>00150 
<anchor xml:id="__tags_8cpp_source_1l00151"/>00151 }
<anchor xml:id="__tags_8cpp_source_1l00152"/>00152 
<anchor xml:id="__tags_8cpp_source_1l00153"/><link linkend="_class_if_tag_1ac4faf383d1e376b48b2b87800ae68533">00153</link> <link linkend="_class_if_tag_1af368199aa2d0c1c73b502a2e31e50422">IfTag::IfTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_if_tag">IfTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_flow_tag">FlowTag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00154"/>00154 {
<anchor xml:id="__tags_8cpp_source_1l00155"/>00155 
<anchor xml:id="__tags_8cpp_source_1l00156"/>00156 }
<anchor xml:id="__tags_8cpp_source_1l00157"/><link linkend="_class_else_tag_1aa10d5ce08d97b0498807b659ba936d18">00157</link> <link linkend="_class_else_tag_1acc39437f1f25c3d8a938cb603269dc01">ElseTag::ElseTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_else_tag">ElseTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_flow_tag">FlowTag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00158"/>00158 {
<anchor xml:id="__tags_8cpp_source_1l00159"/>00159 
<anchor xml:id="__tags_8cpp_source_1l00160"/>00160 }
<anchor xml:id="__tags_8cpp_source_1l00161"/><link linkend="_class_elif_tag_1ad41604d454f273af92c8b6b03af759d7">00161</link> <link linkend="_class_elif_tag_1ab7841441bd409b96899f6d4e40e051f2">ElifTag::ElifTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_elif_tag">ElifTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_flow_tag">FlowTag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00162"/>00162 {
<anchor xml:id="__tags_8cpp_source_1l00163"/>00163 
<anchor xml:id="__tags_8cpp_source_1l00164"/>00164 }
<anchor xml:id="__tags_8cpp_source_1l00165"/>00165 
<anchor xml:id="__tags_8cpp_source_1l00166"/><link linkend="_class_loop_tag_1a25fbea9ff72e5232af9f656117284570">00166</link> <link linkend="_class_loop_tag_1a4d24884ce5db76a7111c390c1805c96b">LoopTag::LoopTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_loop_tag">LoopTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_flow_tag">FlowTag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00167"/>00167 {
<anchor xml:id="__tags_8cpp_source_1l00168"/>00168 
<anchor xml:id="__tags_8cpp_source_1l00169"/>00169 }
<anchor xml:id="__tags_8cpp_source_1l00170"/>00170 
<anchor xml:id="__tags_8cpp_source_1l00171"/><link linkend="_class_break_tag_1a9d070e6936c363416cb776c41c10cecb">00171</link> <link linkend="_class_break_tag_1a2c74c132abd66725b271ea974fed7198">BreakTag::BreakTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_break_tag">BreakTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_flow_tag">FlowTag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00172"/>00172 {
<anchor xml:id="__tags_8cpp_source_1l00173"/>00173 
<anchor xml:id="__tags_8cpp_source_1l00174"/>00174 }
<anchor xml:id="__tags_8cpp_source_1l00175"/><link linkend="_class_continue_tag_1a821031fcf3f9c869c10b21769f8c1ce3">00175</link> <link linkend="_class_continue_tag_1add13cb01afaea3dbd295acc40c8ed378">ContinueTag::ContinueTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_continue_tag">ContinueTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_flow_tag">FlowTag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00176"/>00176 {
<anchor xml:id="__tags_8cpp_source_1l00177"/>00177 
<anchor xml:id="__tags_8cpp_source_1l00178"/>00178 }
<anchor xml:id="__tags_8cpp_source_1l00179"/>00179 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00180"/><link linkend="_class_store_tag_1a50314ee81c399e99613d20151ea8a9df">00180</link> <link linkend="_class_store_tag_1a95c80b88ed4a53acddc875784339a0d6">StoreTag&lt;T&gt;::StoreTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_store_tag">StoreTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_tag">Tag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00181"/>00181 {
<anchor xml:id="__tags_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;<link linkend="_class_store_tag_1a32164953b7bc56dd47bc0bc4a439df8f">varName</link>&#32;=&#32;toCopy.<link linkend="_class_store_tag_1a32164953b7bc56dd47bc0bc4a439df8f">varName</link>;
<anchor xml:id="__tags_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;<link linkend="_class_store_tag_1aae4cae8aef6e80dd576e55fdb633201d">myVariables</link>&#32;=&#32;toCopy.<link linkend="_class_store_tag_1aae4cae8aef6e80dd576e55fdb633201d">myVariables</link>;
<anchor xml:id="__tags_8cpp_source_1l00184"/>00184 
<anchor xml:id="__tags_8cpp_source_1l00185"/>00185 }
<anchor xml:id="__tags_8cpp_source_1l00186"/>00186 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;Type&gt;
<anchor xml:id="__tags_8cpp_source_1l00187"/><link linkend="_class_load_tag_1a84ef46fb5d4efe5f57c60166c0b13a4c">00187</link> <link linkend="_class_load_tag_1a3ca333b88c3701440e500ca17548ccf5">LoadTag&lt;Type&gt;::LoadTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_load_tag">LoadTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_tag">Tag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00188"/>00188 {
<anchor xml:id="__tags_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;<link linkend="_class_load_tag_1abf1095e3bec04eae683ee558412993c5">varName</link>&#32;=&#32;toCopy.<link linkend="_class_load_tag_1abf1095e3bec04eae683ee558412993c5">varName</link>;
<anchor xml:id="__tags_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;<link linkend="_class_load_tag_1a0d31fdfeabacbf70fb88ef3e47bb354d">myVariables</link>&#32;=&#32;toCopy.<link linkend="_class_load_tag_1a0d31fdfeabacbf70fb88ef3e47bb354d">myVariables</link>;
<anchor xml:id="__tags_8cpp_source_1l00191"/>00191 }
<anchor xml:id="__tags_8cpp_source_1l00192"/><link linkend="_class_time_type_tag_1aada451312cbbff348697614cb24b406d">00192</link> <link linkend="_class_time_type_tag_1a96ce091921c80c16e5113283a06f753a">TimeTypeTag::TimeTypeTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_time_type_tag">TimeTypeTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_tag">Tag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00193"/>00193 {
<anchor xml:id="__tags_8cpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;<link linkend="_class_time_type_tag_1a3bb45a05ea0145d74d6a132b76bba232">myTime</link>&#32;=&#32;toCopy.<link linkend="_class_time_type_tag_1a3bb45a05ea0145d74d6a132b76bba232">myTime</link>;
<anchor xml:id="__tags_8cpp_source_1l00195"/>00195 }
<anchor xml:id="__tags_8cpp_source_1l00196"/>00196 
<anchor xml:id="__tags_8cpp_source_1l00197"/><link linkend="_class_compare_type_tag_1abf6c191f687b5764aabd4484cc97f47f">00197</link> <link linkend="_class_compare_type_tag_1aac9826d2d70dddeb7d3d4e4f9346ac7e">CompareTypeTag::CompareTypeTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_compare_type_tag">CompareTypeTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_tag">Tag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00198"/>00198 {
<anchor xml:id="__tags_8cpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;<link linkend="_class_compare_type_tag_1a9805a7822c8a86d73c61155de3b77701">myComp</link>&#32;=&#32;toCopy.<link linkend="_class_compare_type_tag_1a9805a7822c8a86d73c61155de3b77701">myComp</link>;
<anchor xml:id="__tags_8cpp_source_1l00200"/>00200 }
<anchor xml:id="__tags_8cpp_source_1l00201"/>00201 
<anchor xml:id="__tags_8cpp_source_1l00202"/>00202 
<anchor xml:id="__tags_8cpp_source_1l00203"/>00203 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Type&gt;
<anchor xml:id="__tags_8cpp_source_1l00204"/><link linkend="_class_list_tag_1a1f3d6ff14e3c87709aa5761d6ef7c059">00204</link> <link linkend="_class_list_tag_1a85a7690e4b8c627a2dda4420afc34960">ListTag&lt;Type&gt;::ListTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_list_tag">ListTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_tag">Tag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00205"/>00205 {
<anchor xml:id="__tags_8cpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;<link linkend="_class_list_tag_1accb8e83f38d7b837caf53d6bfc01da86">myList</link>&#32;=&#32;toCopy.<link linkend="_class_list_tag_1accb8e83f38d7b837caf53d6bfc01da86">myList</link>;
<anchor xml:id="__tags_8cpp_source_1l00207"/>00207 
<anchor xml:id="__tags_8cpp_source_1l00208"/>00208 }
<anchor xml:id="__tags_8cpp_source_1l00209"/><link linkend="_class_wait_tag_1ac6588d2741e60040f07f19f6c3e0efcb">00209</link> <link linkend="_class_wait_tag_1a1057868016ac7a3388163595825cb103">WaitTag::WaitTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_wait_tag">WaitTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_tag">Tag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00210"/>00210 {
<anchor xml:id="__tags_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;<link linkend="_class_wait_tag_1acf52b98bc2b5bfbd8ba23dbcd3b3d3f0">type</link>&#32;=&#32;toCopy.<link linkend="_class_wait_tag_1acf52b98bc2b5bfbd8ba23dbcd3b3d3f0">type</link>;
<anchor xml:id="__tags_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;<link linkend="_class_wait_tag_1a94457cc0d72f6ae75016c98716fd29b8">time</link>&#32;=&#32;toCopy.<link linkend="_class_wait_tag_1acf52b98bc2b5bfbd8ba23dbcd3b3d3f0">type</link>;
<anchor xml:id="__tags_8cpp_source_1l00213"/>00213 }
<anchor xml:id="__tags_8cpp_source_1l00214"/>00214 
<anchor xml:id="__tags_8cpp_source_1l00215"/>00215 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00216"/><link linkend="_class_print_tag_1a5031e223b2820e2910df92cf5b6346fc">00216</link> <link linkend="_class_print_tag_1ae2c57cf611dc8c6087bab67b3d8bede4">PrintTag&lt;T&gt;::PrintTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_print_tag">PrintTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_tag">Tag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00217"/>00217 {
<anchor xml:id="__tags_8cpp_source_1l00218"/>00218 
<anchor xml:id="__tags_8cpp_source_1l00219"/>00219 }
<anchor xml:id="__tags_8cpp_source_1l00220"/><link linkend="_class_bool_tag_1a8a9c7d5e741c4c4b9a25cd83d45f5939">00220</link> <link linkend="_class_bool_tag_1a59cb7cb189f83466defc5ace699357b9">BoolTag::BoolTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_bool_tag">BoolTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_tag">Tag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00221"/>00221 {
<anchor xml:id="__tags_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;<link linkend="_class_bool_tag_1a533e516d764bce21a79a433ccd0ac1e1">myBool</link>&#32;=&#32;toCopy.<link linkend="_class_bool_tag_1a533e516d764bce21a79a433ccd0ac1e1">myBool</link>;
<anchor xml:id="__tags_8cpp_source_1l00223"/>00223 
<anchor xml:id="__tags_8cpp_source_1l00224"/>00224 }
<anchor xml:id="__tags_8cpp_source_1l00225"/><link linkend="_class_int_tag_1a2f2f401803ecc95d5d59719d525fc8bc">00225</link> <link linkend="_class_int_tag_1a52c34a238f8e95627413beabe849c380">IntTag::IntTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_int_tag">IntTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_tag">Tag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00226"/>00226 {
<anchor xml:id="__tags_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;<link linkend="_class_int_tag_1a0814d81a516e25e0e61eb0216856417c">myInt</link>&#32;=&#32;toCopy.<link linkend="_class_int_tag_1a0814d81a516e25e0e61eb0216856417c">myInt</link>;
<anchor xml:id="__tags_8cpp_source_1l00228"/>00228 }
<anchor xml:id="__tags_8cpp_source_1l00229"/><link linkend="_class_float_tag_1a38893b2d53228489da140a8f9823c160">00229</link> <link linkend="_class_float_tag_1a9ef595e09fb18e394522b30ad88b9c5e">FloatTag::FloatTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_float_tag">FloatTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_tag">Tag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00230"/>00230 {
<anchor xml:id="__tags_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;<link linkend="_class_float_tag_1a167593e261f788638cbfd6b1cbaad449">myFloat</link>&#32;=&#32;toCopy.<link linkend="_class_float_tag_1a167593e261f788638cbfd6b1cbaad449">myFloat</link>;
<anchor xml:id="__tags_8cpp_source_1l00232"/>00232 }
<anchor xml:id="__tags_8cpp_source_1l00233"/><link linkend="_class_not_tag_1a872de180a771bf24b72dda0e7c658ca9">00233</link> <link linkend="_class_not_tag_1a9b05792aaf904d9739c0ecdfed134696">NotTag::NotTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_not_tag">NotTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_bool_tag">BoolTag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00234"/>00234 {
<anchor xml:id="__tags_8cpp_source_1l00235"/>00235 }
<anchor xml:id="__tags_8cpp_source_1l00236"/>00236 
<anchor xml:id="__tags_8cpp_source_1l00237"/><link linkend="_class_and_tag_1ac5f124cead8ef7d41e276d9e1e5daa43">00237</link> <link linkend="_class_and_tag_1a60df467b2f40b91eea883d943605a25d">AndTag::AndTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_and_tag">AndTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_bool_tag">BoolTag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00238"/>00238 {
<anchor xml:id="__tags_8cpp_source_1l00239"/>00239 }
<anchor xml:id="__tags_8cpp_source_1l00240"/><link linkend="_class_or_tag_1a9fe50511aa00da97968c3e2e1b950886">00240</link> <link linkend="_class_or_tag_1abbce566252b26aba0957f80e5836e50b">OrTag::OrTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_or_tag">OrTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_bool_tag">BoolTag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00241"/>00241 {
<anchor xml:id="__tags_8cpp_source_1l00242"/>00242 }
<anchor xml:id="__tags_8cpp_source_1l00243"/>00243 
<anchor xml:id="__tags_8cpp_source_1l00244"/>00244 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00245"/><link linkend="_class_compare_tag_1a68a4235b16258efd215b6db0be537154">00245</link> <link linkend="_class_compare_tag_1a09c27d4b1b4263dc56992733d10aeb24">CompareTag&lt;T&gt;::CompareTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_compare_tag">CompareTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_bool_tag">BoolTag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00246"/>00246 {
<anchor xml:id="__tags_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;<link linkend="_class_bool_tag_1a533e516d764bce21a79a433ccd0ac1e1">myBool</link>&#32;=&#32;toCopy.<link linkend="_class_bool_tag_1a533e516d764bce21a79a433ccd0ac1e1">myBool</link>;
<anchor xml:id="__tags_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;<link linkend="_class_compare_tag_1a54e47f577da225488a630333f34cf9b3">compType</link>&#32;=&#32;toCopy.<link linkend="_class_compare_tag_1a54e47f577da225488a630333f34cf9b3">compType</link>;
<anchor xml:id="__tags_8cpp_source_1l00249"/>00249 }
<anchor xml:id="__tags_8cpp_source_1l00250"/>00250 
<anchor xml:id="__tags_8cpp_source_1l00251"/><link linkend="_class_coord_tag_1ace866bfea641c8ed60d85978450cf9da">00251</link> <link linkend="_class_coord_tag_1a9e8fc8a0c136e05597145876f5c22160">CoordTag::CoordTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_coord_tag">CoordTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_tag">Tag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00252"/>00252 {
<anchor xml:id="__tags_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;<link linkend="_class_coord_tag_1a33ae3880b132e3599a4c39bbd69b6b87">myCoords</link>&#32;=&#32;toCopy.<link linkend="_class_coord_tag_1a33ae3880b132e3599a4c39bbd69b6b87">myCoords</link>;
<anchor xml:id="__tags_8cpp_source_1l00254"/>00254 
<anchor xml:id="__tags_8cpp_source_1l00255"/>00255 }
<anchor xml:id="__tags_8cpp_source_1l00256"/><link linkend="_class_zone_tag_1a9035d0071ba24205e69d93f91f501780">00256</link> <link linkend="_class_zone_tag_1ac9fd5e8d91b28c55ecb9c51266a4a836">ZoneTag::ZoneTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_zone_tag">ZoneTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_tag">Tag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00257"/>00257 {
<anchor xml:id="__tags_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;<link linkend="_class_zone_tag_1abb9dc619d7ba63464253152c26192c4f">myZone</link>&#32;=&#32;toCopy.<link linkend="_class_zone_tag_1abb9dc619d7ba63464253152c26192c4f">myZone</link>;
<anchor xml:id="__tags_8cpp_source_1l00259"/>00259 
<anchor xml:id="__tags_8cpp_source_1l00260"/>00260 }
<anchor xml:id="__tags_8cpp_source_1l00261"/><link linkend="_class_direction_tag_1a3f8965abfc1349029bc3dbb19eb5edd2">00261</link> <link linkend="_class_direction_tag_1abe3e1bd2620fa1cf0e69adf365d34c01">DirectionTag::DirectionTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_direction_tag">DirectionTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_tag">Tag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00262"/>00262 {
<anchor xml:id="__tags_8cpp_source_1l00263"/>00263 &#32;&#32;&#32;&#32;<link linkend="_class_direction_tag_1a3939708621f78928a521b4ad47d9c4ee">myDir</link>&#32;=&#32;toCopy.<link linkend="_class_direction_tag_1a3939708621f78928a521b4ad47d9c4ee">myDir</link>;
<anchor xml:id="__tags_8cpp_source_1l00264"/>00264 
<anchor xml:id="__tags_8cpp_source_1l00265"/>00265 }
<anchor xml:id="__tags_8cpp_source_1l00266"/>00266 
<anchor xml:id="__tags_8cpp_source_1l00267"/><link linkend="_class_string_tag_1a7c356725dd090ecd74df2184d89e2b48">00267</link> <link linkend="_class_string_tag_1a2e5c73e953daf54dfca39016aa7e26bb">StringTag::StringTag</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_string_tag">StringTag</link>&amp;&#32;toCopy)&#32;:<link linkend="_class_tag">Tag</link>(toCopy)
<anchor xml:id="__tags_8cpp_source_1l00268"/>00268 {
<anchor xml:id="__tags_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;<link linkend="_class_string_tag_1a7bec4c9b425a7e192dd733a5f4552aa7">myString</link>&#32;=&#32;toCopy.<link linkend="_class_string_tag_1a7bec4c9b425a7e192dd733a5f4552aa7">myString</link>;
<anchor xml:id="__tags_8cpp_source_1l00270"/>00270 }
<anchor xml:id="__tags_8cpp_source_1l00271"/>00271 
<anchor xml:id="__tags_8cpp_source_1l00272"/>00272 
<anchor xml:id="__tags_8cpp_source_1l00273"/>00273 
<anchor xml:id="__tags_8cpp_source_1l00274"/><link linkend="_class_flow_tag_1ae6c96344984018fc5be3f56f89f2bf20">00274</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_flow_tag_1ae6c96344984018fc5be3f56f89f2bf20">FlowTag::showTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00275"/>00275 {
<anchor xml:id="__tags_8cpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_tag_1a25aa826cd8818bcf0670164d285c3fdd">nbParents</link>;&#32;++i)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;\t&apos;</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Tag:&quot;</emphasis>&lt;&lt;this-&gt;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&lt;&lt;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_tag_1a25aa826cd8818bcf0670164d285c3fdd">nbParents</link>+1;&#32;++i)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;\t&apos;</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;<emphasis role="stringliteral">&quot;nestedTags:\n&quot;</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;tag&#32;:&#32;<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_class_tag_1a25aa826cd8818bcf0670164d285c3fdd">nbParents</link>&#32;+&#32;2;&#32;++i)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;\t&apos;</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;<emphasis role="stringliteral">&quot;Tag:&quot;</emphasis>&lt;&lt;&#32;tag-&gt;tagText&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00293"/>00293 }
<anchor xml:id="__tags_8cpp_source_1l00294"/>00294 
<anchor xml:id="__tags_8cpp_source_1l00295"/>00295 
<anchor xml:id="__tags_8cpp_source_1l00296"/>00296 
<anchor xml:id="__tags_8cpp_source_1l00297"/><link linkend="_class_tag_1a54054f3c9db4decb422972460bbb34c3">00297</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_tag_1a54054f3c9db4decb422972460bbb34c3">Tag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l00298"/>00298 {
<anchor xml:id="__tags_8cpp_source_1l00299"/>00299 }
<anchor xml:id="__tags_8cpp_source_1l00300"/>00300 
<anchor xml:id="__tags_8cpp_source_1l00301"/>00301 
<anchor xml:id="__tags_8cpp_source_1l00302"/>00302 
<anchor xml:id="__tags_8cpp_source_1l00303"/>00303 <emphasis role="comment">//Flow&#32;Tags</emphasis>
<anchor xml:id="__tags_8cpp_source_1l00304"/>00304 
<anchor xml:id="__tags_8cpp_source_1l00305"/><link linkend="_class_flow_tag_1a012d94d66d6801e961a688229923ff56">00305</link> <link linkend="_class_flow_tag_1a012d94d66d6801e961a688229923ff56">FlowTag::FlowTag</link>()&#32;:<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l00306"/>00306 {
<anchor xml:id="__tags_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880ae5548b8733dc2349383cdc8ecc198509">FLOWTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a55889e6a0b482006dc3940782e892b76">previousTag</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1abc8bd4efabae9ac712d76869d6ae7621">parentFlowTag</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a958c7f40de694587c20e8e3a317d3ac9">canReboot</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a2deb1b495dd3cc7ba7ae270259a25656">executed</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>.clear();
<anchor xml:id="__tags_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a27aa7ae58c701f6292ca80c42f0ddc42">forcedExit</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a05c9772461f3196076558af05e4da81a">rebootLoop</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1ac26bb1c7e6e0543a02fc8ddb007548fa">condition</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00316"/>00316 }
<anchor xml:id="__tags_8cpp_source_1l00317"/>00317 
<anchor xml:id="__tags_8cpp_source_1l00318"/>00318 
<anchor xml:id="__tags_8cpp_source_1l00319"/>00319 
<anchor xml:id="__tags_8cpp_source_1l00320"/><link linkend="_class_do_loop_tag_1a085ed8fcbf9b512abed4a275ba2f3f3f">00320</link> <link linkend="_class_do_loop_tag_1a085ed8fcbf9b512abed4a275ba2f3f3f">DoLoopTag::DoLoopTag</link>()&#32;:<link linkend="_class_flow_tag">FlowTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00321"/>00321 {
<anchor xml:id="__tags_8cpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a958c7f40de694587c20e8e3a317d3ac9">canReboot</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;doloopK;
<anchor xml:id="__tags_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880ac1f64174c4e4fe4438f3d49973ff0f61">DOLOOPTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l00325"/>00325 }
<anchor xml:id="__tags_8cpp_source_1l00326"/>00326 
<anchor xml:id="__tags_8cpp_source_1l00327"/><link linkend="_class_do_loop_tag_1a6a087dbd8aa276bddfde49026a50cb92">00327</link> <link linkend="_class_do_loop_tag_1a085ed8fcbf9b512abed4a275ba2f3f3f">DoLoopTag::DoLoopTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;condition,<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::shared_ptr&lt;Tag&gt;&gt;&amp;listTags):<link linkend="_class_do_loop_tag">DoLoopTag</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;this-&gt;condition&#32;=&#32;<link linkend="_class_flow_tag_1ac26bb1c7e6e0543a02fc8ddb007548fa">condition</link>-&gt;<link linkend="_class_do_loop_tag_1a79d0495ffbc33da8ca623d7f3d3c9cea">clone</link>();
<anchor xml:id="__tags_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>.insert(<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>.begin(),&#32;listTags.begin(),&#32;listTags.end());
<anchor xml:id="__tags_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a18d358b77d9233f31db5344531180e18">linkTags</link>();
<anchor xml:id="__tags_8cpp_source_1l00331"/>00331 }
<anchor xml:id="__tags_8cpp_source_1l00332"/>00332 
<anchor xml:id="__tags_8cpp_source_1l00333"/><link linkend="_class_do_loop_tag_1ae35bcd126538e7d415cfea702992dea2">00333</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_do_loop_tag_1ae35bcd126538e7d415cfea702992dea2">DoLoopTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l00334"/>00334 {
<anchor xml:id="__tags_8cpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1ae6c96344984018fc5be3f56f89f2bf20">showTag</link>();
<anchor xml:id="__tags_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>{&#32;
<anchor xml:id="__tags_8cpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;currentTag&#32;:&#32;<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_flow_tag_1a27aa7ae58c701f6292ca80c42f0ddc42">forcedExit</link>||&#32;<link linkend="_class_flow_tag_1a05c9772461f3196076558af05e4da81a">rebootLoop</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_flow_tag_1a27aa7ae58c701f6292ca80c42f0ddc42">forcedExit</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a27aa7ae58c701f6292ca80c42f0ddc42">forcedExit</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_class_flow_tag_1a31aaff76d66f8814e75a6e404c52028c">checkCondition</link>());
<anchor xml:id="__tags_8cpp_source_1l00348"/>00348 }
<anchor xml:id="__tags_8cpp_source_1l00349"/>00349 
<anchor xml:id="__tags_8cpp_source_1l00350"/><link linkend="_class_elif_tag_1ab7841441bd409b96899f6d4e40e051f2">00350</link> <link linkend="_class_elif_tag_1ab7841441bd409b96899f6d4e40e051f2">ElifTag::ElifTag</link>()&#32;:<link linkend="_class_flow_tag">FlowTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00351"/>00351 {
<anchor xml:id="__tags_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a958c7f40de694587c20e8e3a317d3ac9">canReboot</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;elifK;
<anchor xml:id="__tags_8cpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a17a57baafed17ad57996d2f66057d2aa">ELIFTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l00355"/>00355 }
<anchor xml:id="__tags_8cpp_source_1l00356"/>00356 
<anchor xml:id="__tags_8cpp_source_1l00357"/><link linkend="_class_elif_tag_1a7cc72c1d5a35e1272727fd833d47406b">00357</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_elif_tag_1a7cc72c1d5a35e1272727fd833d47406b">ElifTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l00358"/>00358 {
<anchor xml:id="__tags_8cpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1ae6c96344984018fc5be3f56f89f2bf20">showTag</link>();
<anchor xml:id="__tags_8cpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_flow_tag_1a55889e6a0b482006dc3940782e892b76">previousTag</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_flow_tag_1a55889e6a0b482006dc3940782e892b76">previousTag</link>-&gt;<link linkend="_class_flow_tag_1a2deb1b495dd3cc7ba7ae270259a25656">executed</link>&amp;&amp;<link linkend="_class_flow_tag_1a31aaff76d66f8814e75a6e404c52028c">checkCondition</link>())&#32;{
<anchor xml:id="__tags_8cpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;currentTag&#32;:&#32;<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_flow_tag_1a27aa7ae58c701f6292ca80c42f0ddc42">forcedExit</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a27aa7ae58c701f6292ca80c42f0ddc42">forcedExit</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00371"/>00371 
<anchor xml:id="__tags_8cpp_source_1l00372"/>00372 }
<anchor xml:id="__tags_8cpp_source_1l00373"/>00373 
<anchor xml:id="__tags_8cpp_source_1l00374"/><link linkend="_class_elif_tag_1a309fa3d04fc29fa6930ad6c0b070f0b3">00374</link> <link linkend="_class_elif_tag_1ab7841441bd409b96899f6d4e40e051f2">ElifTag::ElifTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;condition,<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::shared_ptr&lt;Tag&gt;&gt;&amp;&#32;listTags):<link linkend="_class_elif_tag">ElifTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00375"/>00375 {
<anchor xml:id="__tags_8cpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;this-&gt;condition&#32;=&#32;<link linkend="_class_flow_tag_1ac26bb1c7e6e0543a02fc8ddb007548fa">condition</link>-&gt;<link linkend="_class_elif_tag_1a544c055c7b30fe1849b24230e41ff320">clone</link>();
<anchor xml:id="__tags_8cpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>.insert(<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>.begin(),&#32;listTags.begin(),&#32;listTags.end());
<anchor xml:id="__tags_8cpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a18d358b77d9233f31db5344531180e18">linkTags</link>();
<anchor xml:id="__tags_8cpp_source_1l00379"/>00379 }
<anchor xml:id="__tags_8cpp_source_1l00380"/>00380 
<anchor xml:id="__tags_8cpp_source_1l00381"/><link linkend="_class_case_tag_1a83ed9f2693965447b54124f933fbc172">00381</link> <link linkend="_class_case_tag_1a83ed9f2693965447b54124f933fbc172">CaseTag::CaseTag</link>()&#32;:<link linkend="_class_flow_tag">FlowTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00382"/>00382 {
<anchor xml:id="__tags_8cpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a958c7f40de694587c20e8e3a317d3ac9">canReboot</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;caseK;
<anchor xml:id="__tags_8cpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880ac55b2b4b55ab3c2b2292d0fdaff71c69">CASETAG</link>;
<anchor xml:id="__tags_8cpp_source_1l00386"/>00386 }
<anchor xml:id="__tags_8cpp_source_1l00387"/>00387 
<anchor xml:id="__tags_8cpp_source_1l00388"/><link linkend="_class_switch_tag_1a3e8a69186dffc36a47dfdc639ca52d0e">00388</link> <link linkend="_class_switch_tag_1a3e8a69186dffc36a47dfdc639ca52d0e">SwitchTag::SwitchTag</link>()&#32;:<link linkend="_class_flow_tag">FlowTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00389"/>00389 {
<anchor xml:id="__tags_8cpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a958c7f40de694587c20e8e3a317d3ac9">canReboot</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00391"/>00391 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;switchK;
<anchor xml:id="__tags_8cpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a148700a9e2bd2c6003aa4b158be6f8a6">SWITCHTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l00393"/>00393 }
<anchor xml:id="__tags_8cpp_source_1l00394"/>00394 
<anchor xml:id="__tags_8cpp_source_1l00395"/>00395 
<anchor xml:id="__tags_8cpp_source_1l00396"/><link linkend="_class_else_tag_1acc39437f1f25c3d8a938cb603269dc01">00396</link> <link linkend="_class_else_tag_1acc39437f1f25c3d8a938cb603269dc01">ElseTag::ElseTag</link>()&#32;:&#32;<link linkend="_class_flow_tag">FlowTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00397"/>00397 {
<anchor xml:id="__tags_8cpp_source_1l00398"/>00398 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a958c7f40de694587c20e8e3a317d3ac9">canReboot</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;elseK;
<anchor xml:id="__tags_8cpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880ac1b0f5b032b122acbb1837921c7aceaf">ELSETAG</link>;
<anchor xml:id="__tags_8cpp_source_1l00401"/>00401 }
<anchor xml:id="__tags_8cpp_source_1l00402"/>00402 
<anchor xml:id="__tags_8cpp_source_1l00403"/><link linkend="_class_else_tag_1a2069a22a6563dac5d94854625e8eb5cf">00403</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_else_tag_1a2069a22a6563dac5d94854625e8eb5cf">ElseTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l00404"/>00404 {
<anchor xml:id="__tags_8cpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1ae6c96344984018fc5be3f56f89f2bf20">showTag</link>();
<anchor xml:id="__tags_8cpp_source_1l00406"/>00406 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_flow_tag_1a55889e6a0b482006dc3940782e892b76">previousTag</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_flow_tag_1a55889e6a0b482006dc3940782e892b76">previousTag</link>-&gt;<link linkend="_class_flow_tag_1a2deb1b495dd3cc7ba7ae270259a25656">executed</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;currentTag&#32;:&#32;<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00413"/>00413 }
<anchor xml:id="__tags_8cpp_source_1l00414"/>00414 
<anchor xml:id="__tags_8cpp_source_1l00415"/><link linkend="_class_else_tag_1af917a4eb4ed59693b5103dabb307a004">00415</link> <link linkend="_class_else_tag_1acc39437f1f25c3d8a938cb603269dc01">ElseTag::ElseTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::shared_ptr&lt;Tag&gt;&gt;&amp;&#32;listTags)&#32;:<link linkend="_class_else_tag">ElseTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00416"/>00416 {
<anchor xml:id="__tags_8cpp_source_1l00417"/>00417 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>.insert(<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>.begin(),&#32;listTags.begin(),&#32;listTags.end());
<anchor xml:id="__tags_8cpp_source_1l00418"/>00418 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a18d358b77d9233f31db5344531180e18">linkTags</link>();
<anchor xml:id="__tags_8cpp_source_1l00419"/>00419 }
<anchor xml:id="__tags_8cpp_source_1l00420"/>00420 
<anchor xml:id="__tags_8cpp_source_1l00421"/><link linkend="_class_if_tag_1af368199aa2d0c1c73b502a2e31e50422">00421</link> <link linkend="_class_if_tag_1af368199aa2d0c1c73b502a2e31e50422">IfTag::IfTag</link>()&#32;:<link linkend="_class_flow_tag">FlowTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00422"/>00422 {
<anchor xml:id="__tags_8cpp_source_1l00423"/>00423 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a958c7f40de694587c20e8e3a317d3ac9">canReboot</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00424"/>00424 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;ifK;
<anchor xml:id="__tags_8cpp_source_1l00425"/>00425 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880ad53b271ba2444c954771d2f70f55f452">IFTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l00426"/>00426 }
<anchor xml:id="__tags_8cpp_source_1l00427"/>00427 
<anchor xml:id="__tags_8cpp_source_1l00428"/><link linkend="_class_if_tag_1a1e3e94db1e59bead37cf55cd9c791c70">00428</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_if_tag_1a1e3e94db1e59bead37cf55cd9c791c70">IfTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l00429"/>00429 {
<anchor xml:id="__tags_8cpp_source_1l00430"/>00430 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1ae6c96344984018fc5be3f56f89f2bf20">showTag</link>();
<anchor xml:id="__tags_8cpp_source_1l00431"/>00431 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_flow_tag_1a31aaff76d66f8814e75a6e404c52028c">checkCondition</link>())&#32;{
<anchor xml:id="__tags_8cpp_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;currentTag&#32;:&#32;<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_flow_tag_1a27aa7ae58c701f6292ca80c42f0ddc42">forcedExit</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a27aa7ae58c701f6292ca80c42f0ddc42">forcedExit</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00440"/>00440 }
<anchor xml:id="__tags_8cpp_source_1l00441"/>00441 
<anchor xml:id="__tags_8cpp_source_1l00442"/>00442 
<anchor xml:id="__tags_8cpp_source_1l00443"/><link linkend="_class_if_tag_1a485bb6060294db75d5a14d5e984918a8">00443</link> <link linkend="_class_if_tag_1af368199aa2d0c1c73b502a2e31e50422">IfTag::IfTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;condition,<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::shared_ptr&lt;Tag&gt;&gt;&amp;&#32;listTags):<link linkend="_class_if_tag">IfTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00444"/>00444 {
<anchor xml:id="__tags_8cpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;this-&gt;condition&#32;=<link linkend="_class_flow_tag_1ac26bb1c7e6e0543a02fc8ddb007548fa">condition</link>-&gt;<link linkend="_class_if_tag_1af88791bec65c6834513c926d1b07a119">clone</link>();
<anchor xml:id="__tags_8cpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>.insert(<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>.begin(),&#32;listTags.begin(),&#32;listTags.end());
<anchor xml:id="__tags_8cpp_source_1l00447"/>00447 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a18d358b77d9233f31db5344531180e18">linkTags</link>();
<anchor xml:id="__tags_8cpp_source_1l00448"/>00448 }
<anchor xml:id="__tags_8cpp_source_1l00449"/>00449 
<anchor xml:id="__tags_8cpp_source_1l00450"/>00450 <emphasis role="comment">//IfTag::IfTag(const&#32;IfTag&amp;toCopy)&#32;:IfTag(toCopy.condition,toCopy.nestedTags)</emphasis>
<anchor xml:id="__tags_8cpp_source_1l00451"/>00451 <emphasis role="comment">//{</emphasis>
<anchor xml:id="__tags_8cpp_source_1l00452"/>00452 <emphasis role="comment">//</emphasis>
<anchor xml:id="__tags_8cpp_source_1l00453"/>00453 <emphasis role="comment">//}</emphasis>
<anchor xml:id="__tags_8cpp_source_1l00454"/>00454 
<anchor xml:id="__tags_8cpp_source_1l00455"/>00455 
<anchor xml:id="__tags_8cpp_source_1l00456"/><link linkend="_class_loop_tag_1a4d24884ce5db76a7111c390c1805c96b">00456</link> <link linkend="_class_loop_tag_1a4d24884ce5db76a7111c390c1805c96b">LoopTag::LoopTag</link>()&#32;:<link linkend="_class_flow_tag">FlowTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00457"/>00457 {
<anchor xml:id="__tags_8cpp_source_1l00458"/>00458 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a958c7f40de694587c20e8e3a317d3ac9">canReboot</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00459"/>00459 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;loopK;
<anchor xml:id="__tags_8cpp_source_1l00460"/>00460 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880aed5a0238da5f2aa3abb28ad0c8bcd303">LOOPTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l00461"/>00461 }
<anchor xml:id="__tags_8cpp_source_1l00462"/>00462 
<anchor xml:id="__tags_8cpp_source_1l00463"/><link linkend="_class_loop_tag_1a1bc931d598d265480fed7f1d6a305762">00463</link> <link linkend="_class_loop_tag_1a4d24884ce5db76a7111c390c1805c96b">LoopTag::LoopTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&#32;conditionTag)
<anchor xml:id="__tags_8cpp_source_1l00464"/>00464 {
<anchor xml:id="__tags_8cpp_source_1l00465"/>00465 }
<anchor xml:id="__tags_8cpp_source_1l00466"/>00466 
<anchor xml:id="__tags_8cpp_source_1l00467"/><link linkend="_class_loop_tag_1a878ccac1a66b1765229fc3537c73ab7d">00467</link> <link linkend="_class_loop_tag_1a4d24884ce5db76a7111c390c1805c96b">LoopTag::LoopTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;condition,<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::shared_ptr&lt;Tag&gt;&gt;&amp;listTags)&#32;:<link linkend="_class_loop_tag">LoopTag</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00468"/>00468 &#32;&#32;&#32;&#32;this-&gt;condition&#32;=&#32;<link linkend="_class_flow_tag_1ac26bb1c7e6e0543a02fc8ddb007548fa">condition</link>-&gt;<link linkend="_class_loop_tag_1a21f67e9bdd06193a0dfa1f0a3946aa06">clone</link>();
<anchor xml:id="__tags_8cpp_source_1l00469"/>00469 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>.insert(<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>.begin(),&#32;listTags.begin(),&#32;listTags.end());
<anchor xml:id="__tags_8cpp_source_1l00470"/>00470 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a18d358b77d9233f31db5344531180e18">linkTags</link>();
<anchor xml:id="__tags_8cpp_source_1l00471"/>00471 }
<anchor xml:id="__tags_8cpp_source_1l00472"/>00472 
<anchor xml:id="__tags_8cpp_source_1l00473"/><link linkend="_class_loop_tag_1ab2c7cf9f4dc1a5df0814410ab7494d1e">00473</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_loop_tag_1ab2c7cf9f4dc1a5df0814410ab7494d1e">LoopTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l00474"/>00474 {
<anchor xml:id="__tags_8cpp_source_1l00475"/>00475 
<anchor xml:id="__tags_8cpp_source_1l00476"/>00476 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_class_flow_tag_1a31aaff76d66f8814e75a6e404c52028c">checkCondition</link>())&#32;{
<anchor xml:id="__tags_8cpp_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1ae6c96344984018fc5be3f56f89f2bf20">showTag</link>();
<anchor xml:id="__tags_8cpp_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;currentTag&#32;:&#32;<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_flow_tag_1a27aa7ae58c701f6292ca80c42f0ddc42">forcedExit</link>&#32;||&#32;<link linkend="_class_flow_tag_1a05c9772461f3196076558af05e4da81a">rebootLoop</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_flow_tag_1a27aa7ae58c701f6292ca80c42f0ddc42">forcedExit</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a27aa7ae58c701f6292ca80c42f0ddc42">forcedExit</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00488"/>00488 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00489"/>00489 }
<anchor xml:id="__tags_8cpp_source_1l00490"/>00490 
<anchor xml:id="__tags_8cpp_source_1l00491"/>00491 
<anchor xml:id="__tags_8cpp_source_1l00492"/>00492 
<anchor xml:id="__tags_8cpp_source_1l00493"/>00493 <emphasis role="comment">//Action&#32;Tags</emphasis>
<anchor xml:id="__tags_8cpp_source_1l00494"/>00494 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00495"/><link linkend="_class_store_tag_1a95c80b88ed4a53acddc875784339a0d6">00495</link> <link linkend="_class_store_tag_1a95c80b88ed4a53acddc875784339a0d6">StoreTag&lt;T&gt;::StoreTag</link>()&#32;:<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l00496"/>00496 {
<anchor xml:id="__tags_8cpp_source_1l00497"/>00497 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;storeK;
<anchor xml:id="__tags_8cpp_source_1l00498"/>00498 &#32;&#32;&#32;&#32;<link linkend="_class_store_tag_1aae4cae8aef6e80dd576e55fdb633201d">myVariables</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00499"/>00499 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a490e7b6af7e57bdf569a25d8a2e333ce">STORETAG</link>;
<anchor xml:id="__tags_8cpp_source_1l00500"/>00500 }
<anchor xml:id="__tags_8cpp_source_1l00501"/>00501 
<anchor xml:id="__tags_8cpp_source_1l00502"/>00502 
<anchor xml:id="__tags_8cpp_source_1l00503"/><link linkend="_class_click_tag_1aa517b6f0c5a04cd67a05a8cc30b63dad">00503</link> <link linkend="_class_click_tag_1aa517b6f0c5a04cd67a05a8cc30b63dad">ClickTag::ClickTag</link>()&#32;:<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l00504"/>00504 {
<anchor xml:id="__tags_8cpp_source_1l00505"/>00505 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;clickK;
<anchor xml:id="__tags_8cpp_source_1l00506"/>00506 &#32;&#32;&#32;&#32;
<anchor xml:id="__tags_8cpp_source_1l00507"/>00507 }
<anchor xml:id="__tags_8cpp_source_1l00508"/>00508 
<anchor xml:id="__tags_8cpp_source_1l00509"/><link linkend="_class_swipe_tag_1a56dfab067e966a1e6aa8be1a40ecfdfa">00509</link> <link linkend="_class_swipe_tag_1a56dfab067e966a1e6aa8be1a40ecfdfa">SwipeTag::SwipeTag</link>()&#32;:<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l00510"/>00510 {
<anchor xml:id="__tags_8cpp_source_1l00511"/>00511 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;swipeK;
<anchor xml:id="__tags_8cpp_source_1l00512"/>00512 &#32;&#32;&#32;&#32;
<anchor xml:id="__tags_8cpp_source_1l00513"/>00513 }
<anchor xml:id="__tags_8cpp_source_1l00514"/>00514 
<anchor xml:id="__tags_8cpp_source_1l00515"/>00515 
<anchor xml:id="__tags_8cpp_source_1l00516"/>00516 
<anchor xml:id="__tags_8cpp_source_1l00517"/><link linkend="_class_wait_tag_1a1057868016ac7a3388163595825cb103">00517</link> <link linkend="_class_wait_tag_1a1057868016ac7a3388163595825cb103">WaitTag::WaitTag</link>()&#32;:<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l00518"/>00518 {
<anchor xml:id="__tags_8cpp_source_1l00519"/>00519 &#32;&#32;&#32;&#32;<link linkend="_class_wait_tag_1a94457cc0d72f6ae75016c98716fd29b8">time</link>&#32;=&#32;0;
<anchor xml:id="__tags_8cpp_source_1l00520"/>00520 &#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_wait_tag_1acf52b98bc2b5bfbd8ba23dbcd3b3d3f0">type</link>&#32;=&#32;<link linkend="__tags_8h_1a06411e4b1d6791157bb089cc368b11d3a7cb36ff0a80f238d5b987d9250d369e3">SECOND</link>;
<anchor xml:id="__tags_8cpp_source_1l00521"/>00521 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;waitK;
<anchor xml:id="__tags_8cpp_source_1l00522"/>00522 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a35a69f15481a75a963ad3b185f76f73d">WAITTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l00523"/>00523 }
<anchor xml:id="__tags_8cpp_source_1l00524"/>00524 
<anchor xml:id="__tags_8cpp_source_1l00525"/><link linkend="_class_wait_tag_1aa7c19fd638a7849e356c4bcfa3eccc22">00525</link> <link linkend="_class_wait_tag_1a1057868016ac7a3388163595825cb103">WaitTag::WaitTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;parameter,<emphasis role="keyword">const</emphasis>&#32;<link linkend="__tags_8h_1a06411e4b1d6791157bb089cc368b11d3">TimeType</link>&amp;&#32;tType)&#32;:<link linkend="_class_wait_tag">WaitTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00526"/>00526 {
<anchor xml:id="__tags_8cpp_source_1l00527"/>00527 &#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_wait_tag_1acf52b98bc2b5bfbd8ba23dbcd3b3d3f0">type</link>&#32;=&#32;tType;
<anchor xml:id="__tags_8cpp_source_1l00528"/>00528 &#32;&#32;&#32;&#32;<link linkend="_class_wait_tag_1a39cbaed686b7581a6f9d12ef35b4d0c2">timeTag</link>=parameter;
<anchor xml:id="__tags_8cpp_source_1l00529"/>00529 }
<anchor xml:id="__tags_8cpp_source_1l00530"/>00530 
<anchor xml:id="__tags_8cpp_source_1l00531"/><link linkend="_class_wait_tag_1aab42cd6a1db188a0637540df54f76c61">00531</link> <link linkend="_class_wait_tag_1a1057868016ac7a3388163595825cb103">WaitTag::WaitTag</link>(<emphasis role="keywordtype">int</emphasis>&#32;time,&#32;<link linkend="__tags_8h_1a06411e4b1d6791157bb089cc368b11d3">TimeType</link>&#32;tType)&#32;:<link linkend="_class_wait_tag">WaitTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00532"/>00532 {
<anchor xml:id="__tags_8cpp_source_1l00533"/>00533 &#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_wait_tag_1acf52b98bc2b5bfbd8ba23dbcd3b3d3f0">type</link>&#32;=&#32;tType;
<anchor xml:id="__tags_8cpp_source_1l00534"/>00534 &#32;&#32;&#32;&#32;this-&gt;time&#32;=&#32;<link linkend="_class_wait_tag_1a94457cc0d72f6ae75016c98716fd29b8">time</link>;
<anchor xml:id="__tags_8cpp_source_1l00535"/>00535 }
<anchor xml:id="__tags_8cpp_source_1l00536"/>00536 
<anchor xml:id="__tags_8cpp_source_1l00537"/>00537 
<anchor xml:id="__tags_8cpp_source_1l00538"/>00538 
<anchor xml:id="__tags_8cpp_source_1l00539"/><link linkend="__tags_8cpp_1ad138ff74a272c695accc2d09d39dc05f">00539</link> std::shared_ptr&lt;WaitTag&gt;&#32;<link linkend="__tags_8cpp_1ad138ff74a272c695accc2d09d39dc05f">getWaitTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l00540"/>00540 {
<anchor xml:id="__tags_8cpp_source_1l00541"/>00541 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::dynamic_pointer_cast&lt;WaitTag&gt;(tag);
<anchor xml:id="__tags_8cpp_source_1l00542"/>00542 }
<anchor xml:id="__tags_8cpp_source_1l00543"/>00543 
<anchor xml:id="__tags_8cpp_source_1l00544"/><link linkend="_class_wait_tag_1a9f48b0bf250132d442cbaee46ff96b15">00544</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_wait_tag_1a9f48b0bf250132d442cbaee46ff96b15">WaitTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l00545"/>00545 {
<anchor xml:id="__tags_8cpp_source_1l00546"/>00546 &#32;&#32;&#32;&#32;<link linkend="_class_wait_tag_1a94457cc0d72f6ae75016c98716fd29b8">time</link>&#32;=&#32;<link linkend="__tags_8h_1aa5f87364fd0e0374ff582e04db0e6a31">executeInt</link>(<link linkend="_class_wait_tag_1a39cbaed686b7581a6f9d12ef35b4d0c2">timeTag</link>);
<anchor xml:id="__tags_8cpp_source_1l00547"/>00547 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_class_wait_tag_1acf52b98bc2b5bfbd8ba23dbcd3b3d3f0">type</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00548"/>00548 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a06411e4b1d6791157bb089cc368b11d3a449692f8f5ec911ed443daf65d574c88">MILLISECOND</link>:
<anchor xml:id="__tags_8cpp_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::this_thread::sleep_for(std::chrono::milliseconds(<link linkend="_class_wait_tag_1a94457cc0d72f6ae75016c98716fd29b8">time</link>));
<anchor xml:id="__tags_8cpp_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00551"/>00551 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a06411e4b1d6791157bb089cc368b11d3a7cb36ff0a80f238d5b987d9250d369e3">SECOND</link>:
<anchor xml:id="__tags_8cpp_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::this_thread::sleep_for(std::chrono::seconds(<link linkend="_class_wait_tag_1a94457cc0d72f6ae75016c98716fd29b8">time</link>));
<anchor xml:id="__tags_8cpp_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00554"/>00554 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a06411e4b1d6791157bb089cc368b11d3a26f8ff0cdd909ee179a0ed06adfc4a0b">MINUTE</link>:
<anchor xml:id="__tags_8cpp_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::this_thread::sleep_for(std::chrono::minutes(<link linkend="_class_wait_tag_1a94457cc0d72f6ae75016c98716fd29b8">time</link>));
<anchor xml:id="__tags_8cpp_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00557"/>00557 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__tags_8cpp_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::this_thread::sleep_for(std::chrono::milliseconds(<link linkend="_class_wait_tag_1a94457cc0d72f6ae75016c98716fd29b8">time</link>));
<anchor xml:id="__tags_8cpp_source_1l00559"/>00559 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00560"/>00560 }
<anchor xml:id="__tags_8cpp_source_1l00561"/>00561 
<anchor xml:id="__tags_8cpp_source_1l00562"/>00562 
<anchor xml:id="__tags_8cpp_source_1l00563"/>00563 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00564"/><link linkend="__tags_8cpp_1aad17b0d48f011d5869f82adb31915669">00564</link> std::shared_ptr&#32;&lt;&#32;LoadTag&lt;T&gt;&gt;&#32;<link linkend="__tags_8cpp_1aad17b0d48f011d5869f82adb31915669">getLoadTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00565"/>00565 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::dynamic_pointer_cast&lt;LoadTag&lt;T&gt;&gt;(tag);
<anchor xml:id="__tags_8cpp_source_1l00566"/>00566 }
<anchor xml:id="__tags_8cpp_source_1l00567"/>00567 
<anchor xml:id="__tags_8cpp_source_1l00568"/>00568 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00569"/><link linkend="_class_load_tag_1a3ca333b88c3701440e500ca17548ccf5">00569</link> <link linkend="_class_load_tag_1a3ca333b88c3701440e500ca17548ccf5">LoadTag&lt;T&gt;::LoadTag</link>()&#32;:<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l00570"/>00570 {
<anchor xml:id="__tags_8cpp_source_1l00571"/>00571 &#32;&#32;&#32;&#32;<link linkend="_class_load_tag_1a0d31fdfeabacbf70fb88ef3e47bb354d">myVariables</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00572"/>00572 &#32;&#32;&#32;&#32;<link linkend="_class_load_tag_1acb509da0702762973fd0fc7909b5402d">value</link>&#32;=&#32;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba21f40778b7db9343a6ca75ec2c41ccce">T</link>();
<anchor xml:id="__tags_8cpp_source_1l00573"/>00573 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a552df1d14502610c8d2fe012dec1a82e">LOADTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l00574"/>00574 }
<anchor xml:id="__tags_8cpp_source_1l00575"/>00575 
<anchor xml:id="__tags_8cpp_source_1l00576"/>00576 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l00577"/><link linkend="_class_store_tag_1a5bf6c42a586f31ce9a7241c91ec1f382">00577</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_store_tag_1af44c5ec56afb2b6dcefa98cd001227c6">StoreTag&lt;int&gt;::execute</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00578"/>00578 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(myVariables)myVariables-&gt;addVariable(varName,&#32;<link linkend="__tags_8cpp_1af21ab8bf49b3e2e38e00d6cadb1e4871">executeInt</link>(valueTag));
<anchor xml:id="__tags_8cpp_source_1l00579"/>00579 }
<anchor xml:id="__tags_8cpp_source_1l00580"/>00580 
<anchor xml:id="__tags_8cpp_source_1l00581"/>00581 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l00582"/><link linkend="_class_store_tag_1a79e37c3ee8d645186bb4574bd9826729">00582</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_store_tag_1af44c5ec56afb2b6dcefa98cd001227c6">StoreTag&lt;float&gt;::execute</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00583"/>00583 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(myVariables)myVariables-&gt;addVariable(varName,&#32;<link linkend="__tags_8cpp_1ac1dada7a37a3c93abfa74f5d178e096d">executeFloat</link>(valueTag));
<anchor xml:id="__tags_8cpp_source_1l00584"/>00584 }
<anchor xml:id="__tags_8cpp_source_1l00585"/>00585 
<anchor xml:id="__tags_8cpp_source_1l00586"/>00586 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l00587"/><link linkend="_class_store_tag_1a2d94b2885139efa8c8c5a81a1f2ad3ad">00587</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_store_tag_1af44c5ec56afb2b6dcefa98cd001227c6">StoreTag&lt;bool&gt;::execute</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00588"/>00588 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(myVariables)myVariables-&gt;addVariable(varName,&#32;<link linkend="__tags_8cpp_1a760d219c228224543b5e154be938a6c2">executeBool</link>(valueTag));
<anchor xml:id="__tags_8cpp_source_1l00589"/>00589 }
<anchor xml:id="__tags_8cpp_source_1l00590"/>00590 
<anchor xml:id="__tags_8cpp_source_1l00591"/>00591 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l00592"/><link linkend="_class_store_tag_1af902d7fcdb93431a74211efaec81965f">00592</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_store_tag_1af44c5ec56afb2b6dcefa98cd001227c6">StoreTag&lt;std::string&gt;::execute</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00593"/>00593 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(myVariables)myVariables-&gt;addVariable(varName,&#32;<link linkend="__tags_8cpp_1a4bab8267d7e817b59ed55ad288131821">executeString</link>(valueTag));
<anchor xml:id="__tags_8cpp_source_1l00594"/>00594 }
<anchor xml:id="__tags_8cpp_source_1l00595"/>00595 
<anchor xml:id="__tags_8cpp_source_1l00596"/>00596 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l00597"/><link linkend="_class_store_tag_1a851b13b9fe7597c4d44f24acc4fc0bff">00597</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_store_tag_1af44c5ec56afb2b6dcefa98cd001227c6">StoreTag&lt;Coord&gt;::execute</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00598"/>00598 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(myVariables)myVariables-&gt;addVariable(varName,&#32;<link linkend="__tags_8cpp_1acc7a7317843e349ecdffda47724bf380">executeCoord</link>(valueTag));
<anchor xml:id="__tags_8cpp_source_1l00599"/>00599 }
<anchor xml:id="__tags_8cpp_source_1l00600"/>00600 
<anchor xml:id="__tags_8cpp_source_1l00601"/>00601 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l00602"/><link linkend="_class_store_tag_1a709232734c8c294e7528d797321b253f">00602</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_store_tag_1af44c5ec56afb2b6dcefa98cd001227c6">StoreTag&lt;Zone&gt;::execute</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00603"/>00603 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(myVariables)myVariables-&gt;addVariable(varName,&#32;<link linkend="__tags_8cpp_1af880453da2451d42d582407678414cca">executeZone</link>(valueTag));
<anchor xml:id="__tags_8cpp_source_1l00604"/>00604 }
<anchor xml:id="__tags_8cpp_source_1l00605"/>00605 
<anchor xml:id="__tags_8cpp_source_1l00606"/>00606 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l00607"/><link linkend="_class_store_tag_1a167c9b06d677b3430d6ac1f8236fc4ae">00607</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_store_tag_1af44c5ec56afb2b6dcefa98cd001227c6">StoreTag&lt;Direction&gt;::execute</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00608"/>00608 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(myVariables)myVariables-&gt;addVariable(varName,&#32;<link linkend="__tags_8cpp_1adb0c764ef1f20ef3d860516a5040b43a">executeDirection</link>(valueTag));
<anchor xml:id="__tags_8cpp_source_1l00609"/>00609 }
<anchor xml:id="__tags_8cpp_source_1l00610"/>00610 
<anchor xml:id="__tags_8cpp_source_1l00611"/>00611 
<anchor xml:id="__tags_8cpp_source_1l00612"/>00612 <emphasis role="comment">//vectors</emphasis>
<anchor xml:id="__tags_8cpp_source_1l00613"/>00613 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00614"/><link linkend="_class_store_tag_3_01std_1_1vector_3_01_t_01_4_01_4_1af14db3889a7c857f6b33676347fd9055">00614</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_store_tag">StoreTag&lt;std::vector&lt;T&gt;</link>&gt;::execute()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00615"/>00615 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(myVariables)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myVariables-&gt;addVariable(varName,&#32;<link linkend="__tags_8cpp_1a663afb00e3e4be1f6f395904d5ed7dea">executeList&lt;T&gt;</link>(listValueTags));
<anchor xml:id="__tags_8cpp_source_1l00617"/>00617 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00618"/>00618 }
<anchor xml:id="__tags_8cpp_source_1l00619"/>00619 
<anchor xml:id="__tags_8cpp_source_1l00620"/>00620 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00621"/><link linkend="__tags_8cpp_1a663afb00e3e4be1f6f395904d5ed7dea">00621</link> std::vector&lt;T&gt;&#32;<link linkend="__tags_8cpp_1a663afb00e3e4be1f6f395904d5ed7dea">executeList</link>(std::vector&lt;std::shared_ptr&lt;Tag&gt;&gt;listTags)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00622"/>00622 &#32;&#32;&#32;&#32;<link linkend="_class_list_tag">ListTag&lt;T&gt;</link>&#32;listTag(listTags);
<anchor xml:id="__tags_8cpp_source_1l00623"/>00623 &#32;&#32;&#32;&#32;listTag.<link linkend="_class_list_tag_1a1aed24f27987c6c8e8d32aeb3cb4e116">execute</link>();
<anchor xml:id="__tags_8cpp_source_1l00624"/>00624 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;listTag.<link linkend="_class_list_tag_1accb8e83f38d7b837caf53d6bfc01da86">myList</link>;
<anchor xml:id="__tags_8cpp_source_1l00625"/>00625 }
<anchor xml:id="__tags_8cpp_source_1l00626"/>00626 
<anchor xml:id="__tags_8cpp_source_1l00627"/>00627 
<anchor xml:id="__tags_8cpp_source_1l00628"/>00628 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00629"/><link linkend="_class_store_tag_1aa9fea3a9af763e0747846b0f1636107b">00629</link> <link linkend="_class_store_tag_1a95c80b88ed4a53acddc875784339a0d6">StoreTag&lt;T&gt;::StoreTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;name,<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;value,<link linkend="_struct_user_variables">UserVariables</link>*&#32;uv):<link linkend="_class_store_tag">StoreTag</link>&lt;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba21f40778b7db9343a6ca75ec2c41ccce">T</link>&gt;()
<anchor xml:id="__tags_8cpp_source_1l00630"/>00630 {
<anchor xml:id="__tags_8cpp_source_1l00631"/>00631 &#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_store_tag_1a5aa68146f859cc2edee34f50ad04e83e">valueTag</link>&#32;=&#32;value;
<anchor xml:id="__tags_8cpp_source_1l00632"/>00632 &#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_store_tag_1a32164953b7bc56dd47bc0bc4a439df8f">varName</link>&#32;=&#32;name;
<anchor xml:id="__tags_8cpp_source_1l00633"/>00633 &#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_store_tag_1aae4cae8aef6e80dd576e55fdb633201d">myVariables</link>&#32;=&#32;uv;
<anchor xml:id="__tags_8cpp_source_1l00634"/>00634 }
<anchor xml:id="__tags_8cpp_source_1l00635"/>00635 
<anchor xml:id="__tags_8cpp_source_1l00636"/>00636 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00637"/><link linkend="_class_load_tag_1a8c963ea3529114619091df6381b71d52">00637</link> <link linkend="_class_load_tag_1a3ca333b88c3701440e500ca17548ccf5">LoadTag&lt;T&gt;::LoadTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;name,<link linkend="_struct_user_variables">UserVariables</link>*&#32;uv)&#32;:<link linkend="_class_load_tag">LoadTag</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00638"/>00638 &#32;&#32;&#32;&#32;<link linkend="_class_load_tag_1abf1095e3bec04eae683ee558412993c5">varName</link>&#32;=&#32;name;
<anchor xml:id="__tags_8cpp_source_1l00639"/>00639 &#32;&#32;&#32;&#32;<link linkend="_class_load_tag_1a0d31fdfeabacbf70fb88ef3e47bb354d">myVariables</link>&#32;=&#32;uv;
<anchor xml:id="__tags_8cpp_source_1l00640"/>00640 }
<anchor xml:id="__tags_8cpp_source_1l00641"/>00641 
<anchor xml:id="__tags_8cpp_source_1l00642"/>00642 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00643"/><link linkend="_class_load_tag_1a2567f16bca743177851f93e97ec0dcd5">00643</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_load_tag_1a2567f16bca743177851f93e97ec0dcd5">LoadTag&lt;T&gt;::execute</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00644"/>00644 &#32;&#32;&#32;&#32;value&#32;=&#32;myVariables-&gt;<link linkend="_struct_user_variables_1a326009aee9af0b9d7fd34232207842ad">getValue</link>&lt;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba21f40778b7db9343a6ca75ec2c41ccce">T</link>&gt;(varName);
<anchor xml:id="__tags_8cpp_source_1l00645"/>00645 }
<anchor xml:id="__tags_8cpp_source_1l00646"/>00646 
<anchor xml:id="__tags_8cpp_source_1l00647"/><link linkend="_class_break_tag_1a2c74c132abd66725b271ea974fed7198">00647</link> <link linkend="_class_break_tag_1a2c74c132abd66725b271ea974fed7198">BreakTag::BreakTag</link>()&#32;:<link linkend="_class_flow_tag">FlowTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00648"/>00648 {
<anchor xml:id="__tags_8cpp_source_1l00649"/>00649 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;breakK;
<anchor xml:id="__tags_8cpp_source_1l00650"/>00650 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a13d94ca5c9832f8cbbe7535c23dd8a27">BREAKTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l00651"/>00651 }
<anchor xml:id="__tags_8cpp_source_1l00652"/>00652 
<anchor xml:id="__tags_8cpp_source_1l00653"/><link linkend="_class_break_tag_1afd2dda99f4d72ad4cfe14e13804c32d8">00653</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_break_tag_1afd2dda99f4d72ad4cfe14e13804c32d8">BreakTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l00654"/>00654 {
<anchor xml:id="__tags_8cpp_source_1l00655"/>00655 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag">FlowTag</link>*&#32;recParent&#32;=&#32;<link linkend="_class_flow_tag_1abc8bd4efabae9ac712d76869d6ae7621">parentFlowTag</link>;
<anchor xml:id="__tags_8cpp_source_1l00656"/>00656 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(recParent)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;recParent-&gt;<link linkend="_class_flow_tag_1a27aa7ae58c701f6292ca80c42f0ddc42">forcedExit</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(recParent-&gt;<link linkend="_class_flow_tag_1a958c7f40de694587c20e8e3a317d3ac9">canReboot</link>)<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;recParent&#32;=&#32;recParent-&gt;<link linkend="_class_flow_tag_1abc8bd4efabae9ac712d76869d6ae7621">parentFlowTag</link>;
<anchor xml:id="__tags_8cpp_source_1l00660"/>00660 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00661"/>00661 }
<anchor xml:id="__tags_8cpp_source_1l00662"/>00662 
<anchor xml:id="__tags_8cpp_source_1l00663"/><link linkend="_class_continue_tag_1add13cb01afaea3dbd295acc40c8ed378">00663</link> <link linkend="_class_continue_tag_1add13cb01afaea3dbd295acc40c8ed378">ContinueTag::ContinueTag</link>()&#32;:<link linkend="_class_flow_tag">FlowTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00664"/>00664 {
<anchor xml:id="__tags_8cpp_source_1l00665"/>00665 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;continueK;
<anchor xml:id="__tags_8cpp_source_1l00666"/>00666 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880ac8a133daf898a369769587c9ce75793d">CONTINUETAG</link>;
<anchor xml:id="__tags_8cpp_source_1l00667"/>00667 }
<anchor xml:id="__tags_8cpp_source_1l00668"/>00668 
<anchor xml:id="__tags_8cpp_source_1l00669"/><link linkend="_class_continue_tag_1a85aec24d390651fc3ac47fb56bc14028">00669</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_continue_tag_1a85aec24d390651fc3ac47fb56bc14028">ContinueTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l00670"/>00670 {
<anchor xml:id="__tags_8cpp_source_1l00671"/>00671 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag">FlowTag</link>*&#32;recParent&#32;=&#32;<link linkend="_class_flow_tag_1abc8bd4efabae9ac712d76869d6ae7621">parentFlowTag</link>;
<anchor xml:id="__tags_8cpp_source_1l00672"/>00672 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(recParent)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(recParent-&gt;<link linkend="_class_flow_tag_1a958c7f40de694587c20e8e3a317d3ac9">canReboot</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00674"/>00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;recParent-&gt;<link linkend="_class_flow_tag_1a05c9772461f3196076558af05e4da81a">rebootLoop</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;recParent-&gt;<link linkend="_class_flow_tag_1a27aa7ae58c701f6292ca80c42f0ddc42">forcedExit</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;recParent&#32;=&#32;recParent-&gt;<link linkend="_class_flow_tag_1abc8bd4efabae9ac712d76869d6ae7621">parentFlowTag</link>;
<anchor xml:id="__tags_8cpp_source_1l00679"/>00679 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00680"/>00680 }
<anchor xml:id="__tags_8cpp_source_1l00681"/>00681 
<anchor xml:id="__tags_8cpp_source_1l00682"/>00682 
<anchor xml:id="__tags_8cpp_source_1l00683"/><link linkend="_class_dim_y_tag_1ab9e3493f1d6689f8b2f6a711a3983b98">00683</link> <link linkend="_class_dim_y_tag_1ab9e3493f1d6689f8b2f6a711a3983b98">DimYTag::DimYTag</link>()&#32;:<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l00684"/>00684 {
<anchor xml:id="__tags_8cpp_source_1l00685"/>00685 
<anchor xml:id="__tags_8cpp_source_1l00686"/>00686 &#32;&#32;&#32;&#32;
<anchor xml:id="__tags_8cpp_source_1l00687"/>00687 }
<anchor xml:id="__tags_8cpp_source_1l00688"/>00688 
<anchor xml:id="__tags_8cpp_source_1l00689"/><link linkend="_class_dim_x_tag_1ad7c7b50144a305c17c4a5902be72abdd">00689</link> <link linkend="_class_dim_x_tag_1ad7c7b50144a305c17c4a5902be72abdd">DimXTag::DimXTag</link>()&#32;:<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l00690"/>00690 {
<anchor xml:id="__tags_8cpp_source_1l00691"/>00691 
<anchor xml:id="__tags_8cpp_source_1l00692"/>00692 &#32;&#32;&#32;&#32;
<anchor xml:id="__tags_8cpp_source_1l00693"/>00693 }
<anchor xml:id="__tags_8cpp_source_1l00694"/>00694 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00695"/><link linkend="__tags_8cpp_1ab30d3866e4109a758188a1aeb012ea01">00695</link> std::shared_ptr&#32;&lt;&#32;ListTag&lt;T&gt;&gt;&#32;<link linkend="__tags_8cpp_1ab30d3866e4109a758188a1aeb012ea01">getListTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00696"/>00696 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::dynamic_pointer_cast&lt;ListTag&lt;T&gt;&gt;(tag);
<anchor xml:id="__tags_8cpp_source_1l00697"/>00697 }
<anchor xml:id="__tags_8cpp_source_1l00698"/>00698 
<anchor xml:id="__tags_8cpp_source_1l00699"/>00699 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l00700"/><link linkend="_class_list_tag_1a1aed24f27987c6c8e8d32aeb3cb4e116">00700</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_list_tag_1a1aed24f27987c6c8e8d32aeb3cb4e116">ListTag&lt;T&gt;::execute</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00701"/>00701 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;tag&#32;:&#32;listTags)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(this-&gt;myType)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a552df1d14502610c8d2fe012dec1a82e">LOADTAG</link>:&#32;{
<anchor xml:id="__tags_8cpp_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::shared_ptr&lt;LoadTag&lt;std::vector&lt;T&gt;&gt;&gt;&#32;ldTagList&#32;=&#32;<link linkend="__tags_8cpp_1aad17b0d48f011d5869f82adb31915669">getLoadTag&lt;std::vector&lt;T&gt;</link>&gt;(tag);
<anchor xml:id="__tags_8cpp_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;LoadTag&lt;T&gt;&gt;&#32;ldTag&#32;=&#32;<link linkend="__tags_8cpp_1aad17b0d48f011d5869f82adb31915669">getLoadTag&lt;T&gt;</link>(tag);
<anchor xml:id="__tags_8cpp_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ldTagList)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ldTagList-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myList.insert(myList.end(),&#32;ldTagList-&gt;value.begin(),&#32;ldTagList-&gt;value.end());
<anchor xml:id="__tags_8cpp_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ldTag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ldTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myList.push_back(ldTag-&gt;value);
<anchor xml:id="__tags_8cpp_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a16cdbd7bcce4c516cb8b0224ba73d9b5">LISTTAG</link>:&#32;{
<anchor xml:id="__tags_8cpp_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;ListTag&lt;T&gt;&gt;&#32;liTag&#32;=&#32;<link linkend="__tags_8cpp_1ab30d3866e4109a758188a1aeb012ea01">getListTag&lt;T&gt;</link>(tag);
<anchor xml:id="__tags_8cpp_source_1l00719"/>00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(liTag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;liTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myList.insert(myList.end(),&#32;liTag-&gt;myList.begin(),&#32;liTag-&gt;myList.end());
<anchor xml:id="__tags_8cpp_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;{
<anchor xml:id="__tags_8cpp_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;executeSimpleTag(tag);
<anchor xml:id="__tags_8cpp_source_1l00727"/>00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00731"/>00731 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00732"/>00732 }
<anchor xml:id="__tags_8cpp_source_1l00733"/>00733 
<anchor xml:id="__tags_8cpp_source_1l00734"/>00734 <emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l00735"/><link linkend="_class_list_tag_1a9133c6418a6690851c42f2b707f2978d">00735</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_list_tag_1a6c6d53f00593d4a6edfe213829d82ea0">ListTag&lt;int&gt;::executeSimpleTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l00736"/>00736 {
<anchor xml:id="__tags_8cpp_source_1l00737"/>00737 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myList.push_back(<link linkend="__tags_8cpp_1af21ab8bf49b3e2e38e00d6cadb1e4871">executeInt</link>(tag));
<anchor xml:id="__tags_8cpp_source_1l00739"/>00739 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00740"/>00740 }
<anchor xml:id="__tags_8cpp_source_1l00741"/>00741 <emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l00742"/><link linkend="_class_list_tag_1ac4a1534d0c7bbe85591dc0268635d639">00742</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_list_tag_1a6c6d53f00593d4a6edfe213829d82ea0">ListTag&lt;float&gt;::executeSimpleTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l00743"/>00743 {
<anchor xml:id="__tags_8cpp_source_1l00744"/>00744 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myList.push_back(<link linkend="__tags_8cpp_1ac1dada7a37a3c93abfa74f5d178e096d">executeFloat</link>(tag));
<anchor xml:id="__tags_8cpp_source_1l00746"/>00746 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00747"/>00747 }
<anchor xml:id="__tags_8cpp_source_1l00748"/>00748 <emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l00749"/><link linkend="_class_list_tag_1a4b3996b967d7c4ea8a44fd744ef3c054">00749</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_list_tag_1a6c6d53f00593d4a6edfe213829d82ea0">ListTag&lt;bool&gt;::executeSimpleTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l00750"/>00750 {
<anchor xml:id="__tags_8cpp_source_1l00751"/>00751 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myList.push_back(<link linkend="__tags_8cpp_1a760d219c228224543b5e154be938a6c2">executeBool</link>(tag));
<anchor xml:id="__tags_8cpp_source_1l00753"/>00753 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00754"/>00754 }
<anchor xml:id="__tags_8cpp_source_1l00755"/>00755 
<anchor xml:id="__tags_8cpp_source_1l00756"/>00756 <emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l00757"/><link linkend="_class_list_tag_1a295acc5454205ee47ffb6da7d06e9a8f">00757</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_list_tag_1a6c6d53f00593d4a6edfe213829d82ea0">ListTag&lt;std::string&gt;::executeSimpleTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l00758"/>00758 {
<anchor xml:id="__tags_8cpp_source_1l00759"/>00759 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myList.push_back(<link linkend="__tags_8cpp_1a4bab8267d7e817b59ed55ad288131821">executeString</link>(tag));
<anchor xml:id="__tags_8cpp_source_1l00761"/>00761 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00762"/>00762 }
<anchor xml:id="__tags_8cpp_source_1l00763"/>00763 
<anchor xml:id="__tags_8cpp_source_1l00764"/>00764 <emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l00765"/><link linkend="_class_list_tag_1ae4d69bbe6f70fb5303486e8cb901c0e4">00765</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_list_tag_1a6c6d53f00593d4a6edfe213829d82ea0">ListTag&lt;Coord&gt;::executeSimpleTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l00766"/>00766 {
<anchor xml:id="__tags_8cpp_source_1l00767"/>00767 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00768"/>00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myList.push_back(<link linkend="__tags_8cpp_1acc7a7317843e349ecdffda47724bf380">executeCoord</link>(tag));
<anchor xml:id="__tags_8cpp_source_1l00769"/>00769 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00770"/>00770 }
<anchor xml:id="__tags_8cpp_source_1l00771"/>00771 
<anchor xml:id="__tags_8cpp_source_1l00772"/>00772 <emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l00773"/><link linkend="_class_list_tag_1aaba7df0a3b99b501867a6b32d6e06281">00773</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_list_tag_1a6c6d53f00593d4a6edfe213829d82ea0">ListTag&lt;Zone&gt;::executeSimpleTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l00774"/>00774 {
<anchor xml:id="__tags_8cpp_source_1l00775"/>00775 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myList.push_back(<link linkend="__tags_8cpp_1af880453da2451d42d582407678414cca">executeZone</link>(tag));
<anchor xml:id="__tags_8cpp_source_1l00777"/>00777 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00778"/>00778 }
<anchor xml:id="__tags_8cpp_source_1l00779"/>00779 <emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l00780"/><link linkend="_class_list_tag_1a13d2ab53f05b3e556994c739567374a1">00780</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_list_tag_1a6c6d53f00593d4a6edfe213829d82ea0">ListTag&lt;Direction&gt;::executeSimpleTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l00781"/>00781 {
<anchor xml:id="__tags_8cpp_source_1l00782"/>00782 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myList.push_back(<link linkend="__tags_8cpp_1adb0c764ef1f20ef3d860516a5040b43a">executeDirection</link>(tag));
<anchor xml:id="__tags_8cpp_source_1l00784"/>00784 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00785"/>00785 }
<anchor xml:id="__tags_8cpp_source_1l00786"/>00786 
<anchor xml:id="__tags_8cpp_source_1l00787"/>00787 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Type&gt;
<anchor xml:id="__tags_8cpp_source_1l00788"/><link linkend="_class_list_tag_1ae4851aba38c6a1d46a312a885dec96b8">00788</link> <link linkend="_class_list_tag_1a85a7690e4b8c627a2dda4420afc34960">ListTag&lt;Type&gt;::ListTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::shared_ptr&lt;Tag&gt;&gt;&amp;&#32;parameters):<link linkend="_class_list_tag">ListTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00789"/>00789 {
<anchor xml:id="__tags_8cpp_source_1l00790"/>00790 &#32;&#32;&#32;&#32;<link linkend="_class_list_tag_1a52c53f384e6f5ced932772417d64c75b">listTags</link>.insert(<link linkend="_class_list_tag_1a52c53f384e6f5ced932772417d64c75b">listTags</link>.begin(),&#32;parameters.begin(),&#32;parameters.end());
<anchor xml:id="__tags_8cpp_source_1l00791"/>00791 }
<anchor xml:id="__tags_8cpp_source_1l00792"/>00792 
<anchor xml:id="__tags_8cpp_source_1l00793"/>00793 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Type&gt;
<anchor xml:id="__tags_8cpp_source_1l00794"/><link linkend="_class_list_tag_1a85a7690e4b8c627a2dda4420afc34960">00794</link> <link linkend="_class_list_tag_1a85a7690e4b8c627a2dda4420afc34960">ListTag&lt;Type&gt;::ListTag</link>()&#32;:<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l00795"/>00795 {
<anchor xml:id="__tags_8cpp_source_1l00796"/>00796 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;listK;
<anchor xml:id="__tags_8cpp_source_1l00797"/>00797 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a16cdbd7bcce4c516cb8b0224ba73d9b5">LISTTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l00798"/>00798 }
<anchor xml:id="__tags_8cpp_source_1l00799"/>00799 
<anchor xml:id="__tags_8cpp_source_1l00800"/><link linkend="_class_string_tag_1a2e5c73e953daf54dfca39016aa7e26bb">00800</link> <link linkend="_class_string_tag_1a2e5c73e953daf54dfca39016aa7e26bb">StringTag::StringTag</link>()&#32;:<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l00801"/>00801 {
<anchor xml:id="__tags_8cpp_source_1l00802"/>00802 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;stringK;
<anchor xml:id="__tags_8cpp_source_1l00803"/>00803 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a11d91d6f4c67f9381f1a4dece3ce5ff5">STRINGTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l00804"/>00804 }
<anchor xml:id="__tags_8cpp_source_1l00805"/>00805 
<anchor xml:id="__tags_8cpp_source_1l00806"/><link linkend="__tags_8cpp_1a6d2d78e110de0d5def95ebf64150ef48">00806</link> std::shared_ptr&lt;StringTag&gt;&#32;<link linkend="__tags_8cpp_1a6d2d78e110de0d5def95ebf64150ef48">getStringTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l00807"/>00807 {
<anchor xml:id="__tags_8cpp_source_1l00808"/>00808 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::dynamic_pointer_cast&lt;StringTag&gt;(tag);
<anchor xml:id="__tags_8cpp_source_1l00809"/>00809 }
<anchor xml:id="__tags_8cpp_source_1l00810"/>00810 
<anchor xml:id="__tags_8cpp_source_1l00811"/><link linkend="__tags_8cpp_1a4bab8267d7e817b59ed55ad288131821">00811</link> std::string&#32;<link linkend="__tags_8cpp_1a4bab8267d7e817b59ed55ad288131821">executeString</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;parameter)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00812"/>00812 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;myTag&#32;=&#32;parameter;
<anchor xml:id="__tags_8cpp_source_1l00813"/>00813 &#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;StringTag&gt;&#32;sTag;
<anchor xml:id="__tags_8cpp_source_1l00814"/>00814 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(myTag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00815"/>00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(myTag-&gt;myType)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00816"/>00816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a11d91d6f4c67f9381f1a4dece3ce5ff5">STRINGTAG</link>:
<anchor xml:id="__tags_8cpp_source_1l00817"/>00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sTag&#32;=&#32;<link linkend="__tags_8cpp_1a6d2d78e110de0d5def95ebf64150ef48">getStringTag</link>(myTag);
<anchor xml:id="__tags_8cpp_source_1l00818"/>00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l00819"/>00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sTag-&gt;myString;
<anchor xml:id="__tags_8cpp_source_1l00820"/>00820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a552df1d14502610c8d2fe012dec1a82e">LOADTAG</link>:
<anchor xml:id="__tags_8cpp_source_1l00821"/>00821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;LoadTag&lt;std::string&gt;&gt;&#32;lTag&#32;=&#32;<link linkend="__tags_8cpp_1aad17b0d48f011d5869f82adb31915669">getLoadTag&lt;std::string&gt;</link>(myTag);
<anchor xml:id="__tags_8cpp_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l00823"/>00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lTag-&gt;value;
<anchor xml:id="__tags_8cpp_source_1l00824"/>00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00825"/>00825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00826"/>00826 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00827"/>00827 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::string();
<anchor xml:id="__tags_8cpp_source_1l00828"/>00828 }
<anchor xml:id="__tags_8cpp_source_1l00829"/>00829 
<anchor xml:id="__tags_8cpp_source_1l00830"/><link linkend="_class_string_tag_1a3c3b61a64de4cafa2a26b413b0bed686">00830</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_string_tag_1a3c3b61a64de4cafa2a26b413b0bed686">StringTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l00831"/>00831 {
<anchor xml:id="__tags_8cpp_source_1l00832"/>00832 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_tag_1a688d838bee273d203d6b16caaca3ed2b">doExecute</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00833"/>00833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_string_tag_1a7bec4c9b425a7e192dd733a5f4552aa7">myString</link>&#32;=&#32;<link linkend="__tags_8h_1a4bab8267d7e817b59ed55ad288131821">executeString</link>(<link linkend="_class_string_tag_1af67011aecf9702cc16299cb5cc834fce">stringTag</link>);
<anchor xml:id="__tags_8cpp_source_1l00834"/>00834 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00835"/>00835 }
<anchor xml:id="__tags_8cpp_source_1l00836"/>00836 
<anchor xml:id="__tags_8cpp_source_1l00837"/><link linkend="_class_string_tag_1ae869ed429e16fdf7d048eb4e61ea6aa7">00837</link> <link linkend="_class_string_tag_1a2e5c73e953daf54dfca39016aa7e26bb">StringTag::StringTag</link>(std::string&#32;v):<link linkend="_class_string_tag">StringTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00838"/>00838 {
<anchor xml:id="__tags_8cpp_source_1l00839"/>00839 &#32;&#32;&#32;&#32;<link linkend="_class_string_tag_1a7bec4c9b425a7e192dd733a5f4552aa7">myString</link>&#32;=&#32;v;
<anchor xml:id="__tags_8cpp_source_1l00840"/>00840 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a688d838bee273d203d6b16caaca3ed2b">doExecute</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00841"/>00841 }
<anchor xml:id="__tags_8cpp_source_1l00842"/>00842 
<anchor xml:id="__tags_8cpp_source_1l00843"/><link linkend="_class_string_tag_1ac92c566596e550da81d3c5727c2e9daa">00843</link> <link linkend="_class_string_tag_1a2e5c73e953daf54dfca39016aa7e26bb">StringTag::StringTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;parameter):<link linkend="_class_string_tag">StringTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00844"/>00844 {
<anchor xml:id="__tags_8cpp_source_1l00845"/>00845 &#32;&#32;&#32;&#32;<link linkend="_class_string_tag_1af67011aecf9702cc16299cb5cc834fce">stringTag</link>=parameter;
<anchor xml:id="__tags_8cpp_source_1l00846"/>00846 }
<anchor xml:id="__tags_8cpp_source_1l00847"/>00847 
<anchor xml:id="__tags_8cpp_source_1l00848"/><link linkend="_class_direction_tag_1abe3e1bd2620fa1cf0e69adf365d34c01">00848</link> <link linkend="_class_direction_tag_1abe3e1bd2620fa1cf0e69adf365d34c01">DirectionTag::DirectionTag</link>()&#32;:<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l00849"/>00849 {
<anchor xml:id="__tags_8cpp_source_1l00850"/>00850 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;directionK;
<anchor xml:id="__tags_8cpp_source_1l00851"/>00851 &#32;&#32;&#32;&#32;<link linkend="_class_direction_tag_1a3939708621f78928a521b4ad47d9c4ee">myDir</link>&#32;=&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa2c63acbe79d9f41ba6bb7766e9c37702">N</link>;
<anchor xml:id="__tags_8cpp_source_1l00852"/>00852 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a96d60eef4da56925cdc29046e7cd2ac1">DIRECTIONTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l00853"/>00853 }
<anchor xml:id="__tags_8cpp_source_1l00854"/>00854 
<anchor xml:id="__tags_8cpp_source_1l00855"/><link linkend="_class_direction_tag_1a04b8834b4274d7f291dcd58080f1db13">00855</link> <link linkend="_class_direction_tag_1abe3e1bd2620fa1cf0e69adf365d34c01">DirectionTag::DirectionTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;parameter)&#32;:<link linkend="_class_direction_tag">DirectionTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00856"/>00856 {
<anchor xml:id="__tags_8cpp_source_1l00857"/>00857 &#32;&#32;&#32;&#32;<link linkend="_class_direction_tag_1af55b3d806364b3c8b18486cf7990e8fd">dirTag</link>=parameter;
<anchor xml:id="__tags_8cpp_source_1l00858"/>00858 }
<anchor xml:id="__tags_8cpp_source_1l00859"/>00859 
<anchor xml:id="__tags_8cpp_source_1l00860"/><link linkend="_class_direction_tag_1a9415387902a3390400b241caef6d83d2">00860</link> <link linkend="_class_direction_tag_1abe3e1bd2620fa1cf0e69adf365d34c01">DirectionTag::DirectionTag</link>(<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aa">Direction</link>&#32;dir)&#32;:<link linkend="_class_direction_tag">DirectionTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00861"/>00861 {
<anchor xml:id="__tags_8cpp_source_1l00862"/>00862 &#32;&#32;&#32;&#32;<link linkend="_class_direction_tag_1a3939708621f78928a521b4ad47d9c4ee">myDir</link>&#32;=&#32;dir;
<anchor xml:id="__tags_8cpp_source_1l00863"/>00863 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a688d838bee273d203d6b16caaca3ed2b">doExecute</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00864"/>00864 }
<anchor xml:id="__tags_8cpp_source_1l00865"/>00865 
<anchor xml:id="__tags_8cpp_source_1l00866"/><link linkend="__tags_8cpp_1a51e57c878c8df7f38ce915b45d3dc451">00866</link> std::shared_ptr&#32;&lt;&#32;DirectionTag&gt;&#32;<link linkend="__tags_8cpp_1a51e57c878c8df7f38ce915b45d3dc451">getDirectionTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00867"/>00867 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::dynamic_pointer_cast&lt;DirectionTag&gt;(tag);
<anchor xml:id="__tags_8cpp_source_1l00868"/>00868 }
<anchor xml:id="__tags_8cpp_source_1l00869"/>00869 
<anchor xml:id="__tags_8cpp_source_1l00870"/><link linkend="__tags_8cpp_1adb0c764ef1f20ef3d860516a5040b43a">00870</link> <link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aa">Direction</link>&#32;<link linkend="__tags_8cpp_1adb0c764ef1f20ef3d860516a5040b43a">executeDirection</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;parameter)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00871"/>00871 &#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;DirectionTag&gt;&#32;myDir;
<anchor xml:id="__tags_8cpp_source_1l00872"/>00872 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parameter)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00873"/>00873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(parameter-&gt;myType)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00874"/>00874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a96d60eef4da56925cdc29046e7cd2ac1">DIRECTIONTAG</link>:
<anchor xml:id="__tags_8cpp_source_1l00875"/>00875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myDir&#32;=&#32;<link linkend="__tags_8cpp_1a51e57c878c8df7f38ce915b45d3dc451">getDirectionTag</link>(parameter);
<anchor xml:id="__tags_8cpp_source_1l00876"/>00876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myDir-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l00877"/>00877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;myDir-&gt;myDir;
<anchor xml:id="__tags_8cpp_source_1l00878"/>00878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00879"/>00879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00880"/>00880 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00881"/>00881 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa2c63acbe79d9f41ba6bb7766e9c37702">N</link>;
<anchor xml:id="__tags_8cpp_source_1l00882"/>00882 }
<anchor xml:id="__tags_8cpp_source_1l00883"/>00883 
<anchor xml:id="__tags_8cpp_source_1l00884"/><link linkend="_class_direction_tag_1a2b90667db99f9bfdecdf45a7cc72dd0e">00884</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_direction_tag_1a2b90667db99f9bfdecdf45a7cc72dd0e">DirectionTag::execute</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l00885"/>00885 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_tag_1a688d838bee273d203d6b16caaca3ed2b">doExecute</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00886"/>00886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_direction_tag_1a3939708621f78928a521b4ad47d9c4ee">myDir</link>&#32;=&#32;<link linkend="__tags_8h_1adb0c764ef1f20ef3d860516a5040b43a">executeDirection</link>(<link linkend="_class_direction_tag_1af55b3d806364b3c8b18486cf7990e8fd">dirTag</link>);
<anchor xml:id="__tags_8cpp_source_1l00887"/>00887 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00888"/>00888 }
<anchor xml:id="__tags_8cpp_source_1l00889"/>00889 
<anchor xml:id="__tags_8cpp_source_1l00890"/><link linkend="_class_zone_tag_1ac9fd5e8d91b28c55ecb9c51266a4a836">00890</link> <link linkend="_class_zone_tag_1ac9fd5e8d91b28c55ecb9c51266a4a836">ZoneTag::ZoneTag</link>()&#32;:<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l00891"/>00891 {
<anchor xml:id="__tags_8cpp_source_1l00892"/>00892 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;zoneK;
<anchor xml:id="__tags_8cpp_source_1l00893"/>00893 }
<anchor xml:id="__tags_8cpp_source_1l00894"/>00894 
<anchor xml:id="__tags_8cpp_source_1l00895"/><link linkend="_class_zone_tag_1a1ea585289c3f0306244a225554e77e0b">00895</link> <link linkend="_class_zone_tag_1ac9fd5e8d91b28c55ecb9c51266a4a836">ZoneTag::ZoneTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;parameter)&#32;:<link linkend="_class_zone_tag">ZoneTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00896"/>00896 {
<anchor xml:id="__tags_8cpp_source_1l00897"/>00897 &#32;&#32;&#32;&#32;<link linkend="_class_zone_tag_1af7857e26acd83f74512c98ae40fcb901">zoneTag</link>=parameter;
<anchor xml:id="__tags_8cpp_source_1l00898"/>00898 }
<anchor xml:id="__tags_8cpp_source_1l00899"/>00899 
<anchor xml:id="__tags_8cpp_source_1l00900"/><link linkend="__tags_8cpp_1a87514b166197bc785f979c9b79214abb">00900</link> std::shared_ptr&#32;&lt;&#32;ZoneTag&gt;&#32;<link linkend="__tags_8cpp_1a87514b166197bc785f979c9b79214abb">getZoneTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l00901"/>00901 {
<anchor xml:id="__tags_8cpp_source_1l00902"/>00902 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::dynamic_pointer_cast&lt;ZoneTag&gt;(tag);
<anchor xml:id="__tags_8cpp_source_1l00903"/>00903 }
<anchor xml:id="__tags_8cpp_source_1l00904"/>00904 
<anchor xml:id="__tags_8cpp_source_1l00905"/><link linkend="__tags_8cpp_1a2a49ee7ef9d60abe24ab727b3df6ec9e">00905</link> std::shared_ptr&#32;&lt;&#32;FlowTag&gt;&#32;<link linkend="__tags_8cpp_1a2a49ee7ef9d60abe24ab727b3df6ec9e">getFlowTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l00906"/>00906 {
<anchor xml:id="__tags_8cpp_source_1l00907"/>00907 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::dynamic_pointer_cast&lt;FlowTag&gt;(tag);
<anchor xml:id="__tags_8cpp_source_1l00908"/>00908 }
<anchor xml:id="__tags_8cpp_source_1l00909"/>00909 
<anchor xml:id="__tags_8cpp_source_1l00910"/><link linkend="__tags_8cpp_1af880453da2451d42d582407678414cca">00910</link> <link linkend="_struct_zone">Zone</link>&#32;<link linkend="__tags_8cpp_1af880453da2451d42d582407678414cca">executeZone</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;nestedTag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00911"/>00911 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;tag1&#32;=&#32;nestedTag;
<anchor xml:id="__tags_8cpp_source_1l00912"/>00912 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tag1)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00913"/>00913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(tag1-&gt;myType)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00914"/>00914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a86843de677434d772038ccd7f22bc632">ZONETAG</link>:
<anchor xml:id="__tags_8cpp_source_1l00915"/>00915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__tags_8cpp_1af880453da2451d42d582407678414cca">executeZone</link>(<link linkend="__tags_8cpp_1a87514b166197bc785f979c9b79214abb">getZoneTag</link>(tag1)-&gt;zoneTag);
<anchor xml:id="__tags_8cpp_source_1l00916"/>00916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00917"/>00917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a552df1d14502610c8d2fe012dec1a82e">LOADTAG</link>:
<anchor xml:id="__tags_8cpp_source_1l00918"/>00918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;LoadTag&lt;Zone&gt;&gt;&#32;lTag&#32;=&#32;<link linkend="__tags_8cpp_1aad17b0d48f011d5869f82adb31915669">getLoadTag&lt;Zone&gt;</link>(tag1);
<anchor xml:id="__tags_8cpp_source_1l00919"/>00919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l00920"/>00920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lTag-&gt;value;
<anchor xml:id="__tags_8cpp_source_1l00921"/>00921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00922"/>00922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00923"/>00923 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00924"/>00924 }
<anchor xml:id="__tags_8cpp_source_1l00925"/>00925 
<anchor xml:id="__tags_8cpp_source_1l00926"/><link linkend="__tags_8cpp_1a50b5a098d92d9488b24f241307659676">00926</link> <link linkend="_struct_zone">Zone</link>&#32;<link linkend="__tags_8cpp_1af880453da2451d42d582407678414cca">executeZone</link>(std::vector&lt;std::shared_ptr&lt;Tag&gt;&gt;&#32;nestedTags)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00927"/>00927 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nbPar&#32;=&#32;nestedTags.size();
<anchor xml:id="__tags_8cpp_source_1l00928"/>00928 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;tag1;
<anchor xml:id="__tags_8cpp_source_1l00929"/>00929 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;tag2;
<anchor xml:id="__tags_8cpp_source_1l00930"/>00930 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(nbPar)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00931"/>00931 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:
<anchor xml:id="__tags_8cpp_source_1l00932"/>00932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__tags_8cpp_1af880453da2451d42d582407678414cca">executeZone</link>(nestedTags.at(0));
<anchor xml:id="__tags_8cpp_source_1l00933"/>00933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00934"/>00934 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:
<anchor xml:id="__tags_8cpp_source_1l00935"/>00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tag1&#32;=&#32;nestedTags.at(0);
<anchor xml:id="__tags_8cpp_source_1l00936"/>00936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tag2&#32;=&#32;nestedTags.at(1);
<anchor xml:id="__tags_8cpp_source_1l00937"/>00937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_zone">Zone</link>(<link linkend="__tags_8cpp_1acc7a7317843e349ecdffda47724bf380">executeCoord</link>(tag1),&#32;<link linkend="__tags_8cpp_1acc7a7317843e349ecdffda47724bf380">executeCoord</link>(tag2));
<anchor xml:id="__tags_8cpp_source_1l00938"/>00938 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00939"/>00939 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_zone">Zone</link>();
<anchor xml:id="__tags_8cpp_source_1l00940"/>00940 }
<anchor xml:id="__tags_8cpp_source_1l00941"/>00941 
<anchor xml:id="__tags_8cpp_source_1l00942"/><link linkend="_class_zone_tag_1a4a10c3cfdb2d700f189d3623a95e610f">00942</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_zone_tag_1a4a10c3cfdb2d700f189d3623a95e610f">ZoneTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l00943"/>00943 {
<anchor xml:id="__tags_8cpp_source_1l00944"/>00944 &#32;&#32;&#32;&#32;<link linkend="_class_zone_tag_1abb9dc619d7ba63464253152c26192c4f">myZone</link>&#32;=&#32;<link linkend="__tags_8h_1a0b74b4679c8d4d8c31c482a320e785dd">executeZone</link>(<link linkend="_class_zone_tag_1af7857e26acd83f74512c98ae40fcb901">zoneTag</link>);
<anchor xml:id="__tags_8cpp_source_1l00945"/>00945 }
<anchor xml:id="__tags_8cpp_source_1l00946"/>00946 
<anchor xml:id="__tags_8cpp_source_1l00947"/>00947 
<anchor xml:id="__tags_8cpp_source_1l00948"/><link linkend="_class_coord_tag_1a9e8fc8a0c136e05597145876f5c22160">00948</link> <link linkend="_class_coord_tag_1a9e8fc8a0c136e05597145876f5c22160">CoordTag::CoordTag</link>()&#32;:<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l00949"/>00949 {
<anchor xml:id="__tags_8cpp_source_1l00950"/>00950 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;coordK;
<anchor xml:id="__tags_8cpp_source_1l00951"/>00951 &#32;&#32;&#32;&#32;
<anchor xml:id="__tags_8cpp_source_1l00952"/>00952 }
<anchor xml:id="__tags_8cpp_source_1l00953"/>00953 
<anchor xml:id="__tags_8cpp_source_1l00954"/><link linkend="_class_coord_tag_1a165316b5f12ce7d38e3dd10e93676834">00954</link> <link linkend="_class_coord_tag_1a9e8fc8a0c136e05597145876f5c22160">CoordTag::CoordTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;parameter)&#32;:<link linkend="_class_coord_tag">CoordTag</link>()
<anchor xml:id="__tags_8cpp_source_1l00955"/>00955 {
<anchor xml:id="__tags_8cpp_source_1l00956"/>00956 &#32;&#32;&#32;&#32;<link linkend="_class_coord_tag_1a9fec5dbc718a7751339e0f1e18b6c90a">coordsTag</link>=parameter;
<anchor xml:id="__tags_8cpp_source_1l00957"/>00957 }
<anchor xml:id="__tags_8cpp_source_1l00958"/>00958 
<anchor xml:id="__tags_8cpp_source_1l00959"/><link linkend="_class_coord_tag_1abf3490e4deaceefde96250cefee8d947">00959</link> <link linkend="_class_coord_tag_1a9e8fc8a0c136e05597145876f5c22160">CoordTag::CoordTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;xPoint,&#32;<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;yPoint)
<anchor xml:id="__tags_8cpp_source_1l00960"/>00960 {
<anchor xml:id="__tags_8cpp_source_1l00961"/>00961 }
<anchor xml:id="__tags_8cpp_source_1l00962"/>00962 
<anchor xml:id="__tags_8cpp_source_1l00963"/><link linkend="__tags_8cpp_1aa6a6d33b38f91d7bc097749918417cfe">00963</link> std::shared_ptr&#32;&lt;&#32;CoordTag&gt;&#32;<link linkend="__tags_8cpp_1aa6a6d33b38f91d7bc097749918417cfe">getCoordTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l00964"/>00964 {
<anchor xml:id="__tags_8cpp_source_1l00965"/>00965 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::dynamic_pointer_cast&lt;CoordTag&gt;(tag);
<anchor xml:id="__tags_8cpp_source_1l00966"/>00966 }
<anchor xml:id="__tags_8cpp_source_1l00967"/>00967 
<anchor xml:id="__tags_8cpp_source_1l00968"/>00968 
<anchor xml:id="__tags_8cpp_source_1l00969"/>00969 
<anchor xml:id="__tags_8cpp_source_1l00970"/><link linkend="__tags_8cpp_1acc7a7317843e349ecdffda47724bf380">00970</link> <link linkend="_struct_coord">Coord</link>&#32;<link linkend="__tags_8cpp_1acc7a7317843e349ecdffda47724bf380">executeCoord</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;tag1)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00971"/>00971 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tag1)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00972"/>00972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(tag1-&gt;myType)&#32;{
<anchor xml:id="__tags_8cpp_source_1l00973"/>00973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880ab62b1ecd04a9b00d5d28af3b0493a5b2">COORDSTAG</link>:
<anchor xml:id="__tags_8cpp_source_1l00974"/>00974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__tags_8cpp_1acc7a7317843e349ecdffda47724bf380">executeCoord</link>(<link linkend="__tags_8cpp_1aa6a6d33b38f91d7bc097749918417cfe">getCoordTag</link>(tag1)-&gt;coordsTag);
<anchor xml:id="__tags_8cpp_source_1l00975"/>00975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00976"/>00976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a552df1d14502610c8d2fe012dec1a82e">LOADTAG</link>:&#32;{
<anchor xml:id="__tags_8cpp_source_1l00977"/>00977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::shared_ptr&lt;LoadTag&lt;Coord&gt;&gt;&#32;lTag&#32;=&#32;<link linkend="__tags_8cpp_1aad17b0d48f011d5869f82adb31915669">getLoadTag&lt;Coord&gt;</link>(tag1);
<anchor xml:id="__tags_8cpp_source_1l00978"/>00978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l00979"/>00979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lTag-&gt;value;
<anchor xml:id="__tags_8cpp_source_1l00980"/>00980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00981"/>00981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00982"/>00982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a16cdbd7bcce4c516cb8b0224ba73d9b5">LISTTAG</link>:&#32;{
<anchor xml:id="__tags_8cpp_source_1l00983"/>00983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;listTag&#32;=&#32;<link linkend="__tags_8cpp_1ab30d3866e4109a758188a1aeb012ea01">getListTag&lt;int&gt;</link>(tag1);
<anchor xml:id="__tags_8cpp_source_1l00984"/>00984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;listTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l00985"/>00985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!listTag-&gt;myList.empty())&#32;{
<anchor xml:id="__tags_8cpp_source_1l00986"/>00986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_coord">Coord</link>(listTag-&gt;myList.front(),&#32;listTag-&gt;myList.back());
<anchor xml:id="__tags_8cpp_source_1l00987"/>00987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00988"/>00988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_coord">Coord</link>();
<anchor xml:id="__tags_8cpp_source_1l00989"/>00989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l00990"/>00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00991"/>00991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__tags_8cpp_source_1l00992"/>00992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c&#32;=&#32;<link linkend="__tags_8cpp_1af21ab8bf49b3e2e38e00d6cadb1e4871">executeInt</link>(tag1);
<anchor xml:id="__tags_8cpp_source_1l00993"/>00993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_coord">Coord</link>(c,&#32;c);
<anchor xml:id="__tags_8cpp_source_1l00994"/>00994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00995"/>00995 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l00996"/>00996 }
<anchor xml:id="__tags_8cpp_source_1l00997"/>00997 
<anchor xml:id="__tags_8cpp_source_1l00998"/><link linkend="_class_coord_tag_1a05fd30fa6bcce4b90c96f81adcc7f096">00998</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_coord_tag_1a05fd30fa6bcce4b90c96f81adcc7f096">CoordTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l00999"/>00999 {
<anchor xml:id="__tags_8cpp_source_1l01000"/>01000 &#32;&#32;&#32;&#32;<link linkend="_class_coord_tag_1a33ae3880b132e3599a4c39bbd69b6b87">myCoords</link>&#32;=&#32;<link linkend="__tags_8h_1a64c0d9752378c22669792b3c89edcd8e">executeCoord</link>(<link linkend="_class_coord_tag_1a9fec5dbc718a7751339e0f1e18b6c90a">coordsTag</link>);
<anchor xml:id="__tags_8cpp_source_1l01001"/>01001 }
<anchor xml:id="__tags_8cpp_source_1l01002"/>01002 
<anchor xml:id="__tags_8cpp_source_1l01003"/>01003 
<anchor xml:id="__tags_8cpp_source_1l01004"/>01004 
<anchor xml:id="__tags_8cpp_source_1l01005"/><link linkend="_class_find_swipe_tag_1a19698b59231f0a1284066ff13cdea413">01005</link> <link linkend="_class_find_swipe_tag_1a19698b59231f0a1284066ff13cdea413">FindSwipeTag::FindSwipeTag</link>()&#32;:<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l01006"/>01006 {
<anchor xml:id="__tags_8cpp_source_1l01007"/>01007 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;findswipeK;
<anchor xml:id="__tags_8cpp_source_1l01008"/>01008 }
<anchor xml:id="__tags_8cpp_source_1l01009"/>01009 
<anchor xml:id="__tags_8cpp_source_1l01010"/>01010 
<anchor xml:id="__tags_8cpp_source_1l01011"/><link linkend="_class_find_click_tag_1a24b346dc204fb3cb8eeffa885b734d83">01011</link> <link linkend="_class_find_click_tag_1a24b346dc204fb3cb8eeffa885b734d83">FindClickTag::FindClickTag</link>()&#32;:<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l01012"/>01012 {
<anchor xml:id="__tags_8cpp_source_1l01013"/>01013 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;findclickK;
<anchor xml:id="__tags_8cpp_source_1l01014"/>01014 &#32;&#32;&#32;&#32;
<anchor xml:id="__tags_8cpp_source_1l01015"/>01015 }
<anchor xml:id="__tags_8cpp_source_1l01016"/>01016 
<anchor xml:id="__tags_8cpp_source_1l01017"/>01017 
<anchor xml:id="__tags_8cpp_source_1l01018"/><link linkend="_class_find_tag_1a49badd4ade138e2071911070fc06b4a5">01018</link> <link linkend="_class_find_tag_1a49badd4ade138e2071911070fc06b4a5">FindTag::FindTag</link>()&#32;:&#32;<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l01019"/>01019 {
<anchor xml:id="__tags_8cpp_source_1l01020"/>01020 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;findK;
<anchor xml:id="__tags_8cpp_source_1l01021"/>01021 
<anchor xml:id="__tags_8cpp_source_1l01022"/>01022 }
<anchor xml:id="__tags_8cpp_source_1l01023"/>01023 
<anchor xml:id="__tags_8cpp_source_1l01024"/><link linkend="_class_or_tag_1abbce566252b26aba0957f80e5836e50b">01024</link> <link linkend="_class_or_tag_1abbce566252b26aba0957f80e5836e50b">OrTag::OrTag</link>()&#32;:<link linkend="_class_bool_tag">BoolTag</link>()
<anchor xml:id="__tags_8cpp_source_1l01025"/>01025 {
<anchor xml:id="__tags_8cpp_source_1l01026"/>01026 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;orK;
<anchor xml:id="__tags_8cpp_source_1l01027"/>01027 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a199d52ad0ed0430bcc91286d139ca162">ORTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l01028"/>01028 }
<anchor xml:id="__tags_8cpp_source_1l01029"/>01029 
<anchor xml:id="__tags_8cpp_source_1l01030"/>01030 
<anchor xml:id="__tags_8cpp_source_1l01031"/>01031 
<anchor xml:id="__tags_8cpp_source_1l01032"/><link linkend="_class_and_tag_1a60df467b2f40b91eea883d943605a25d">01032</link> <link linkend="_class_and_tag_1a60df467b2f40b91eea883d943605a25d">AndTag::AndTag</link>()&#32;:<link linkend="_class_bool_tag">BoolTag</link>()
<anchor xml:id="__tags_8cpp_source_1l01033"/>01033 {
<anchor xml:id="__tags_8cpp_source_1l01034"/>01034 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;andK;
<anchor xml:id="__tags_8cpp_source_1l01035"/>01035 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a14f9ad7c03fde1738ae6de4a840be4d6">ANDTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l01036"/>01036 }
<anchor xml:id="__tags_8cpp_source_1l01037"/>01037 
<anchor xml:id="__tags_8cpp_source_1l01038"/><link linkend="_class_and_tag_1ad9ed5bf2068a82d8c202ceb081ef97bf">01038</link> <link linkend="_class_and_tag_1a60df467b2f40b91eea883d943605a25d">AndTag::AndTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::shared_ptr&lt;Tag&gt;&gt;&amp;&#32;parameter)&#32;:<link linkend="_class_and_tag">AndTag</link>()
<anchor xml:id="__tags_8cpp_source_1l01039"/>01039 {
<anchor xml:id="__tags_8cpp_source_1l01040"/>01040 &#32;&#32;&#32;&#32;<link linkend="_class_and_tag_1acb332cf01be98b38ff7b96b1ae6f8ae8">listTags</link>.insert(<link linkend="_class_and_tag_1acb332cf01be98b38ff7b96b1ae6f8ae8">listTags</link>.begin(),&#32;parameter.begin(),&#32;parameter.end());
<anchor xml:id="__tags_8cpp_source_1l01041"/>01041 }
<anchor xml:id="__tags_8cpp_source_1l01042"/>01042 
<anchor xml:id="__tags_8cpp_source_1l01043"/><link linkend="__tags_8cpp_1af91452b821388e3a5bd807713149302e">01043</link> std::shared_ptr&#32;&lt;&#32;AndTag&gt;&#32;<link linkend="__tags_8cpp_1af91452b821388e3a5bd807713149302e">getAndTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l01044"/>01044 {
<anchor xml:id="__tags_8cpp_source_1l01045"/>01045 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::dynamic_pointer_cast&lt;AndTag&gt;(tag);
<anchor xml:id="__tags_8cpp_source_1l01046"/>01046 }
<anchor xml:id="__tags_8cpp_source_1l01047"/>01047 
<anchor xml:id="__tags_8cpp_source_1l01048"/><link linkend="_class_and_tag_1a717c64277833f629122ee01f13af05ec">01048</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_and_tag_1a717c64277833f629122ee01f13af05ec">AndTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l01049"/>01049 {
<anchor xml:id="__tags_8cpp_source_1l01050"/>01050 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;turned&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01051"/>01051 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;myTag&#32;:&#32;<link linkend="_class_and_tag_1acb332cf01be98b38ff7b96b1ae6f8ae8">listTags</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01052"/>01052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__tags_8h_1a760d219c228224543b5e154be938a6c2">executeBool</link>(myTag))&#32;{
<anchor xml:id="__tags_8cpp_source_1l01053"/>01053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_bool_tag_1a533e516d764bce21a79a433ccd0ac1e1">myBool</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01054"/>01054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;turned&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01055"/>01055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01056"/>01056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01057"/>01057 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01058"/>01058 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!turned)<link linkend="_class_bool_tag_1a533e516d764bce21a79a433ccd0ac1e1">myBool</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01059"/>01059 }
<anchor xml:id="__tags_8cpp_source_1l01060"/>01060 
<anchor xml:id="__tags_8cpp_source_1l01061"/><link linkend="__tags_8cpp_1a805b34d208faf3a3fac1a282754b792b">01061</link> std::shared_ptr&#32;&lt;&#32;NotTag&gt;&#32;<link linkend="__tags_8cpp_1a805b34d208faf3a3fac1a282754b792b">getNotTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l01062"/>01062 {
<anchor xml:id="__tags_8cpp_source_1l01063"/>01063 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::dynamic_pointer_cast&lt;NotTag&gt;(tag);
<anchor xml:id="__tags_8cpp_source_1l01064"/>01064 }
<anchor xml:id="__tags_8cpp_source_1l01065"/>01065 
<anchor xml:id="__tags_8cpp_source_1l01066"/><link linkend="_class_not_tag_1a9723045acdbbb89720306f2d98d9f44e">01066</link> <link linkend="_class_not_tag_1a9b05792aaf904d9739c0ecdfed134696">NotTag::NotTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;parameter)&#32;:<link linkend="_class_not_tag">NotTag</link>()
<anchor xml:id="__tags_8cpp_source_1l01067"/>01067 {
<anchor xml:id="__tags_8cpp_source_1l01068"/>01068 &#32;&#32;&#32;&#32;<link linkend="_class_bool_tag_1a1f8f23c75e15979c0a5542dfab204234">boolTag</link>=parameter;
<anchor xml:id="__tags_8cpp_source_1l01069"/>01069 }
<anchor xml:id="__tags_8cpp_source_1l01070"/><link linkend="_class_not_tag_1a3d7062947f78178e7e20cc7ab790c3fc">01070</link> <link linkend="_class_not_tag_1a9b05792aaf904d9739c0ecdfed134696">NotTag::NotTag</link>(<emphasis role="keywordtype">bool</emphasis>&#32;b)&#32;:<link linkend="_class_not_tag">NotTag</link>()
<anchor xml:id="__tags_8cpp_source_1l01071"/>01071 {
<anchor xml:id="__tags_8cpp_source_1l01072"/>01072 &#32;&#32;&#32;&#32;<link linkend="_class_bool_tag_1a533e516d764bce21a79a433ccd0ac1e1">myBool</link>&#32;=&#32;!b;
<anchor xml:id="__tags_8cpp_source_1l01073"/>01073 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a688d838bee273d203d6b16caaca3ed2b">doExecute</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01074"/>01074 }
<anchor xml:id="__tags_8cpp_source_1l01075"/>01075 
<anchor xml:id="__tags_8cpp_source_1l01076"/><link linkend="__tags_8cpp_1ad21823e37708103e71e5792016193442">01076</link> std::shared_ptr&#32;&lt;&#32;OrTag&gt;&#32;<link linkend="__tags_8cpp_1ad21823e37708103e71e5792016193442">getOrTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l01077"/>01077 {
<anchor xml:id="__tags_8cpp_source_1l01078"/>01078 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::dynamic_pointer_cast&lt;OrTag&gt;(tag);
<anchor xml:id="__tags_8cpp_source_1l01079"/>01079 }
<anchor xml:id="__tags_8cpp_source_1l01080"/>01080 
<anchor xml:id="__tags_8cpp_source_1l01081"/><link linkend="_class_or_tag_1a557754df14ebca4527227935be71e936">01081</link> <link linkend="_class_or_tag_1abbce566252b26aba0957f80e5836e50b">OrTag::OrTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::shared_ptr&lt;Tag&gt;&gt;&amp;&#32;parameter)&#32;:<link linkend="_class_or_tag">OrTag</link>()
<anchor xml:id="__tags_8cpp_source_1l01082"/>01082 {
<anchor xml:id="__tags_8cpp_source_1l01083"/>01083 &#32;&#32;&#32;&#32;<link linkend="_class_or_tag_1a2d87eb30873b58b3a3d660634762b88d">listTags</link>.insert(<link linkend="_class_or_tag_1a2d87eb30873b58b3a3d660634762b88d">listTags</link>.begin(),&#32;parameter.begin(),&#32;parameter.end());
<anchor xml:id="__tags_8cpp_source_1l01084"/>01084 }
<anchor xml:id="__tags_8cpp_source_1l01085"/>01085 
<anchor xml:id="__tags_8cpp_source_1l01086"/><link linkend="_class_or_tag_1a09018c07d9e941c9dcdd1681fb35f396">01086</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_or_tag_1a09018c07d9e941c9dcdd1681fb35f396">OrTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l01087"/>01087 {
<anchor xml:id="__tags_8cpp_source_1l01088"/>01088 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;myOr&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01089"/>01089 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;myTag&#32;:&#32;<link linkend="_class_or_tag_1a2d87eb30873b58b3a3d660634762b88d">listTags</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01090"/>01090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__tags_8h_1a760d219c228224543b5e154be938a6c2">executeBool</link>(myTag))&#32;{
<anchor xml:id="__tags_8cpp_source_1l01091"/>01091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myOr&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01092"/>01092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01093"/>01093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01094"/>01094 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01095"/>01095 }
<anchor xml:id="__tags_8cpp_source_1l01096"/>01096 
<anchor xml:id="__tags_8cpp_source_1l01097"/>01097 
<anchor xml:id="__tags_8cpp_source_1l01098"/><link linkend="_class_not_tag_1a9b05792aaf904d9739c0ecdfed134696">01098</link> <link linkend="_class_not_tag_1a9b05792aaf904d9739c0ecdfed134696">NotTag::NotTag</link>()&#32;:<link linkend="_class_bool_tag">BoolTag</link>()
<anchor xml:id="__tags_8cpp_source_1l01099"/>01099 {
<anchor xml:id="__tags_8cpp_source_1l01100"/>01100 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;notK;
<anchor xml:id="__tags_8cpp_source_1l01101"/>01101 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a13bce77d85689a0d7d6d0b522a8cd862">NOTTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l01102"/>01102 }
<anchor xml:id="__tags_8cpp_source_1l01103"/>01103 
<anchor xml:id="__tags_8cpp_source_1l01104"/><link linkend="__tags_8cpp_1a760d219c228224543b5e154be938a6c2">01104</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__tags_8cpp_1a760d219c228224543b5e154be938a6c2">executeBool</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;parameter)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01105"/>01105 &#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;AndTag&gt;&#32;aTag;
<anchor xml:id="__tags_8cpp_source_1l01106"/>01106 &#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;NotTag&gt;&#32;nTag;
<anchor xml:id="__tags_8cpp_source_1l01107"/>01107 &#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;BoolTag&gt;&#32;bTag;
<anchor xml:id="__tags_8cpp_source_1l01108"/>01108 &#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;OrTag&gt;&#32;oTag;
<anchor xml:id="__tags_8cpp_source_1l01109"/>01109 &#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;LoadTag&lt;bool&gt;&gt;&#32;lTag;
<anchor xml:id="__tags_8cpp_source_1l01110"/>01110 &#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;CompareTag&lt;bool&gt;&gt;&#32;cTag;
<anchor xml:id="__tags_8cpp_source_1l01111"/>01111 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parameter)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01112"/>01112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;myTag&#32;=&#32;parameter;
<anchor xml:id="__tags_8cpp_source_1l01113"/>01113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(myTag-&gt;myType)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01114"/>01114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a8a28726c5abfda0da111d73995ee075a">BOOLTAG</link>:
<anchor xml:id="__tags_8cpp_source_1l01115"/>01115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bTag&#32;=&#32;<link linkend="__tags_8cpp_1ada36a59d6eb45b5f395f63dcebd48b61">getBoolTag</link>(myTag);
<anchor xml:id="__tags_8cpp_source_1l01116"/>01116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l01117"/>01117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;bTag-&gt;myBool;
<anchor xml:id="__tags_8cpp_source_1l01118"/>01118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a14f9ad7c03fde1738ae6de4a840be4d6">ANDTAG</link>:
<anchor xml:id="__tags_8cpp_source_1l01119"/>01119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aTag&#32;=&#32;<link linkend="__tags_8cpp_1af91452b821388e3a5bd807713149302e">getAndTag</link>(myTag);
<anchor xml:id="__tags_8cpp_source_1l01120"/>01120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(aTag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01121"/>01121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l01122"/>01122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;aTag-&gt;myBool;
<anchor xml:id="__tags_8cpp_source_1l01123"/>01123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01124"/>01124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01125"/>01125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a13bce77d85689a0d7d6d0b522a8cd862">NOTTAG</link>:
<anchor xml:id="__tags_8cpp_source_1l01126"/>01126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nTag&#32;=&#32;<link linkend="__tags_8cpp_1a805b34d208faf3a3fac1a282754b792b">getNotTag</link>(myTag);
<anchor xml:id="__tags_8cpp_source_1l01127"/>01127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nTag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01128"/>01128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l01129"/>01129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;nTag-&gt;myBool;
<anchor xml:id="__tags_8cpp_source_1l01130"/>01130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01131"/>01131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01132"/>01132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a199d52ad0ed0430bcc91286d139ca162">ORTAG</link>:
<anchor xml:id="__tags_8cpp_source_1l01133"/>01133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oTag&#32;=&#32;<link linkend="__tags_8cpp_1ad21823e37708103e71e5792016193442">getOrTag</link>(myTag);
<anchor xml:id="__tags_8cpp_source_1l01134"/>01134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(oTag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01135"/>01135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;oTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l01136"/>01136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;oTag-&gt;myBool;
<anchor xml:id="__tags_8cpp_source_1l01137"/>01137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;&#32;
<anchor xml:id="__tags_8cpp_source_1l01138"/>01138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01139"/>01139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880aab7c3d07f8bb9d4d3862d231bfdf5918">COMPARETAG</link>:
<anchor xml:id="__tags_8cpp_source_1l01140"/>01140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cTag&#32;=&#32;<link linkend="__tags_8cpp_1a084ac86e8860745ecc3d46c0a0ec9043">getCompareTag&lt;bool&gt;</link>(myTag);
<anchor xml:id="__tags_8cpp_source_1l01141"/>01141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cTag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01142"/>01142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l01143"/>01143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cTag-&gt;myBool;
<anchor xml:id="__tags_8cpp_source_1l01144"/>01144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01145"/>01145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01146"/>01146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a552df1d14502610c8d2fe012dec1a82e">LOADTAG</link>:
<anchor xml:id="__tags_8cpp_source_1l01147"/>01147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lTag&#32;=&#32;<link linkend="__tags_8cpp_1aad17b0d48f011d5869f82adb31915669">getLoadTag&lt;bool&gt;</link>(myTag);
<anchor xml:id="__tags_8cpp_source_1l01148"/>01148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lTag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01149"/>01149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l01150"/>01150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lTag-&gt;value;
<anchor xml:id="__tags_8cpp_source_1l01151"/>01151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01152"/>01152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01153"/>01153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01154"/>01154 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01155"/>01155 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01156"/>01156 }
<anchor xml:id="__tags_8cpp_source_1l01157"/>01157 
<anchor xml:id="__tags_8cpp_source_1l01158"/><link linkend="__tags_8cpp_1af21ab8bf49b3e2e38e00d6cadb1e4871">01158</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__tags_8cpp_1af21ab8bf49b3e2e38e00d6cadb1e4871">executeInt</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;myTag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01159"/>01159 &#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;IntTag&gt;&#32;myInt;
<anchor xml:id="__tags_8cpp_source_1l01160"/>01160 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(myTag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01161"/>01161 
<anchor xml:id="__tags_8cpp_source_1l01162"/>01162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(myTag-&gt;myType)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01163"/>01163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a0807368ef7b3e8a0bd3f6473571d1482">INTEGERTAG</link>:
<anchor xml:id="__tags_8cpp_source_1l01164"/>01164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myInt&#32;=&#32;<link linkend="__tags_8cpp_1ad39e58dec05b3a0be440334312e1b0a8">getIntTag</link>(myTag);
<anchor xml:id="__tags_8cpp_source_1l01165"/>01165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myInt-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l01166"/>01166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;myInt-&gt;myInt;
<anchor xml:id="__tags_8cpp_source_1l01167"/>01167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01168"/>01168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a552df1d14502610c8d2fe012dec1a82e">LOADTAG</link>:
<anchor xml:id="__tags_8cpp_source_1l01169"/>01169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::shared_ptr&lt;LoadTag&lt;int&gt;&gt;&#32;lTag&#32;=&#32;<link linkend="__tags_8cpp_1aad17b0d48f011d5869f82adb31915669">getLoadTag&lt;int&gt;</link>(myTag);
<anchor xml:id="__tags_8cpp_source_1l01170"/>01170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l01171"/>01171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lTag-&gt;value;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__tags_8cpp_source_1l01172"/>01172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01173"/>01173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01174"/>01174 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01175"/>01175 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__tags_8cpp_source_1l01176"/>01176 }
<anchor xml:id="__tags_8cpp_source_1l01177"/>01177 
<anchor xml:id="__tags_8cpp_source_1l01178"/><link linkend="__tags_8cpp_1ac1dada7a37a3c93abfa74f5d178e096d">01178</link> <emphasis role="keywordtype">float</emphasis>&#32;<link linkend="__tags_8cpp_1ac1dada7a37a3c93abfa74f5d178e096d">executeFloat</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;parameter)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01179"/>01179 &#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;FloatTag&gt;&#32;myFloat;
<anchor xml:id="__tags_8cpp_source_1l01180"/>01180 &#32;&#32;&#32;&#32;std::shared_ptr&lt;Tag&gt;&#32;myTag;
<anchor xml:id="__tags_8cpp_source_1l01181"/>01181 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(parameter)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01182"/>01182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myTag&#32;=&#32;parameter;
<anchor xml:id="__tags_8cpp_source_1l01183"/>01183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(myTag-&gt;myType)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01184"/>01184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a92977a6f3d797269d54c323ad37db8cc">FLOATTAG</link>:
<anchor xml:id="__tags_8cpp_source_1l01185"/>01185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myFloat&#32;=&#32;<link linkend="__tags_8cpp_1a348690c518cc923ed88d56c2d18f6f7d">getFloatTag</link>(myTag);
<anchor xml:id="__tags_8cpp_source_1l01186"/>01186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myFloat-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l01187"/>01187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;myFloat-&gt;myFloat;
<anchor xml:id="__tags_8cpp_source_1l01188"/>01188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a552df1d14502610c8d2fe012dec1a82e">LOADTAG</link>:
<anchor xml:id="__tags_8cpp_source_1l01189"/>01189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::shared_ptr&lt;LoadTag&lt;float&gt;&gt;&#32;lTag&#32;=&#32;<link linkend="__tags_8cpp_1aad17b0d48f011d5869f82adb31915669">getLoadTag&lt;float&gt;</link>(myTag);
<anchor xml:id="__tags_8cpp_source_1l01190"/>01190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l01191"/>01191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lTag-&gt;value;
<anchor xml:id="__tags_8cpp_source_1l01192"/>01192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01193"/>01193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01194"/>01194 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01195"/>01195 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__tags_8cpp_source_1l01196"/>01196 }
<anchor xml:id="__tags_8cpp_source_1l01197"/>01197 
<anchor xml:id="__tags_8cpp_source_1l01198"/><link linkend="_class_not_tag_1a533ae047d2883863ac8e998326a4037c">01198</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_not_tag_1a533ae047d2883863ac8e998326a4037c">NotTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l01199"/>01199 {
<anchor xml:id="__tags_8cpp_source_1l01200"/>01200 &#32;&#32;&#32;&#32;<link linkend="_class_bool_tag_1a533e516d764bce21a79a433ccd0ac1e1">myBool</link>&#32;=&#32;!<link linkend="__tags_8h_1a760d219c228224543b5e154be938a6c2">executeBool</link>(<link linkend="_class_bool_tag_1a1f8f23c75e15979c0a5542dfab204234">boolTag</link>);
<anchor xml:id="__tags_8cpp_source_1l01201"/>01201 }
<anchor xml:id="__tags_8cpp_source_1l01202"/>01202 
<anchor xml:id="__tags_8cpp_source_1l01203"/><link linkend="_class_float_tag_1a9ef595e09fb18e394522b30ad88b9c5e">01203</link> <link linkend="_class_float_tag_1a9ef595e09fb18e394522b30ad88b9c5e">FloatTag::FloatTag</link>():<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l01204"/>01204 {
<anchor xml:id="__tags_8cpp_source_1l01205"/>01205 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;floatK;
<anchor xml:id="__tags_8cpp_source_1l01206"/>01206 &#32;&#32;&#32;&#32;<link linkend="_class_float_tag_1a167593e261f788638cbfd6b1cbaad449">myFloat</link>&#32;=&#32;0;
<anchor xml:id="__tags_8cpp_source_1l01207"/>01207 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a92977a6f3d797269d54c323ad37db8cc">FLOATTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l01208"/>01208 }
<anchor xml:id="__tags_8cpp_source_1l01209"/>01209 
<anchor xml:id="__tags_8cpp_source_1l01210"/><link linkend="_class_float_tag_1ae801bdd9a3c6852ebfb9bfd6f325ad1e">01210</link> <link linkend="_class_float_tag_1a9ef595e09fb18e394522b30ad88b9c5e">FloatTag::FloatTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;parameter):<link linkend="_class_float_tag">FloatTag</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l01211"/>01211 &#32;&#32;&#32;&#32;<link linkend="_class_float_tag_1a1f6fd4ef0903aea7b85bf173201be4c9">floatTag</link>=parameter;
<anchor xml:id="__tags_8cpp_source_1l01212"/>01212 }
<anchor xml:id="__tags_8cpp_source_1l01213"/>01213 
<anchor xml:id="__tags_8cpp_source_1l01214"/><link linkend="_class_float_tag_1a0ce9f971d0fa6ba5191a4013acbd8eb7">01214</link> <link linkend="_class_float_tag_1a9ef595e09fb18e394522b30ad88b9c5e">FloatTag::FloatTag</link>(<emphasis role="keywordtype">float</emphasis>&#32;nb)&#32;:<link linkend="_class_float_tag">FloatTag</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l01215"/>01215 &#32;&#32;&#32;&#32;<link linkend="_class_float_tag_1a167593e261f788638cbfd6b1cbaad449">myFloat</link>&#32;=&#32;nb;
<anchor xml:id="__tags_8cpp_source_1l01216"/>01216 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a688d838bee273d203d6b16caaca3ed2b">doExecute</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01217"/>01217 }
<anchor xml:id="__tags_8cpp_source_1l01218"/>01218 
<anchor xml:id="__tags_8cpp_source_1l01219"/><link linkend="__tags_8cpp_1a348690c518cc923ed88d56c2d18f6f7d">01219</link> std::shared_ptr&#32;&lt;&#32;FloatTag&gt;&#32;<link linkend="__tags_8cpp_1a348690c518cc923ed88d56c2d18f6f7d">getFloatTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l01220"/>01220 {
<anchor xml:id="__tags_8cpp_source_1l01221"/>01221 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::dynamic_pointer_cast&lt;FloatTag&gt;(tag);
<anchor xml:id="__tags_8cpp_source_1l01222"/>01222 }
<anchor xml:id="__tags_8cpp_source_1l01223"/>01223 
<anchor xml:id="__tags_8cpp_source_1l01224"/><link linkend="_class_float_tag_1ab2c4b5b9179aa27b9a1815821cd10c06">01224</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_float_tag_1ab2c4b5b9179aa27b9a1815821cd10c06">FloatTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l01225"/>01225 {
<anchor xml:id="__tags_8cpp_source_1l01226"/>01226 &#32;&#32;&#32;&#32;<link linkend="_class_float_tag_1a167593e261f788638cbfd6b1cbaad449">myFloat</link>&#32;=&#32;<link linkend="__tags_8h_1ac1dada7a37a3c93abfa74f5d178e096d">executeFloat</link>(<link linkend="_class_float_tag_1a1f6fd4ef0903aea7b85bf173201be4c9">floatTag</link>);
<anchor xml:id="__tags_8cpp_source_1l01227"/>01227 }
<anchor xml:id="__tags_8cpp_source_1l01228"/>01228 
<anchor xml:id="__tags_8cpp_source_1l01229"/><link linkend="_class_function_tag_1a383cc95859f3f85b3530e2755ff3415c">01229</link> <link linkend="_class_function_tag_1a383cc95859f3f85b3530e2755ff3415c">FunctionTag::FunctionTag</link>()&#32;:<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l01230"/>01230 {
<anchor xml:id="__tags_8cpp_source_1l01231"/>01231 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;functionK;
<anchor xml:id="__tags_8cpp_source_1l01232"/>01232 
<anchor xml:id="__tags_8cpp_source_1l01233"/>01233 }
<anchor xml:id="__tags_8cpp_source_1l01234"/>01234 
<anchor xml:id="__tags_8cpp_source_1l01235"/><link linkend="_class_int_tag_1a52c34a238f8e95627413beabe849c380">01235</link> <link linkend="_class_int_tag_1a52c34a238f8e95627413beabe849c380">IntTag::IntTag</link>():<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l01236"/>01236 {
<anchor xml:id="__tags_8cpp_source_1l01237"/>01237 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;intK;
<anchor xml:id="__tags_8cpp_source_1l01238"/>01238 &#32;&#32;&#32;&#32;<link linkend="_class_int_tag_1a0814d81a516e25e0e61eb0216856417c">myInt</link>&#32;=&#32;0;
<anchor xml:id="__tags_8cpp_source_1l01239"/>01239 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a0807368ef7b3e8a0bd3f6473571d1482">INTEGERTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l01240"/>01240 }
<anchor xml:id="__tags_8cpp_source_1l01241"/>01241 
<anchor xml:id="__tags_8cpp_source_1l01242"/><link linkend="_class_int_tag_1a32965d4bf09239dd2de7d40b6073d4ea">01242</link> <link linkend="_class_int_tag_1a52c34a238f8e95627413beabe849c380">IntTag::IntTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;parameter):<link linkend="_class_int_tag">IntTag</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l01243"/>01243 &#32;&#32;&#32;&#32;<link linkend="_class_int_tag_1a456098bb5fd8acef2f27441c262a8887">intTag</link>=parameter;
<anchor xml:id="__tags_8cpp_source_1l01244"/>01244 }
<anchor xml:id="__tags_8cpp_source_1l01245"/>01245 
<anchor xml:id="__tags_8cpp_source_1l01246"/><link linkend="_class_int_tag_1ab14e9b7580f1b62cffe44dda09fc7f9c">01246</link> <link linkend="_class_int_tag_1a52c34a238f8e95627413beabe849c380">IntTag::IntTag</link>(<emphasis role="keywordtype">int</emphasis>&#32;nb)&#32;:<link linkend="_class_int_tag">IntTag</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l01247"/>01247 &#32;&#32;&#32;&#32;<link linkend="_class_int_tag_1a0814d81a516e25e0e61eb0216856417c">myInt</link>&#32;=&#32;nb;
<anchor xml:id="__tags_8cpp_source_1l01248"/>01248 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a688d838bee273d203d6b16caaca3ed2b">doExecute</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01249"/>01249 }
<anchor xml:id="__tags_8cpp_source_1l01250"/>01250 
<anchor xml:id="__tags_8cpp_source_1l01251"/><link linkend="__tags_8cpp_1ad39e58dec05b3a0be440334312e1b0a8">01251</link> std::shared_ptr&#32;&lt;&#32;IntTag&gt;&#32;<link linkend="__tags_8cpp_1ad39e58dec05b3a0be440334312e1b0a8">getIntTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l01252"/>01252 {
<anchor xml:id="__tags_8cpp_source_1l01253"/>01253 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::dynamic_pointer_cast&lt;IntTag&gt;(tag);
<anchor xml:id="__tags_8cpp_source_1l01254"/>01254 }
<anchor xml:id="__tags_8cpp_source_1l01255"/>01255 
<anchor xml:id="__tags_8cpp_source_1l01256"/><link linkend="_class_int_tag_1acd1fc79dd10552857136934ba444d4d4">01256</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_int_tag_1acd1fc79dd10552857136934ba444d4d4">IntTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l01257"/>01257 {
<anchor xml:id="__tags_8cpp_source_1l01258"/>01258 &#32;&#32;&#32;&#32;<link linkend="_class_int_tag_1a0814d81a516e25e0e61eb0216856417c">myInt</link>=<link linkend="__tags_8h_1aa5f87364fd0e0374ff582e04db0e6a31">executeInt</link>(<link linkend="_class_int_tag_1a456098bb5fd8acef2f27441c262a8887">intTag</link>);
<anchor xml:id="__tags_8cpp_source_1l01259"/>01259 }
<anchor xml:id="__tags_8cpp_source_1l01260"/>01260 
<anchor xml:id="__tags_8cpp_source_1l01261"/>01261 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l01262"/><link linkend="_class_compare_tag_1a09c27d4b1b4263dc56992733d10aeb24">01262</link> <link linkend="_class_compare_tag_1a09c27d4b1b4263dc56992733d10aeb24">CompareTag&lt;T&gt;::CompareTag</link>()&#32;:<link linkend="_class_bool_tag">BoolTag</link>()
<anchor xml:id="__tags_8cpp_source_1l01263"/>01263 {
<anchor xml:id="__tags_8cpp_source_1l01264"/>01264 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;compareK;
<anchor xml:id="__tags_8cpp_source_1l01265"/>01265 &#32;&#32;&#32;&#32;<link linkend="_class_compare_tag_1a54e47f577da225488a630333f34cf9b3">compType</link>&#32;=&#32;<link linkend="__tags_8h_1afbc5396d9a88c41d6aeb522b9f06f426a59a84258a4cb9025b567ee5139455029">EQUAL</link>;
<anchor xml:id="__tags_8cpp_source_1l01266"/>01266 &#32;&#32;&#32;&#32;<link linkend="_class_bool_tag_1a533e516d764bce21a79a433ccd0ac1e1">myBool</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01267"/>01267 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880aab7c3d07f8bb9d4d3862d231bfdf5918">COMPARETAG</link>;
<anchor xml:id="__tags_8cpp_source_1l01268"/>01268 }
<anchor xml:id="__tags_8cpp_source_1l01269"/>01269 
<anchor xml:id="__tags_8cpp_source_1l01270"/>01270 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l01271"/><link linkend="__tags_8cpp_1a084ac86e8860745ecc3d46c0a0ec9043">01271</link> std::shared_ptr&lt;CompareTag&lt;T&gt;&gt;&#32;<link linkend="__tags_8cpp_1a084ac86e8860745ecc3d46c0a0ec9043">getCompareTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l01272"/>01272 {
<anchor xml:id="__tags_8cpp_source_1l01273"/>01273 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::dynamic_pointer_cast&lt;CompareTag&lt;T&gt;&gt;(tag);
<anchor xml:id="__tags_8cpp_source_1l01274"/>01274 }
<anchor xml:id="__tags_8cpp_source_1l01275"/>01275 
<anchor xml:id="__tags_8cpp_source_1l01276"/>01276 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l01277"/><link linkend="__tags_8cpp_1a792e47ada60bb52ce250927b0efb74c4">01277</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__tags_8cpp_1a792e47ada60bb52ce250927b0efb74c4">CompareGreater</link>(std::vector&lt;T&gt;&#32;list)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01278"/>01278 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!list.empty())&#32;{
<anchor xml:id="__tags_8cpp_source_1l01279"/>01279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba21f40778b7db9343a6ca75ec2c41ccce">T</link>&#32;previous&#32;=list.at(0);
<anchor xml:id="__tags_8cpp_source_1l01280"/>01280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;list.size();&#32;++i)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01281"/>01281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(previous&#32;&gt;list.at(i))&#32;{
<anchor xml:id="__tags_8cpp_source_1l01282"/>01282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01283"/>01283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01284"/>01284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01285"/>01285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01286"/>01286 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01287"/>01287 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01288"/>01288 }
<anchor xml:id="__tags_8cpp_source_1l01289"/>01289 
<anchor xml:id="__tags_8cpp_source_1l01290"/>01290 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l01291"/><link linkend="__tags_8cpp_1a49a0e8b3086ffc59f2451f94c03829d1">01291</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__tags_8cpp_1a49a0e8b3086ffc59f2451f94c03829d1">CompareLesser</link>(std::vector&lt;T&gt;&#32;list)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01292"/>01292 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!list.empty())&#32;{
<anchor xml:id="__tags_8cpp_source_1l01293"/>01293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba21f40778b7db9343a6ca75ec2c41ccce">T</link>&#32;previous&#32;=&#32;list.at(0);
<anchor xml:id="__tags_8cpp_source_1l01294"/>01294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;list.size();&#32;++i)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01295"/>01295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(previous&#32;&lt;&#32;list.at(i))&#32;{
<anchor xml:id="__tags_8cpp_source_1l01296"/>01296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01297"/>01297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01298"/>01298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01299"/>01299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01300"/>01300 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01301"/>01301 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01302"/>01302 }
<anchor xml:id="__tags_8cpp_source_1l01303"/>01303 
<anchor xml:id="__tags_8cpp_source_1l01304"/>01304 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l01305"/><link linkend="__tags_8cpp_1a5fc4414245c3881d1ecb4b99a4fd5372">01305</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__tags_8cpp_1a5fc4414245c3881d1ecb4b99a4fd5372">CompareGreaterEqual</link>(std::vector&lt;T&gt;&#32;list)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01306"/>01306 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!list.empty())&#32;{
<anchor xml:id="__tags_8cpp_source_1l01307"/>01307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba21f40778b7db9343a6ca75ec2c41ccce">T</link>&#32;previous&#32;=list.at(0);
<anchor xml:id="__tags_8cpp_source_1l01308"/>01308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;list.size();&#32;++i)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01309"/>01309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(previous&#32;&gt;=&#32;list.at(i))&#32;{
<anchor xml:id="__tags_8cpp_source_1l01310"/>01310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01311"/>01311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01312"/>01312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01313"/>01313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01314"/>01314 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01315"/>01315 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01316"/>01316 }
<anchor xml:id="__tags_8cpp_source_1l01317"/>01317 
<anchor xml:id="__tags_8cpp_source_1l01318"/>01318 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l01319"/><link linkend="__tags_8cpp_1a9237a95f66c330e02ca6c88a5feaf1a5">01319</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__tags_8cpp_1a9237a95f66c330e02ca6c88a5feaf1a5">CompareLesserEqual</link>(std::vector&lt;T&gt;&#32;list)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01320"/>01320 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!list.empty())&#32;{
<anchor xml:id="__tags_8cpp_source_1l01321"/>01321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba21f40778b7db9343a6ca75ec2c41ccce">T</link>&#32;previous&#32;=&#32;list.at(0);
<anchor xml:id="__tags_8cpp_source_1l01322"/>01322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;list.size();&#32;++i)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01323"/>01323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(previous&#32;&lt;=&#32;list.at(i))&#32;{
<anchor xml:id="__tags_8cpp_source_1l01324"/>01324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01325"/>01325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01326"/>01326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01327"/>01327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01328"/>01328 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01329"/>01329 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01330"/>01330 }
<anchor xml:id="__tags_8cpp_source_1l01331"/>01331 
<anchor xml:id="__tags_8cpp_source_1l01332"/>01332 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l01333"/><link linkend="__tags_8cpp_1a1a411d1722b51c457e83ada36c19db4c">01333</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__tags_8cpp_1a1a411d1722b51c457e83ada36c19db4c">CompareEqual</link>(std::vector&lt;T&gt;&#32;list)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01334"/>01334 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!list.empty())&#32;{
<anchor xml:id="__tags_8cpp_source_1l01335"/>01335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba21f40778b7db9343a6ca75ec2c41ccce">T</link>&#32;previous&#32;=&#32;list.at(0);
<anchor xml:id="__tags_8cpp_source_1l01336"/>01336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;list.size();&#32;++i)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01337"/>01337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(previous&#32;!=&#32;list.at(i))&#32;{
<anchor xml:id="__tags_8cpp_source_1l01338"/>01338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01339"/>01339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01340"/>01340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01341"/>01341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01342"/>01342 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01343"/>01343 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01344"/>01344 }
<anchor xml:id="__tags_8cpp_source_1l01345"/>01345 
<anchor xml:id="__tags_8cpp_source_1l01346"/>01346 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l01347"/><link linkend="__tags_8cpp_1a6746bcba912a8cf5e050126c1c63d4a8">01347</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__tags_8cpp_1a6746bcba912a8cf5e050126c1c63d4a8">CompareNotEqual</link>(std::vector&lt;T&gt;&#32;list)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01348"/>01348 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!list.empty())&#32;{
<anchor xml:id="__tags_8cpp_source_1l01349"/>01349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba21f40778b7db9343a6ca75ec2c41ccce">T</link>&#32;previous&#32;=&#32;list.at(0);
<anchor xml:id="__tags_8cpp_source_1l01350"/>01350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;list.size();&#32;++i)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01351"/>01351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(previous&#32;==&#32;list.at(i))&#32;{
<anchor xml:id="__tags_8cpp_source_1l01352"/>01352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01353"/>01353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01354"/>01354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01355"/>01355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01356"/>01356 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01357"/>01357 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01358"/>01358 }
<anchor xml:id="__tags_8cpp_source_1l01359"/>01359 
<anchor xml:id="__tags_8cpp_source_1l01360"/>01360 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l01361"/><link linkend="_class_compare_tag_1a574c5229cbbc446a28fa2ef1cea813c3">01361</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_compare_tag_1a574c5229cbbc446a28fa2ef1cea813c3">CompareTag&lt;T&gt;::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l01362"/>01362 {
<anchor xml:id="__tags_8cpp_source_1l01363"/>01363 &#32;&#32;&#32;&#32;<link linkend="_class_list_tag">ListTag&lt;T&gt;</link>&#32;listtag(listTags);
<anchor xml:id="__tags_8cpp_source_1l01364"/>01364 &#32;&#32;&#32;&#32;listtag.<link linkend="_class_list_tag_1a1aed24f27987c6c8e8d32aeb3cb4e116">execute</link>();
<anchor xml:id="__tags_8cpp_source_1l01365"/>01365 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;listValues&#32;=&#32;listtag.<link linkend="_class_list_tag_1accb8e83f38d7b837caf53d6bfc01da86">myList</link>;
<anchor xml:id="__tags_8cpp_source_1l01366"/>01366 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(compType)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01367"/>01367 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1afbc5396d9a88c41d6aeb522b9f06f426a59a84258a4cb9025b567ee5139455029">EQUAL</link>:
<anchor xml:id="__tags_8cpp_source_1l01368"/>01368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myBool&#32;=&#32;<link linkend="__tags_8cpp_1a1a411d1722b51c457e83ada36c19db4c">CompareEqual</link>(listValues);
<anchor xml:id="__tags_8cpp_source_1l01369"/>01369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01370"/>01370 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1afbc5396d9a88c41d6aeb522b9f06f426a9be4c1f75b13960446f5f5902c04d7ce">NOTEQUAL</link>:
<anchor xml:id="__tags_8cpp_source_1l01371"/>01371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myBool&#32;=&#32;<link linkend="__tags_8cpp_1a6746bcba912a8cf5e050126c1c63d4a8">CompareNotEqual</link>(listValues);
<anchor xml:id="__tags_8cpp_source_1l01372"/>01372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01373"/>01373 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01374"/>01374 }
<anchor xml:id="__tags_8cpp_source_1l01375"/>01375 
<anchor xml:id="__tags_8cpp_source_1l01376"/>01376 
<anchor xml:id="__tags_8cpp_source_1l01377"/>01377 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l01378"/><link linkend="_class_compare_tag_1a86f4370ec7c06612dc614d5ee0a80bbc">01378</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_compare_tag_1a574c5229cbbc446a28fa2ef1cea813c3">CompareTag&lt;int&gt;::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l01379"/>01379 {
<anchor xml:id="__tags_8cpp_source_1l01380"/>01380 &#32;&#32;&#32;&#32;<link linkend="_class_list_tag">ListTag&lt;int&gt;</link>&#32;listtag(listTags);
<anchor xml:id="__tags_8cpp_source_1l01381"/>01381 &#32;&#32;&#32;&#32;listtag.<link linkend="_class_list_tag_1a1aed24f27987c6c8e8d32aeb3cb4e116">execute</link>();
<anchor xml:id="__tags_8cpp_source_1l01382"/>01382 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;listValues&#32;=&#32;listtag.<link linkend="_class_list_tag_1accb8e83f38d7b837caf53d6bfc01da86">myList</link>;
<anchor xml:id="__tags_8cpp_source_1l01383"/>01383 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(compType)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01384"/>01384 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1afbc5396d9a88c41d6aeb522b9f06f426a59a84258a4cb9025b567ee5139455029">EQUAL</link>:
<anchor xml:id="__tags_8cpp_source_1l01385"/>01385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myBool&#32;=&#32;<link linkend="__tags_8cpp_1a1a411d1722b51c457e83ada36c19db4c">CompareEqual</link>(listValues);
<anchor xml:id="__tags_8cpp_source_1l01386"/>01386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01387"/>01387 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1afbc5396d9a88c41d6aeb522b9f06f426a9be4c1f75b13960446f5f5902c04d7ce">NOTEQUAL</link>:
<anchor xml:id="__tags_8cpp_source_1l01388"/>01388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myBool&#32;=&#32;<link linkend="__tags_8cpp_1a6746bcba912a8cf5e050126c1c63d4a8">CompareNotEqual</link>(listValues);
<anchor xml:id="__tags_8cpp_source_1l01389"/>01389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01390"/>01390 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1afbc5396d9a88c41d6aeb522b9f06f426af1c37e6bce98d9d9e53f0b44eff7b397">LESSER</link>:
<anchor xml:id="__tags_8cpp_source_1l01391"/>01391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myBool&#32;=&#32;<link linkend="__tags_8cpp_1a49a0e8b3086ffc59f2451f94c03829d1">CompareLesser</link>(listValues);
<anchor xml:id="__tags_8cpp_source_1l01392"/>01392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01393"/>01393 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1afbc5396d9a88c41d6aeb522b9f06f426a25b5ca2f56d99ba6ffcb5316adac34c1">GREATER</link>:
<anchor xml:id="__tags_8cpp_source_1l01394"/>01394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myBool&#32;=&#32;<link linkend="__tags_8cpp_1a792e47ada60bb52ce250927b0efb74c4">CompareGreater</link>(listValues);
<anchor xml:id="__tags_8cpp_source_1l01395"/>01395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01396"/>01396 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1afbc5396d9a88c41d6aeb522b9f06f426a6b63f1a64e85065a15ea897481e26733">LESSEREQUAL</link>:
<anchor xml:id="__tags_8cpp_source_1l01397"/>01397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myBool&#32;=&#32;<link linkend="__tags_8cpp_1a9237a95f66c330e02ca6c88a5feaf1a5">CompareLesserEqual</link>(listValues);
<anchor xml:id="__tags_8cpp_source_1l01398"/>01398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01399"/>01399 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1afbc5396d9a88c41d6aeb522b9f06f426a306b74e8af588fd242b4177069af1f19">GREATEREQUAL</link>:
<anchor xml:id="__tags_8cpp_source_1l01400"/>01400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myBool&#32;=&#32;<link linkend="__tags_8cpp_1a5fc4414245c3881d1ecb4b99a4fd5372">CompareGreaterEqual</link>(listValues);
<anchor xml:id="__tags_8cpp_source_1l01401"/>01401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01402"/>01402 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01403"/>01403 }
<anchor xml:id="__tags_8cpp_source_1l01404"/>01404 
<anchor xml:id="__tags_8cpp_source_1l01405"/>01405 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l01406"/><link linkend="_class_compare_tag_1a85e20d6d3c66adf2b5835842c36cceb6">01406</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_compare_tag_1a574c5229cbbc446a28fa2ef1cea813c3">CompareTag&lt;float&gt;::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l01407"/>01407 {
<anchor xml:id="__tags_8cpp_source_1l01408"/>01408 &#32;&#32;&#32;&#32;<link linkend="_class_list_tag">ListTag&lt;float&gt;</link>&#32;listtag(listTags);
<anchor xml:id="__tags_8cpp_source_1l01409"/>01409 &#32;&#32;&#32;&#32;listtag.<link linkend="_class_list_tag_1a1aed24f27987c6c8e8d32aeb3cb4e116">execute</link>();
<anchor xml:id="__tags_8cpp_source_1l01410"/>01410 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;listValues&#32;=&#32;listtag.<link linkend="_class_list_tag_1accb8e83f38d7b837caf53d6bfc01da86">myList</link>;
<anchor xml:id="__tags_8cpp_source_1l01411"/>01411 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(compType)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01412"/>01412 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1afbc5396d9a88c41d6aeb522b9f06f426a59a84258a4cb9025b567ee5139455029">EQUAL</link>:
<anchor xml:id="__tags_8cpp_source_1l01413"/>01413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myBool&#32;=&#32;<link linkend="__tags_8cpp_1a1a411d1722b51c457e83ada36c19db4c">CompareEqual</link>(listValues);
<anchor xml:id="__tags_8cpp_source_1l01414"/>01414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01415"/>01415 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1afbc5396d9a88c41d6aeb522b9f06f426a9be4c1f75b13960446f5f5902c04d7ce">NOTEQUAL</link>:
<anchor xml:id="__tags_8cpp_source_1l01416"/>01416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myBool&#32;=&#32;<link linkend="__tags_8cpp_1a6746bcba912a8cf5e050126c1c63d4a8">CompareNotEqual</link>(listValues);
<anchor xml:id="__tags_8cpp_source_1l01417"/>01417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01418"/>01418 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1afbc5396d9a88c41d6aeb522b9f06f426af1c37e6bce98d9d9e53f0b44eff7b397">LESSER</link>:
<anchor xml:id="__tags_8cpp_source_1l01419"/>01419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myBool&#32;=&#32;<link linkend="__tags_8cpp_1a49a0e8b3086ffc59f2451f94c03829d1">CompareLesser</link>(listValues);
<anchor xml:id="__tags_8cpp_source_1l01420"/>01420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01421"/>01421 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1afbc5396d9a88c41d6aeb522b9f06f426a25b5ca2f56d99ba6ffcb5316adac34c1">GREATER</link>:
<anchor xml:id="__tags_8cpp_source_1l01422"/>01422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myBool&#32;=&#32;<link linkend="__tags_8cpp_1a792e47ada60bb52ce250927b0efb74c4">CompareGreater</link>(listValues);
<anchor xml:id="__tags_8cpp_source_1l01423"/>01423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01424"/>01424 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1afbc5396d9a88c41d6aeb522b9f06f426a6b63f1a64e85065a15ea897481e26733">LESSEREQUAL</link>:
<anchor xml:id="__tags_8cpp_source_1l01425"/>01425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myBool&#32;=&#32;<link linkend="__tags_8cpp_1a9237a95f66c330e02ca6c88a5feaf1a5">CompareLesserEqual</link>(listValues);
<anchor xml:id="__tags_8cpp_source_1l01426"/>01426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01427"/>01427 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__tags_8h_1afbc5396d9a88c41d6aeb522b9f06f426a306b74e8af588fd242b4177069af1f19">GREATEREQUAL</link>:
<anchor xml:id="__tags_8cpp_source_1l01428"/>01428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;myBool&#32;=&#32;<link linkend="__tags_8cpp_1a5fc4414245c3881d1ecb4b99a4fd5372">CompareGreaterEqual</link>(listValues);
<anchor xml:id="__tags_8cpp_source_1l01429"/>01429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01430"/>01430 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01431"/>01431 }
<anchor xml:id="__tags_8cpp_source_1l01432"/>01432 
<anchor xml:id="__tags_8cpp_source_1l01433"/>01433 
<anchor xml:id="__tags_8cpp_source_1l01434"/>01434 
<anchor xml:id="__tags_8cpp_source_1l01435"/>01435 
<anchor xml:id="__tags_8cpp_source_1l01436"/>01436 
<anchor xml:id="__tags_8cpp_source_1l01437"/>01437 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l01438"/><link linkend="_class_compare_tag_1adb5c84adc077cafd2ca312e65b1266e3">01438</link> <link linkend="_class_compare_tag_1a09c27d4b1b4263dc56992733d10aeb24">CompareTag&lt;T&gt;::CompareTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::shared_ptr&lt;Tag&gt;&gt;&#32;&amp;nestedTags,<emphasis role="keyword">const</emphasis>&#32;<link linkend="__tags_8h_1afbc5396d9a88c41d6aeb522b9f06f426">CompareType</link>&amp;&#32;cType):<link linkend="_class_compare_tag">CompareTag</link>()
<anchor xml:id="__tags_8cpp_source_1l01439"/>01439 {
<anchor xml:id="__tags_8cpp_source_1l01440"/>01440 &#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_compare_tag_1a4bd1f8441e86eed46ed849b844af3050">listTags</link>.insert(this-&gt;<link linkend="_class_compare_tag_1a4bd1f8441e86eed46ed849b844af3050">listTags</link>.begin(),&#32;nestedTags.begin(),&#32;nestedTags.end());
<anchor xml:id="__tags_8cpp_source_1l01441"/>01441 &#32;&#32;&#32;&#32;this-&gt;<link linkend="_class_compare_tag_1a54e47f577da225488a630333f34cf9b3">compType</link>&#32;=&#32;cType;
<anchor xml:id="__tags_8cpp_source_1l01442"/>01442 }
<anchor xml:id="__tags_8cpp_source_1l01443"/>01443 
<anchor xml:id="__tags_8cpp_source_1l01444"/>01444 
<anchor xml:id="__tags_8cpp_source_1l01445"/>01445 
<anchor xml:id="__tags_8cpp_source_1l01446"/>01446 
<anchor xml:id="__tags_8cpp_source_1l01447"/>01447 
<anchor xml:id="__tags_8cpp_source_1l01448"/>01448 
<anchor xml:id="__tags_8cpp_source_1l01449"/>01449 
<anchor xml:id="__tags_8cpp_source_1l01450"/><link linkend="_class_flow_tag_1a31aaff76d66f8814e75a6e404c52028c">01450</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_flow_tag_1a31aaff76d66f8814e75a6e404c52028c">FlowTag::checkCondition</link>()
<anchor xml:id="__tags_8cpp_source_1l01451"/>01451 {
<anchor xml:id="__tags_8cpp_source_1l01452"/>01452 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>.empty())&#32;{
<anchor xml:id="__tags_8cpp_source_1l01453"/>01453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__tags_8h_1a760d219c228224543b5e154be938a6c2">executeBool</link>(<link linkend="_class_flow_tag_1ac26bb1c7e6e0543a02fc8ddb007548fa">condition</link>);
<anchor xml:id="__tags_8cpp_source_1l01454"/>01454 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01455"/>01455 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01456"/>01456 }
<anchor xml:id="__tags_8cpp_source_1l01457"/>01457 
<anchor xml:id="__tags_8cpp_source_1l01458"/><link linkend="_class_flow_tag_1a18d358b77d9233f31db5344531180e18">01458</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_flow_tag_1a18d358b77d9233f31db5344531180e18">FlowTag::linkTags</link>()
<anchor xml:id="__tags_8cpp_source_1l01459"/>01459 {
<anchor xml:id="__tags_8cpp_source_1l01460"/>01460 &#32;&#32;&#32;&#32;std::vector&lt;FlowTag*&gt;&#32;prevTags;
<anchor xml:id="__tags_8cpp_source_1l01461"/>01461 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;currentTag&#32;:&#32;<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01462"/>01462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isFlowTag(currentTag))&#32;{
<anchor xml:id="__tags_8cpp_source_1l01463"/>01463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::shared_ptr&#32;&lt;&#32;DoLoopTag&gt;&#32;fTag&#32;=&#32;std::dynamic_pointer_cast&lt;DoLoopTag&gt;(currentTag);
<anchor xml:id="__tags_8cpp_source_1l01464"/>01464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fTag)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01465"/>01465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fTag-&gt;parentFlowTag&#32;=&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01466"/>01466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!prevTags.empty())fTag-&gt;previousTag&#32;=&#32;prevTags.at(prevTags.size()&#32;-&#32;1);
<anchor xml:id="__tags_8cpp_source_1l01467"/>01467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;fTag-&gt;previousTag&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01468"/>01468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fTag-&gt;listPreviousFlowTags&#32;=&#32;prevTags;
<anchor xml:id="__tags_8cpp_source_1l01469"/>01469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prevTags.push_back(fTag.get());
<anchor xml:id="__tags_8cpp_source_1l01470"/>01470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01471"/>01471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__tags_8cpp_source_1l01472"/>01472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01473"/>01473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(currentTag)currentTag-&gt;nbParents&#32;=&#32;<link linkend="_class_tag_1a25aa826cd8818bcf0670164d285c3fdd">nbParents</link>&#32;+&#32;1;
<anchor xml:id="__tags_8cpp_source_1l01474"/>01474 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01475"/>01475 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;tag&#32;:&#32;<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01476"/>01476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tag)tag-&gt;nbParents&#32;=&#32;<link linkend="_class_tag_1a25aa826cd8818bcf0670164d285c3fdd">nbParents</link>&#32;+&#32;1;
<anchor xml:id="__tags_8cpp_source_1l01477"/>01477 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01478"/>01478 }
<anchor xml:id="__tags_8cpp_source_1l01479"/>01479 
<anchor xml:id="__tags_8cpp_source_1l01480"/><link linkend="_class_bool_tag_1a59cb7cb189f83466defc5ace699357b9">01480</link> <link linkend="_class_bool_tag_1a59cb7cb189f83466defc5ace699357b9">BoolTag::BoolTag</link>()
<anchor xml:id="__tags_8cpp_source_1l01481"/>01481 {
<anchor xml:id="__tags_8cpp_source_1l01482"/>01482 &#32;&#32;&#32;&#32;<link linkend="_class_bool_tag_1a533e516d764bce21a79a433ccd0ac1e1">myBool</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01483"/>01483 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a8a28726c5abfda0da111d73995ee075a">BOOLTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l01484"/>01484 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;boolK;
<anchor xml:id="__tags_8cpp_source_1l01485"/>01485 }
<anchor xml:id="__tags_8cpp_source_1l01486"/>01486 
<anchor xml:id="__tags_8cpp_source_1l01487"/><link linkend="_class_bool_tag_1a16c918890174b92cca2db5f5c7e99f17">01487</link> <link linkend="_class_bool_tag_1a59cb7cb189f83466defc5ace699357b9">BoolTag::BoolTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;parameter)&#32;:<link linkend="_class_bool_tag">BoolTag</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l01488"/>01488 &#32;&#32;&#32;&#32;<link linkend="_class_bool_tag_1a1f8f23c75e15979c0a5542dfab204234">boolTag</link>=parameter;
<anchor xml:id="__tags_8cpp_source_1l01489"/>01489 }
<anchor xml:id="__tags_8cpp_source_1l01490"/>01490 
<anchor xml:id="__tags_8cpp_source_1l01491"/><link linkend="__tags_8cpp_1ada36a59d6eb45b5f395f63dcebd48b61">01491</link> std::shared_ptr&#32;&lt;&#32;BoolTag&gt;&#32;<link linkend="__tags_8cpp_1ada36a59d6eb45b5f395f63dcebd48b61">getBoolTag</link>(std::shared_ptr&lt;Tag&gt;&#32;tag)
<anchor xml:id="__tags_8cpp_source_1l01492"/>01492 {
<anchor xml:id="__tags_8cpp_source_1l01493"/>01493 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::dynamic_pointer_cast&lt;BoolTag&gt;(tag);
<anchor xml:id="__tags_8cpp_source_1l01494"/>01494 }
<anchor xml:id="__tags_8cpp_source_1l01495"/>01495 
<anchor xml:id="__tags_8cpp_source_1l01496"/>01496 
<anchor xml:id="__tags_8cpp_source_1l01497"/>01497 
<anchor xml:id="__tags_8cpp_source_1l01498"/><link linkend="_class_bool_tag_1a2695d817dcbf4150f25cec21a453633a">01498</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_bool_tag_1a2695d817dcbf4150f25cec21a453633a">BoolTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l01499"/>01499 {
<anchor xml:id="__tags_8cpp_source_1l01500"/>01500 &#32;&#32;&#32;&#32;<link linkend="_class_bool_tag_1a533e516d764bce21a79a433ccd0ac1e1">myBool</link>&#32;=&#32;<link linkend="__tags_8h_1a760d219c228224543b5e154be938a6c2">executeBool</link>(<link linkend="_class_bool_tag_1a1f8f23c75e15979c0a5542dfab204234">boolTag</link>);
<anchor xml:id="__tags_8cpp_source_1l01501"/>01501 }
<anchor xml:id="__tags_8cpp_source_1l01502"/>01502 
<anchor xml:id="__tags_8cpp_source_1l01503"/><link linkend="_class_bool_tag_1ab834422d97f1c364878e8561d39aecfe">01503</link> <link linkend="_class_bool_tag_1a59cb7cb189f83466defc5ace699357b9">BoolTag::BoolTag</link>(<emphasis role="keywordtype">bool</emphasis>&#32;v)&#32;:<link linkend="_class_bool_tag">BoolTag</link>()
<anchor xml:id="__tags_8cpp_source_1l01504"/>01504 {
<anchor xml:id="__tags_8cpp_source_1l01505"/>01505 &#32;&#32;&#32;&#32;<link linkend="_class_bool_tag_1a533e516d764bce21a79a433ccd0ac1e1">myBool</link>&#32;=&#32;v;
<anchor xml:id="__tags_8cpp_source_1l01506"/>01506 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a688d838bee273d203d6b16caaca3ed2b">doExecute</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01507"/>01507 }
<anchor xml:id="__tags_8cpp_source_1l01508"/>01508 
<anchor xml:id="__tags_8cpp_source_1l01509"/><link linkend="__tags_8cpp_1a05a9bbf205db6d22539e7643dacf4036">01509</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__tags_8cpp_1a05a9bbf205db6d22539e7643dacf4036">sameTagsType</link>(std::vector&lt;std::shared_ptr&lt;Tag&gt;&gt;&#32;tags)
<anchor xml:id="__tags_8cpp_source_1l01510"/>01510 {
<anchor xml:id="__tags_8cpp_source_1l01511"/>01511 &#32;&#32;&#32;&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880">TagType</link>&#32;type;
<anchor xml:id="__tags_8cpp_source_1l01512"/>01512 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;tags.size();++i)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01513"/>01513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;==&#32;0)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01514"/>01514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type&#32;=&#32;tags.at(0)-&gt;myType;
<anchor xml:id="__tags_8cpp_source_1l01515"/>01515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01516"/>01516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01517"/>01517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type&#32;!=&#32;tags.at(i)-&gt;myType)<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01518"/>01518 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01519"/>01519 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01520"/>01520 }
<anchor xml:id="__tags_8cpp_source_1l01521"/>01521 
<anchor xml:id="__tags_8cpp_source_1l01522"/><link linkend="_class_main_tag_1a78d5543dafe277cb3d92a7dc81d4a1a9">01522</link> <link linkend="_class_main_tag_1a78d5543dafe277cb3d92a7dc81d4a1a9">MainTag::MainTag</link>():<link linkend="_class_flow_tag">FlowTag</link>()
<anchor xml:id="__tags_8cpp_source_1l01523"/>01523 {
<anchor xml:id="__tags_8cpp_source_1l01524"/>01524 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880a94eb8f57593204f41750d5c451872b26">MAINTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l01525"/>01525 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;mainK;
<anchor xml:id="__tags_8cpp_source_1l01526"/>01526 }
<anchor xml:id="__tags_8cpp_source_1l01527"/>01527 
<anchor xml:id="__tags_8cpp_source_1l01528"/><link linkend="_class_main_tag_1aabe3e2a50cec5a38a4965eae347b0946">01528</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_main_tag_1aabe3e2a50cec5a38a4965eae347b0946">MainTag::execute</link>()
<anchor xml:id="__tags_8cpp_source_1l01529"/>01529 {
<anchor xml:id="__tags_8cpp_source_1l01530"/>01530 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1ae6c96344984018fc5be3f56f89f2bf20">showTag</link>();
<anchor xml:id="__tags_8cpp_source_1l01531"/>01531 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;currentTag&#32;:&#32;<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01532"/>01532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentTag-&gt;execute();
<anchor xml:id="__tags_8cpp_source_1l01533"/>01533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_flow_tag_1a27aa7ae58c701f6292ca80c42f0ddc42">forcedExit</link>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01534"/>01534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a27aa7ae58c701f6292ca80c42f0ddc42">forcedExit</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01535"/>01535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01536"/>01536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01537"/>01537 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01538"/>01538 }
<anchor xml:id="__tags_8cpp_source_1l01539"/>01539 
<anchor xml:id="__tags_8cpp_source_1l01540"/><link linkend="_class_main_tag_1aca93f098bb94af3ab20b7ab1f67ef527">01540</link> <link linkend="_class_main_tag_1a78d5543dafe277cb3d92a7dc81d4a1a9">MainTag::MainTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::shared_ptr&lt;Tag&gt;&gt;&amp;&#32;tags):<link linkend="_class_main_tag">MainTag</link>()
<anchor xml:id="__tags_8cpp_source_1l01541"/>01541 {
<anchor xml:id="__tags_8cpp_source_1l01542"/>01542 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>.insert(<link linkend="_class_flow_tag_1a0912449920ad966d78eff6f0a46c50bf">nestedTags</link>.begin(),&#32;tags.begin(),&#32;tags.end());
<anchor xml:id="__tags_8cpp_source_1l01543"/>01543 &#32;&#32;&#32;&#32;<link linkend="_class_flow_tag_1a18d358b77d9233f31db5344531180e18">linkTags</link>();
<anchor xml:id="__tags_8cpp_source_1l01544"/>01544 }
<anchor xml:id="__tags_8cpp_source_1l01545"/>01545 
<anchor xml:id="__tags_8cpp_source_1l01546"/>01546 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l01547"/><link linkend="_class_print_tag_1ae2c57cf611dc8c6087bab67b3d8bede4">01547</link> <link linkend="_class_print_tag_1ae2c57cf611dc8c6087bab67b3d8bede4">PrintTag&lt;T&gt;::PrintTag</link>():<link linkend="_class_tag">Tag</link>()
<anchor xml:id="__tags_8cpp_source_1l01548"/>01548 {
<anchor xml:id="__tags_8cpp_source_1l01549"/>01549 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1aa82f368cc2d55922ea75ba85020517c1">myType</link>&#32;=&#32;<link linkend="__tags_8h_1a7c4faef6b7c4a30990ee13030bc51880aa39dd95065e70abf6cb60bd6e5a45af8">PRINTTAG</link>;
<anchor xml:id="__tags_8cpp_source_1l01550"/>01550 &#32;&#32;&#32;&#32;<link linkend="_class_tag_1a2b252c6a602db12fcb53a67ce3e9ca1b">tagText</link>&#32;=&#32;printK;
<anchor xml:id="__tags_8cpp_source_1l01551"/>01551 }
<anchor xml:id="__tags_8cpp_source_1l01552"/>01552 
<anchor xml:id="__tags_8cpp_source_1l01553"/>01553 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__tags_8cpp_source_1l01554"/><link linkend="_class_print_tag_1aa3ef6f70c9aa30878aafc279b3a0505b">01554</link> <link linkend="_class_print_tag_1ae2c57cf611dc8c6087bab67b3d8bede4">PrintTag&lt;T&gt;::PrintTag</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Tag&gt;&amp;&#32;tag)&#32;:<link linkend="_class_print_tag">PrintTag</link>&lt;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba21f40778b7db9343a6ca75ec2c41ccce">T</link>&gt;()
<anchor xml:id="__tags_8cpp_source_1l01555"/>01555 {
<anchor xml:id="__tags_8cpp_source_1l01556"/>01556 &#32;&#32;&#32;&#32;<link linkend="_class_print_tag_1a2cf11b6cc254e17c0d490fc055350b9a">toPrintTag</link>=tag;
<anchor xml:id="__tags_8cpp_source_1l01557"/>01557 }
<anchor xml:id="__tags_8cpp_source_1l01558"/>01558 
<anchor xml:id="__tags_8cpp_source_1l01559"/><link linkend="__tags_8cpp_1ad05fc0cffadc5a4fad1c4bea39546bb8">01559</link> std::string&#32;<link linkend="__tags_8cpp_1ad05fc0cffadc5a4fad1c4bea39546bb8">getDirection</link>(<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aa">Direction</link>&#32;d)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01560"/>01560 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(d)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01561"/>01561 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa2c63acbe79d9f41ba6bb7766e9c37702">N</link>:
<anchor xml:id="__tags_8cpp_source_1l01562"/>01562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;N&quot;</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01563"/>01563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01564"/>01564 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaaf1ce01387d2348f8b858721a7db81670">S</link>:
<anchor xml:id="__tags_8cpp_source_1l01565"/>01565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;S&quot;</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01566"/>01566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01567"/>01567 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaab199e021998d49b1f09338d8b9b18ecb">E</link>:
<anchor xml:id="__tags_8cpp_source_1l01568"/>01568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;E&quot;</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01569"/>01569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01570"/>01570 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaab722ceeb601c72cd78fbd35f3581fdf7">W</link>:
<anchor xml:id="__tags_8cpp_source_1l01571"/>01571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;W&quot;</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01572"/>01572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01573"/>01573 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa4d3f872f5054b256b01ee4f2c8cf51db">NE</link>:
<anchor xml:id="__tags_8cpp_source_1l01574"/>01574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;NE&quot;</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01575"/>01575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01576"/>01576 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa9b2eeb9b33247edbc638099452c6b46f">NW</link>:
<anchor xml:id="__tags_8cpp_source_1l01577"/>01577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;NW&quot;</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01578"/>01578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01579"/>01579 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa61c600c17d14bd4db73433ddbb8491e8">SE</link>:
<anchor xml:id="__tags_8cpp_source_1l01580"/>01580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;SE&quot;</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01581"/>01581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01582"/>01582 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa247b880fc48dc1c74961ba58ae0f68a2">SW</link>:
<anchor xml:id="__tags_8cpp_source_1l01583"/>01583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;SW&quot;</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01584"/>01584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01585"/>01585 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__tags_8cpp_source_1l01586"/>01586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;N&quot;</emphasis>;
<anchor xml:id="__tags_8cpp_source_1l01587"/>01587 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01588"/>01588 }
<anchor xml:id="__tags_8cpp_source_1l01589"/>01589 
<anchor xml:id="__tags_8cpp_source_1l01590"/><link linkend="__tags_8cpp_1a851e1fc086da436b23ab4e5baf444590">01590</link> <link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aa">Direction</link>&#32;<link linkend="__tags_8cpp_1ad05fc0cffadc5a4fad1c4bea39546bb8">getDirection</link>(std::string&#32;d)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01591"/>01591 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(d&#32;==&#32;<emphasis role="stringliteral">&quot;N&quot;</emphasis>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01592"/>01592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa2c63acbe79d9f41ba6bb7766e9c37702">N</link>;
<anchor xml:id="__tags_8cpp_source_1l01593"/>01593 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01594"/>01594 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(d&#32;==&#32;<emphasis role="stringliteral">&quot;S&quot;</emphasis>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01595"/>01595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaaf1ce01387d2348f8b858721a7db81670">S</link>;
<anchor xml:id="__tags_8cpp_source_1l01596"/>01596 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01597"/>01597 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(d&#32;==&#32;<emphasis role="stringliteral">&quot;E&quot;</emphasis>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01598"/>01598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaab199e021998d49b1f09338d8b9b18ecb">E</link>;
<anchor xml:id="__tags_8cpp_source_1l01599"/>01599 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01600"/>01600 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(d&#32;==&#32;<emphasis role="stringliteral">&quot;W&quot;</emphasis>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01601"/>01601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaab722ceeb601c72cd78fbd35f3581fdf7">W</link>;
<anchor xml:id="__tags_8cpp_source_1l01602"/>01602 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01603"/>01603 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(d&#32;==&#32;<emphasis role="stringliteral">&quot;NE&quot;</emphasis>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01604"/>01604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa4d3f872f5054b256b01ee4f2c8cf51db">NE</link>;
<anchor xml:id="__tags_8cpp_source_1l01605"/>01605 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01606"/>01606 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(d&#32;==&#32;<emphasis role="stringliteral">&quot;NW&quot;</emphasis>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01607"/>01607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa9b2eeb9b33247edbc638099452c6b46f">NW</link>;
<anchor xml:id="__tags_8cpp_source_1l01608"/>01608 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01609"/>01609 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(d&#32;==&#32;<emphasis role="stringliteral">&quot;SE&quot;</emphasis>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01610"/>01610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa61c600c17d14bd4db73433ddbb8491e8">SE</link>;
<anchor xml:id="__tags_8cpp_source_1l01611"/>01611 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01612"/>01612 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(d&#32;==&#32;<emphasis role="stringliteral">&quot;SW&quot;</emphasis>)&#32;{
<anchor xml:id="__tags_8cpp_source_1l01613"/>01613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa247b880fc48dc1c74961ba58ae0f68a2">SW</link>;
<anchor xml:id="__tags_8cpp_source_1l01614"/>01614 &#32;&#32;&#32;&#32;}
<anchor xml:id="__tags_8cpp_source_1l01615"/>01615 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa2c63acbe79d9f41ba6bb7766e9c37702">N</link>;
<anchor xml:id="__tags_8cpp_source_1l01616"/>01616 }
<anchor xml:id="__tags_8cpp_source_1l01617"/>01617 
<anchor xml:id="__tags_8cpp_source_1l01618"/>01618 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l01619"/><link linkend="_class_print_tag_1a4cbad6e5926bac15a87371763407f879">01619</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_print_tag_1a37ce3b4d656ce17d1c93bf0533bc7290">PrintTag&lt;int&gt;::execute</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l01620"/>01620 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<link linkend="__tags_8cpp_1af21ab8bf49b3e2e38e00d6cadb1e4871">executeInt</link>(toPrintTag);
<anchor xml:id="__tags_8cpp_source_1l01621"/>01621 }
<anchor xml:id="__tags_8cpp_source_1l01622"/>01622 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l01623"/><link linkend="_class_print_tag_1aa2db39d8ac5d33546877e5919de9a328">01623</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_print_tag_1a37ce3b4d656ce17d1c93bf0533bc7290">PrintTag&lt;float&gt;::execute</link>()&#32;{&#32;&#32;&#32;
<anchor xml:id="__tags_8cpp_source_1l01624"/>01624 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<link linkend="__tags_8cpp_1ac1dada7a37a3c93abfa74f5d178e096d">executeFloat</link>(toPrintTag);
<anchor xml:id="__tags_8cpp_source_1l01625"/>01625 }
<anchor xml:id="__tags_8cpp_source_1l01626"/>01626 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l01627"/><link linkend="_class_print_tag_1add24872f30feaec9a360660b92d353ec">01627</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_print_tag_1a37ce3b4d656ce17d1c93bf0533bc7290">PrintTag&lt;std::string&gt;::execute</link>()&#32;{&#32;
<anchor xml:id="__tags_8cpp_source_1l01628"/>01628 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<link linkend="__tags_8cpp_1a4bab8267d7e817b59ed55ad288131821">executeString</link>(toPrintTag);
<anchor xml:id="__tags_8cpp_source_1l01629"/>01629 }
<anchor xml:id="__tags_8cpp_source_1l01630"/>01630 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l01631"/><link linkend="_class_print_tag_1a7f13604680769a05f1cfc6d6574dc4d4">01631</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_print_tag_1a37ce3b4d656ce17d1c93bf0533bc7290">PrintTag&lt;bool&gt;::execute</link>()&#32;{
<anchor xml:id="__tags_8cpp_source_1l01632"/>01632 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<link linkend="__tags_8cpp_1a760d219c228224543b5e154be938a6c2">executeBool</link>(toPrintTag);
<anchor xml:id="__tags_8cpp_source_1l01633"/>01633 }
<anchor xml:id="__tags_8cpp_source_1l01634"/>01634 
<anchor xml:id="__tags_8cpp_source_1l01635"/>01635 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l01636"/><link linkend="_class_print_tag_1aaa0074d42cc27ed9be51cf6b680ccba8">01636</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_print_tag_1a37ce3b4d656ce17d1c93bf0533bc7290">PrintTag&lt;Coord&gt;::execute</link>()&#32;{&#32;&#32;&#32;
<anchor xml:id="__tags_8cpp_source_1l01637"/>01637 &#32;&#32;&#32;&#32;<link linkend="__tags_8cpp_1acc7a7317843e349ecdffda47724bf380">executeCoord</link>(toPrintTag).<link linkend="_struct_coord_1af039d91918215598e38227e2041dc81e">showCoords</link>();
<anchor xml:id="__tags_8cpp_source_1l01638"/>01638 }
<anchor xml:id="__tags_8cpp_source_1l01639"/>01639 
<anchor xml:id="__tags_8cpp_source_1l01640"/>01640 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l01641"/><link linkend="_class_print_tag_1ad67d8a367f9ad4fdc58cc172f59c3d97">01641</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_print_tag_1a37ce3b4d656ce17d1c93bf0533bc7290">PrintTag&lt;Zone&gt;::execute</link>()&#32;{&#32;&#32;&#32;&#32;
<anchor xml:id="__tags_8cpp_source_1l01642"/>01642 &#32;&#32;&#32;&#32;<link linkend="__tags_8cpp_1af880453da2451d42d582407678414cca">executeZone</link>(toPrintTag).<link linkend="_struct_zone_1a10458471a768c077e3377d00660d91ee">showZone</link>();
<anchor xml:id="__tags_8cpp_source_1l01643"/>01643 }
<anchor xml:id="__tags_8cpp_source_1l01644"/>01644 <emphasis role="keyword">template</emphasis>&#32;&lt;&gt;
<anchor xml:id="__tags_8cpp_source_1l01645"/><link linkend="_class_print_tag_1a3edc98e922d8e2250bdb3970a6cb4d1b">01645</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_print_tag_1a37ce3b4d656ce17d1c93bf0533bc7290">PrintTag&lt;Direction&gt;::execute</link>()&#32;{&#32;&#32;&#32;
<anchor xml:id="__tags_8cpp_source_1l01646"/>01646 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<link linkend="__tags_8cpp_1ad05fc0cffadc5a4fad1c4bea39546bb8">getDirection</link>(<link linkend="__tags_8cpp_1adb0c764ef1f20ef3d860516a5040b43a">executeDirection</link>(toPrintTag));
<anchor xml:id="__tags_8cpp_source_1l01647"/>01647 }
</programlisting></section>
