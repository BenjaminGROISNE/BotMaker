<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__interactions_8cpp_source" xml:lang="en-US">
<title>Interactions.cpp</title>
<indexterm><primary>src/Interactions.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__interactions_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__interactions_8h">Interactions.h</link>&quot;</emphasis>
<anchor xml:id="__interactions_8cpp_source_1l00002"/>00002 
<anchor xml:id="__interactions_8cpp_source_1l00003"/>00003 
<anchor xml:id="__interactions_8cpp_source_1l00004"/>00004 
<anchor xml:id="__interactions_8cpp_source_1l00005"/><link linkend="_class_interactions_1af819b8e0f2ed260bcef0806e84043db7">00005</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interactions_1af819b8e0f2ed260bcef0806e84043db7">Interactions::fillPopup</link>()
<anchor xml:id="__interactions_8cpp_source_1l00006"/>00006 {
<anchor xml:id="__interactions_8cpp_source_1l00007"/>00007 &#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;&#32;discpopup&#32;=&#32;{&#32;};
<anchor xml:id="__interactions_8cpp_source_1l00008"/>00008 &#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;&#32;blockpopup&#32;=&#32;{&#32;};
<anchor xml:id="__interactions_8cpp_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::string&#32;discstr&#32;:&#32;discpopup)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_popup">Popup</link>&#32;P(discstr,&#32;<link linkend="__units_8h_1adc6e5733fc3c22f0a7b2914188c49c90a8f3c9fcc480d57857ea2b6e07d6d0769">state::disconnect</link>);
<anchor xml:id="__interactions_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a52ebd573ecfea5806b30e2225f3b9a3f">listPopup</link>.push_back(P);
<anchor xml:id="__interactions_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::string&#32;blockstr&#32;:&#32;blockpopup)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_popup">Popup</link>&#32;P(blockstr,&#32;<link linkend="__units_8h_1adc6e5733fc3c22f0a7b2914188c49c90a879965b9f596d9c46dc07872284703f1">state::block</link>);
<anchor xml:id="__interactions_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a52ebd573ecfea5806b30e2225f3b9a3f">listPopup</link>.push_back(P);
<anchor xml:id="__interactions_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00017"/>00017 }
<anchor xml:id="__interactions_8cpp_source_1l00018"/>00018 
<anchor xml:id="__interactions_8cpp_source_1l00019"/>00019 
<anchor xml:id="__interactions_8cpp_source_1l00020"/>00020 
<anchor xml:id="__interactions_8cpp_source_1l00021"/><link linkend="_class_interactions_1ae26abbfd309e818022d07c1d47cb0ede">00021</link> <link linkend="_class_interactions_1ae26abbfd309e818022d07c1d47cb0ede">Interactions::Interactions</link>()
<anchor xml:id="__interactions_8cpp_source_1l00022"/>00022 {
<anchor xml:id="__interactions_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>&#32;=&#32;<link linkend="_struct_template">Template</link>(<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>.<link linkend="_struct_template_1a7d3b343c5b1f0dce079476ecc5962985">id</link>,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>);
<anchor xml:id="__interactions_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ac8184067871e90f96c9dec8891125cce">dimX</link>&#32;=&#32;1080;
<anchor xml:id="__interactions_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ab2a75e021a19afe95b43c09b0cb7a0e5">dimY</link>&#32;=&#32;1920;
<anchor xml:id="__interactions_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1af819b8e0f2ed260bcef0806e84043db7">fillPopup</link>();
<anchor xml:id="__interactions_8cpp_source_1l00027"/>00027 }
<anchor xml:id="__interactions_8cpp_source_1l00028"/>00028 
<anchor xml:id="__interactions_8cpp_source_1l00029"/><link linkend="_class_interactions_1a85395e185b74c6e25d0f27459b0de33c">00029</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a85395e185b74c6e25d0f27459b0de33c">Interactions::fcA</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;templ,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1a25637266a0bf2b2c77d5c7e276baabd0">fA</link>(templ,&#32;Z,&#32;delayMilliseconds,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__interactions_8cpp_source_1l00031"/>00031 }
<anchor xml:id="__interactions_8cpp_source_1l00032"/>00032 
<anchor xml:id="__interactions_8cpp_source_1l00033"/><link linkend="_class_interactions_1a25637266a0bf2b2c77d5c7e276baabd0">00033</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a25637266a0bf2b2c77d5c7e276baabd0">Interactions::fA</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;templ,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Mat&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(templ,<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>);
<anchor xml:id="__interactions_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>(Mat.<link linkend="_struct_template_1a1ec70d2de7871cb6400bf0ac1c12e345">type</link>);
<anchor xml:id="__interactions_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a69713584f69a121e4ed91918a64448a0">cvmtfTemplate</link>(Mat,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;Tresult,&#32;Z))found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;Tresult,&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00041"/>00041 }
<anchor xml:id="__interactions_8cpp_source_1l00042"/>00042 
<anchor xml:id="__interactions_8cpp_source_1l00043"/><link linkend="_class_interactions_1aed04f9177d2aba467d71818a5e82c7bc">00043</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1aed04f9177d2aba467d71818a5e82c7bc">Interactions::fcpopupA</link>()
<anchor xml:id="__interactions_8cpp_source_1l00044"/>00044 {
<anchor xml:id="__interactions_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;bmat(<link linkend="_paths_8cpp_1ab4024e5273f45de079b5001a5bb21c88">backg</link>,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>);
<anchor xml:id="__interactions_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_struct_popup">Popup</link>&#32;pop&#32;:&#32;<link linkend="_class_interactions_1a52ebd573ecfea5806b30e2225f3b9a3f">listPopup</link>)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a69713584f69a121e4ed91918a64448a0">cvmtfTemplate</link>(pop,&#32;bmat,&#32;Tresult))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__units_8h_1adc6e5733fc3c22f0a7b2914188c49c90">state</link>&#32;cond&#32;=&#32;pop.action;
<anchor xml:id="__interactions_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(cond)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1adc6e5733fc3c22f0a7b2914188c49c90a879965b9f596d9c46dc07872284703f1">state::block</link>:
<anchor xml:id="__interactions_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1aae6172962092f278714536142e987cde">click</link>(Tresult.<link linkend="_struct_template_1a6164c425299fb5841f10e46788d9dc3e">C</link>);
<anchor xml:id="__interactions_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1abd5b5d8a44970e1333e3611e302f166c">wait</link>(<link linkend="_class_interactions_1a2ba3357ced2764e8901b742c941547c1">DEFAULTDELAY</link>);
<anchor xml:id="__interactions_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00056"/>00056 
<anchor xml:id="__interactions_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1adc6e5733fc3c22f0a7b2914188c49c90a8f3c9fcc480d57857ea2b6e07d6d0769">state::disconnect</link>:
<anchor xml:id="__interactions_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<link linkend="_struct_reboot_exception">RebootException</link>();
<anchor xml:id="__interactions_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00062"/>00062 
<anchor xml:id="__interactions_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00065"/>00065 }
<anchor xml:id="__interactions_8cpp_source_1l00066"/>00066 
<anchor xml:id="__interactions_8cpp_source_1l00067"/><link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">00067</link> <link linkend="_struct_template">Template</link>&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">Interactions::loopPopUp</link>(<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61">typeMat</link>&#32;color)
<anchor xml:id="__interactions_8cpp_source_1l00068"/>00068 {
<anchor xml:id="__interactions_8cpp_source_1l00069"/>00069 
<anchor xml:id="__interactions_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_fadb_8cpp_1aeec40a5f78ae4713eedd84cb5f75746f">screenshot</link>(<link linkend="_class_interactions_1ae5b95018d6b3e8c79174757907dbd685">adbId</link>);
<anchor xml:id="__interactions_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>.<link linkend="_struct_template_1a9a9825d5a96090c84020ed450751d549">mat</link>&#32;=&#32;<link linkend="_fopencv_8cpp_1a5c455ed716b7fa4c675446fc5b8ba4fb">CreateMat</link>(<link linkend="_paths_8cpp_1ab4024e5273f45de079b5001a5bb21c88">backg</link>,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>.<link linkend="_struct_template_1af95fe5a1cdb4e8d32451db2b3ad29a4c">graymat</link>&#32;=&#32;<link linkend="_fopencv_8cpp_1a5c455ed716b7fa4c675446fc5b8ba4fb">CreateMat</link>(<link linkend="_paths_8cpp_1ab4024e5273f45de079b5001a5bb21c88">backg</link>,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>);
<anchor xml:id="__interactions_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>.<link linkend="_struct_template_1a1ec70d2de7871cb6400bf0ac1c12e345">type</link>&#32;=&#32;color;
<anchor xml:id="__interactions_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_class_interactions_1aed04f9177d2aba467d71818a5e82c7bc">fcpopupA</link>());
<anchor xml:id="__interactions_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>;
<anchor xml:id="__interactions_8cpp_source_1l00077"/>00077 }
<anchor xml:id="__interactions_8cpp_source_1l00078"/>00078 
<anchor xml:id="__interactions_8cpp_source_1l00079"/>00079 
<anchor xml:id="__interactions_8cpp_source_1l00080"/><link linkend="_class_interactions_1a25b3a4dba323cbb14057035056bf9d56">00080</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a25b3a4dba323cbb14057035056bf9d56">Interactions::fcOneTemplateMultipleTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;templ,&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aa">Direction</link>&#32;direction,&#32;<emphasis role="keywordtype">int</emphasis>&#32;order,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1a2b8392d9a1a414b61dca6d6320fd2f79">fOneTemplateMultipleTemplateA</link>(templ,&#32;direction,&#32;order,&#32;Z,&#32;delayMilliseconds,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__interactions_8cpp_source_1l00082"/>00082 }
<anchor xml:id="__interactions_8cpp_source_1l00083"/>00083 
<anchor xml:id="__interactions_8cpp_source_1l00084"/><link linkend="_class_interactions_1a2b8392d9a1a414b61dca6d6320fd2f79">00084</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a2b8392d9a1a414b61dca6d6320fd2f79">Interactions::fOneTemplateMultipleTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;templ,&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aa">Direction</link>&#32;direction,&#32;<emphasis role="keywordtype">int</emphasis>&#32;order,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00085"/>00085 
<anchor xml:id="__interactions_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;Tresults;
<anchor xml:id="__interactions_8cpp_source_1l00089"/>00089 
<anchor xml:id="__interactions_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Tresult&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(templ,<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>);
<anchor xml:id="__interactions_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>(Tresult.<link linkend="_struct_template_1a1ec70d2de7871cb6400bf0ac1c12e345">type</link>);
<anchor xml:id="__interactions_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a95c56af5716e2b2d1b4df612796cc229">cvmtfMultipleTemplate</link>(Tresult,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;Tresults,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tresults&#32;=&#32;<link linkend="_class_interactions_1a9947d091de5ba2d09ec925866d231fe1">orderTemplates</link>(Tresults,&#32;direction);
<anchor xml:id="__interactions_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(order&#32;&lt;&#32;0)order&#32;=&#32;0;
<anchor xml:id="__interactions_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(order&#32;&gt;=&#32;Tresults.size())order&#32;=&#32;Tresults.size()&#32;-&#32;1;
<anchor xml:id="__interactions_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tresult&#32;=&#32;Tresults.at(order);
<anchor xml:id="__interactions_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;Tresult,&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00100"/>00100 }
<anchor xml:id="__interactions_8cpp_source_1l00101"/>00101 
<anchor xml:id="__interactions_8cpp_source_1l00102"/>00102 
<anchor xml:id="__interactions_8cpp_source_1l00103"/><link linkend="_class_interactions_1ac561e137b5d8550a5e58d7017aae8cbf">00103</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1ac561e137b5d8550a5e58d7017aae8cbf">Interactions::fCompareOneTemplateMultipleTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;alltempl,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;simTempl,&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aa">Direction</link>&#32;direction,&#32;<emphasis role="keywordtype">int</emphasis>&#32;order,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00104"/>00104 {
<anchor xml:id="__interactions_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00107"/>00107 
<anchor xml:id="__interactions_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;Tresults;
<anchor xml:id="__interactions_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;allMats&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(alltempl,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;simMats&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(simTempl,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>(<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a154cb9c9b19db5ba6c4df73e72c98256">cvmtfMultipleTemplateCompareMultipleTemplate</link>(allMats,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;simMats,&#32;Tresults,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tresults&#32;=&#32;<link linkend="_class_interactions_1a9947d091de5ba2d09ec925866d231fe1">orderTemplates</link>(Tresults,&#32;direction);
<anchor xml:id="__interactions_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(order&#32;&lt;&#32;0)order&#32;=&#32;0;
<anchor xml:id="__interactions_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(order&#32;&gt;=&#32;Tresults.size())order&#32;=&#32;Tresults.size()&#32;-&#32;1;
<anchor xml:id="__interactions_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tresult&#32;=&#32;Tresults.at(order);
<anchor xml:id="__interactions_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;Tresult,&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00121"/>00121 }
<anchor xml:id="__interactions_8cpp_source_1l00122"/>00122 
<anchor xml:id="__interactions_8cpp_source_1l00123"/><link linkend="_class_interactions_1a79cb358170ab8b3f87a252d12cac8528">00123</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a79cb358170ab8b3f87a252d12cac8528">Interactions::fcCompareOneTemplateMultipleTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;alltempl,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;simTempl,&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aa">Direction</link>&#32;direction,&#32;<emphasis role="keywordtype">int</emphasis>&#32;order,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds)
<anchor xml:id="__interactions_8cpp_source_1l00124"/>00124 {
<anchor xml:id="__interactions_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ac561e137b5d8550a5e58d7017aae8cbf">fCompareOneTemplateMultipleTemplateA</link>(alltempl,&#32;simTempl,&#32;direction,&#32;order,&#32;Z,&#32;delayMilliseconds,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__interactions_8cpp_source_1l00126"/>00126 }
<anchor xml:id="__interactions_8cpp_source_1l00127"/>00127 
<anchor xml:id="__interactions_8cpp_source_1l00128"/>00128 
<anchor xml:id="__interactions_8cpp_source_1l00129"/><link linkend="_class_interactions_1a523842705412e68f6461679f201caf07">00129</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a2b8392d9a1a414b61dca6d6320fd2f79">Interactions::fOneTemplateMultipleTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;alltempl,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aa">Direction</link>&amp;&#32;direction,&#32;<emphasis role="keywordtype">int</emphasis>&#32;order,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00130"/>00130 {
<anchor xml:id="__interactions_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00133"/>00133 
<anchor xml:id="__interactions_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;Tresults;
<anchor xml:id="__interactions_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;allMats&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(alltempl,<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>);
<anchor xml:id="__interactions_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>();
<anchor xml:id="__interactions_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a95c56af5716e2b2d1b4df612796cc229">cvmtfMultipleTemplate</link>(allMats,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;Tresults,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tresults&#32;=&#32;<link linkend="_class_interactions_1a9947d091de5ba2d09ec925866d231fe1">orderTemplates</link>(Tresults,&#32;direction);
<anchor xml:id="__interactions_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(order&#32;&lt;&#32;0)order&#32;=&#32;0;
<anchor xml:id="__interactions_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(order&#32;&gt;=&#32;Tresults.size())order&#32;=&#32;Tresults.size()&#32;-&#32;1;
<anchor xml:id="__interactions_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tresult&#32;=&#32;Tresults.at(order);
<anchor xml:id="__interactions_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;Tresult,&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00146"/>00146 }
<anchor xml:id="__interactions_8cpp_source_1l00147"/>00147 
<anchor xml:id="__interactions_8cpp_source_1l00148"/><link linkend="_class_interactions_1a8de1d76318ef0c22ad891b28008a44a3">00148</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a25b3a4dba323cbb14057035056bf9d56">Interactions::fcOneTemplateMultipleTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;alltempl,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aa">Direction</link>&amp;&#32;direction,&#32;<emphasis role="keywordtype">int</emphasis>&#32;order,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds)
<anchor xml:id="__interactions_8cpp_source_1l00149"/>00149 {
<anchor xml:id="__interactions_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1a2b8392d9a1a414b61dca6d6320fd2f79">fOneTemplateMultipleTemplateA</link>(alltempl,&#32;direction,&#32;order,&#32;Z,&#32;delayMilliseconds,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__interactions_8cpp_source_1l00151"/>00151 }
<anchor xml:id="__interactions_8cpp_source_1l00152"/>00152 
<anchor xml:id="__interactions_8cpp_source_1l00153"/><link linkend="_class_interactions_1aece6b96d6a02046f7805e6ac46d6656b">00153</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1aece6b96d6a02046f7805e6ac46d6656b">Interactions::fnbTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;templ,&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;nb,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMillisecond,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00154"/>00154 {
<anchor xml:id="__interactions_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;nb&#32;=&#32;0;
<anchor xml:id="__interactions_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Templ&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(templ,<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>);
<anchor xml:id="__interactions_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>();
<anchor xml:id="__interactions_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a95c56af5716e2b2d1b4df612796cc229">cvmtfMultipleTemplate</link>(Templ,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;Tresult,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nb&#32;=&#32;Tresult.size();
<anchor xml:id="__interactions_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;found;
<anchor xml:id="__interactions_8cpp_source_1l00166"/>00166 }
<anchor xml:id="__interactions_8cpp_source_1l00167"/>00167 
<anchor xml:id="__interactions_8cpp_source_1l00168"/><link linkend="_class_interactions_1ac0c9eb1e6b218bc4a1dc67d0ee50dc39">00168</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1aece6b96d6a02046f7805e6ac46d6656b">Interactions::fnbTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;templ,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00169"/>00169 {
<anchor xml:id="__interactions_8cpp_source_1l00170"/>00170 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Templ&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(templ,<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>);
<anchor xml:id="__interactions_8cpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>();
<anchor xml:id="__interactions_8cpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a95c56af5716e2b2d1b4df612796cc229">cvmtfMultipleTemplate</link>(Templ,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;Tresult,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;<link linkend="_struct_template">Template</link>(),&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Tresult.size();
<anchor xml:id="__interactions_8cpp_source_1l00180"/>00180 }
<anchor xml:id="__interactions_8cpp_source_1l00181"/>00181 
<anchor xml:id="__interactions_8cpp_source_1l00182"/><link linkend="_class_interactions_1a0b5af6e9b6b8bffffd01c1c9c3f60289">00182</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1aece6b96d6a02046f7805e6ac46d6656b">Interactions::fnbTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;allTempl,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00183"/>00183 {
<anchor xml:id="__interactions_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;&#32;Templ&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(allTempl,<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>);
<anchor xml:id="__interactions_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>();
<anchor xml:id="__interactions_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a95c56af5716e2b2d1b4df612796cc229">cvmtfMultipleTemplate</link>(Templ,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;Tresult,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00191"/>00191 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00192"/>00192 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;<link linkend="_struct_template">Template</link>(),&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Tresult.size();
<anchor xml:id="__interactions_8cpp_source_1l00194"/>00194 }
<anchor xml:id="__interactions_8cpp_source_1l00195"/>00195 
<anchor xml:id="__interactions_8cpp_source_1l00196"/><link linkend="_class_interactions_1a0fc0c12ee5950b8d0b47bfc6a9eebe14">00196</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1a0fc0c12ee5950b8d0b47bfc6a9eebe14">Interactions::fnbMultipleCompareTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;allTempl,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;simTempls,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00197"/>00197 {
<anchor xml:id="__interactions_8cpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;&#32;Templ&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(allTempl,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;&#32;simTemplates&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(simTempls,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>(<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a154cb9c9b19db5ba6c4df73e72c98256">cvmtfMultipleTemplateCompareMultipleTemplate</link>(Templ,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;simTemplates,&#32;Tresult,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;<link linkend="_struct_template">Template</link>(),&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Tresult.size();
<anchor xml:id="__interactions_8cpp_source_1l00209"/>00209 }
<anchor xml:id="__interactions_8cpp_source_1l00210"/>00210 
<anchor xml:id="__interactions_8cpp_source_1l00211"/><link linkend="_class_interactions_1a136e4508ae7f2b36eea44465ffa0002d">00211</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1a136e4508ae7f2b36eea44465ffa0002d">Interactions::fnbUniqueCompareTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;allTempl,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;simTempls,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00212"/>00212 {
<anchor xml:id="__interactions_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;&#32;Templ&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(allTempl,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;&#32;simTemplates&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(simTempls,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;&#32;tid;
<anchor xml:id="__interactions_8cpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>(<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a154cb9c9b19db5ba6c4df73e72c98256">cvmtfMultipleTemplateCompareMultipleTemplate</link>(Templ,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;simTemplates,&#32;Tresult,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_struct_template">Template</link>&#32;t&#32;:&#32;Tresult)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tid.push_back(t.id);
<anchor xml:id="__interactions_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;last&#32;=&#32;std::unique(tid.begin(),&#32;tid.end());
<anchor xml:id="__interactions_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tid.erase(last,&#32;tid.end());
<anchor xml:id="__interactions_8cpp_source_1l00227"/>00227 
<anchor xml:id="__interactions_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;<link linkend="_struct_template">Template</link>(),&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;tid.size();
<anchor xml:id="__interactions_8cpp_source_1l00231"/>00231 }
<anchor xml:id="__interactions_8cpp_source_1l00232"/>00232 
<anchor xml:id="__interactions_8cpp_source_1l00233"/><link linkend="_class_interactions_1ac8c4e46023594103ca4184699118b6f6">00233</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1ac8c4e46023594103ca4184699118b6f6">Interactions::fnbCompareTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;templ,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;simTempls,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00234"/>00234 {
<anchor xml:id="__interactions_8cpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Templ&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(templ,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;&#32;simTempl&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(simTempls,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>(<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a154cb9c9b19db5ba6c4df73e72c98256">cvmtfMultipleTemplateCompareMultipleTemplate</link>(Templ,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;simTempl,&#32;Tresult,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;<link linkend="_struct_template">Template</link>(),&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Tresult.size();
<anchor xml:id="__interactions_8cpp_source_1l00246"/>00246 }
<anchor xml:id="__interactions_8cpp_source_1l00247"/>00247 
<anchor xml:id="__interactions_8cpp_source_1l00248"/><link linkend="_class_interactions_1afd8c8bc50bb964d44f8880afefe7a6f9">00248</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1afd8c8bc50bb964d44f8880afefe7a6f9">Interactions::fcCompareA</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;goodTemplate,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;similartemplate,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds)
<anchor xml:id="__interactions_8cpp_source_1l00249"/>00249 {
<anchor xml:id="__interactions_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad24b4992a69c681dc645d213527d2a07">fCompareA</link>(goodTemplate,&#32;similartemplate,&#32;Z,&#32;delayMilliseconds,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__interactions_8cpp_source_1l00251"/>00251 }
<anchor xml:id="__interactions_8cpp_source_1l00252"/>00252 
<anchor xml:id="__interactions_8cpp_source_1l00253"/><link linkend="_class_interactions_1ad24b4992a69c681dc645d213527d2a07">00253</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1ad24b4992a69c681dc645d213527d2a07">Interactions::fCompareA</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;goodTemplate,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;similartemplate,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00254"/>00254 {
<anchor xml:id="__interactions_8cpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;goodmat&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(goodTemplate,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00259"/>00259 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;smat&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(similartemplate,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00260"/>00260 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>(goodmat.<link linkend="_struct_template_1a1ec70d2de7871cb6400bf0ac1c12e345">type</link>);
<anchor xml:id="__interactions_8cpp_source_1l00261"/>00261 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a248b5cdc64398082a700818b8e29ff59">cvmtfCompareTemplate</link>(goodmat,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;smat,&#32;Tresult,&#32;Z))found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;Tresult,&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00263"/>00263 }
<anchor xml:id="__interactions_8cpp_source_1l00264"/>00264 
<anchor xml:id="__interactions_8cpp_source_1l00265"/>00265 
<anchor xml:id="__interactions_8cpp_source_1l00266"/><link linkend="_class_interactions_1aaba8562157b738fac74c4ab64ba6a9f8">00266</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1aaba8562157b738fac74c4ab64ba6a9f8">Interactions::fcCompareMultipleTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;goodTemplate,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;similartemplates,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMillisesconds)
<anchor xml:id="__interactions_8cpp_source_1l00267"/>00267 {
<anchor xml:id="__interactions_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1a1e4898ef6baa65c69e8f4a94e34f91f9">fCompareMultipleTemplateA</link>(goodTemplate,&#32;similartemplates,&#32;Z,&#32;delayMillisesconds,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__interactions_8cpp_source_1l00269"/>00269 }
<anchor xml:id="__interactions_8cpp_source_1l00270"/>00270 
<anchor xml:id="__interactions_8cpp_source_1l00271"/><link linkend="_class_interactions_1a1e4898ef6baa65c69e8f4a94e34f91f9">00271</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a1e4898ef6baa65c69e8f4a94e34f91f9">Interactions::fCompareMultipleTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;goodTemplate,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;similartemplates,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00272"/>00272 {
<anchor xml:id="__interactions_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;goodmat&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(goodTemplate,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;simMats&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(similartemplates,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>(goodmat.<link linkend="_struct_template_1a1ec70d2de7871cb6400bf0ac1c12e345">type</link>);
<anchor xml:id="__interactions_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1ade157d547c93a4a6c0c6395cbcd15e10">cvmtfCompareMultipleTemplate</link>(goodmat,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;simMats,&#32;Tresult))found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;Tresult,&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00281"/>00281 }
<anchor xml:id="__interactions_8cpp_source_1l00282"/>00282 
<anchor xml:id="__interactions_8cpp_source_1l00283"/>00283 
<anchor xml:id="__interactions_8cpp_source_1l00284"/><link linkend="_class_interactions_1a34f2db9d4b23289b4243c14bfd8e67cd">00284</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a34f2db9d4b23289b4243c14bfd8e67cd">Interactions::fMultipleCompareMultipleTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;goodTemplate,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;similartemplates,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00285"/>00285 {
<anchor xml:id="__interactions_8cpp_source_1l00286"/>00286 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00288"/>00288 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00289"/>00289 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;goodmat&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(goodTemplate,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;simMats&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(similartemplates,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>(goodmat.<link linkend="_struct_template_1a1ec70d2de7871cb6400bf0ac1c12e345">type</link>);
<anchor xml:id="__interactions_8cpp_source_1l00292"/>00292 
<anchor xml:id="__interactions_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a154cb9c9b19db5ba6c4df73e72c98256">cvmtfMultipleTemplateCompareMultipleTemplate</link>(goodmat,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;simMats,&#32;Tresult,&#32;Z))found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;goodmat,&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00295"/>00295 }
<anchor xml:id="__interactions_8cpp_source_1l00296"/>00296 
<anchor xml:id="__interactions_8cpp_source_1l00297"/>00297 
<anchor xml:id="__interactions_8cpp_source_1l00298"/><link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">00298</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">Interactions::templateFound</link>(<emphasis role="keywordtype">bool</emphasis>&#32;found,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;templ,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds)
<anchor xml:id="__interactions_8cpp_source_1l00299"/>00299 {
<anchor xml:id="__interactions_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(found)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a884bfcd6394ec8faac5777d6fb69a8d7">rebootCount</link>&#32;=&#32;0;
<anchor xml:id="__interactions_8cpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a9315497a155670565c9c24f1448940d2">resCoords</link>&#32;=&#32;templ.<link linkend="_struct_template_1a6164c425299fb5841f10e46788d9dc3e">C</link>;
<anchor xml:id="__interactions_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;width&#32;=&#32;templ.<link linkend="_struct_template_1ab59f2a046fc791a75b0aba9b2ff9707d">width</link>;
<anchor xml:id="__interactions_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;height&#32;=&#32;templ.<link linkend="_struct_template_1a1d17a59e2a5f2c2772d9fa04066f7b09">height</link>;
<anchor xml:id="__interactions_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;randomXOffset&#32;=&#32;rand()&#32;%&#32;((width&#32;/&#32;2)&#32;+&#32;1);
<anchor xml:id="__interactions_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;randomYOffset&#32;=&#32;rand()&#32;%&#32;((height&#32;/&#32;2)&#32;+&#32;1);
<anchor xml:id="__interactions_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;randomX&#32;=&#32;<link linkend="_class_interactions_1a9315497a155670565c9c24f1448940d2">resCoords</link>.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>&#32;+&#32;randomXOffset&#32;+&#32;1;
<anchor xml:id="__interactions_8cpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;randomY&#32;=&#32;<link linkend="_class_interactions_1a9315497a155670565c9c24f1448940d2">resCoords</link>.<link linkend="_struct_coord_1a214166cca70cef7dda9201689c3e81ab">y</link>&#32;+&#32;randomYOffset&#32;+&#32;1;
<anchor xml:id="__interactions_8cpp_source_1l00309"/>00309 
<anchor xml:id="__interactions_8cpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(willInteract)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1aae6172962092f278714536142e987cde">click</link>(randomX,&#32;randomY);
<anchor xml:id="__interactions_8cpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(delayMilliseconds&#32;==&#32;<link linkend="_class_interactions_1a2ba3357ced2764e8901b742c941547c1">DEFAULTDELAY</link>)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1abd5b5d8a44970e1333e3611e302f166c">wait</link>(<link linkend="_class_interactions_1a4902f2e22aa30bab114000995a508b1d">waitfound</link>);
<anchor xml:id="__interactions_8cpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="_class_interactions_1abd5b5d8a44970e1333e3611e302f166c">wait</link>(delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a884bfcd6394ec8faac5777d6fb69a8d7">rebootCount</link>++;
<anchor xml:id="__interactions_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(delayMilliseconds&#32;==&#32;<link linkend="_class_interactions_1a2ba3357ced2764e8901b742c941547c1">DEFAULTDELAY</link>)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1abd5b5d8a44970e1333e3611e302f166c">wait</link>(<link linkend="_class_interactions_1a61b758d8ccf55d4d58b1c5c4f70c03e5">waitnotfound</link>);
<anchor xml:id="__interactions_8cpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="_class_interactions_1abd5b5d8a44970e1333e3611e302f166c">wait</link>(delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;found;
<anchor xml:id="__interactions_8cpp_source_1l00326"/>00326 }
<anchor xml:id="__interactions_8cpp_source_1l00327"/>00327 
<anchor xml:id="__interactions_8cpp_source_1l00328"/><link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">00328</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">Interactions::resetCount</link>()&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1a884bfcd6394ec8faac5777d6fb69a8d7">rebootCount</link>&#32;&gt;=&#32;<link linkend="_class_interactions_1a2831f0a46f87c4caed466857a76a3f0e">MAXREBOOT</link>)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Rebooting\n&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<link linkend="_struct_reboot_exception">RebootException</link>();
<anchor xml:id="__interactions_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00333"/>00333 }
<anchor xml:id="__interactions_8cpp_source_1l00334"/>00334 
<anchor xml:id="__interactions_8cpp_source_1l00335"/>00335 
<anchor xml:id="__interactions_8cpp_source_1l00336"/><link linkend="_class_interactions_1a1491cc82f7f888b42c035f0325b9610d">00336</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">Interactions::templateFound</link>(<emphasis role="keywordtype">bool</emphasis>&#32;found,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;templ,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract,&#32;<link linkend="__units_8h_1a8bb1ef53467e4f61410d12822d922498">Action</link>&#32;act,&#32;<link linkend="_struct_coord">Coord</link>&#32;coord,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds)
<anchor xml:id="__interactions_8cpp_source_1l00337"/>00337 {
<anchor xml:id="__interactions_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(found)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a884bfcd6394ec8faac5777d6fb69a8d7">rebootCount</link>&#32;=&#32;0;
<anchor xml:id="__interactions_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a9315497a155670565c9c24f1448940d2">resCoords</link>&#32;=&#32;templ.<link linkend="_struct_template_1a6164c425299fb5841f10e46788d9dc3e">C</link>;
<anchor xml:id="__interactions_8cpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;width&#32;=&#32;templ.<link linkend="_struct_template_1ab59f2a046fc791a75b0aba9b2ff9707d">width</link>;
<anchor xml:id="__interactions_8cpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;height&#32;=&#32;templ.<link linkend="_struct_template_1a1d17a59e2a5f2c2772d9fa04066f7b09">height</link>;
<anchor xml:id="__interactions_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;randomXOffset&#32;=&#32;rand()&#32;%&#32;(width&#32;/&#32;2)&#32;+&#32;1;
<anchor xml:id="__interactions_8cpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;randomYOffset&#32;=&#32;rand()&#32;%&#32;(height&#32;/&#32;2)&#32;+&#32;1;
<anchor xml:id="__interactions_8cpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;randomX&#32;=&#32;<link linkend="_class_interactions_1a9315497a155670565c9c24f1448940d2">resCoords</link>.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>&#32;+&#32;randomXOffset;
<anchor xml:id="__interactions_8cpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;randomY&#32;=&#32;<link linkend="_class_interactions_1a9315497a155670565c9c24f1448940d2">resCoords</link>.<link linkend="_struct_coord_1a214166cca70cef7dda9201689c3e81ab">y</link>&#32;+&#32;randomYOffset;
<anchor xml:id="__interactions_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(willInteract)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(act)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a8bb1ef53467e4f61410d12822d922498a9345e59b3346666444f7cfa61648a609">Action::Click</link>:
<anchor xml:id="__interactions_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1aae6172962092f278714536142e987cde">click</link>(randomX,&#32;randomY);
<anchor xml:id="__interactions_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a8bb1ef53467e4f61410d12822d922498a304b72a071eba27b9f39f32a9b90f51f">Action::Swipe</link>:
<anchor xml:id="__interactions_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a9044fca002a4287ad1a89ce0422a68e5">gSwipe</link>(randomX,&#32;randomY,&#32;coord.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>,&#32;coord.<link linkend="_struct_coord_1a214166cca70cef7dda9201689c3e81ab">y</link>,&#32;500);
<anchor xml:id="__interactions_8cpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(delayMilliseconds&#32;==&#32;<link linkend="_class_interactions_1a2ba3357ced2764e8901b742c941547c1">DEFAULTDELAY</link>)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1abd5b5d8a44970e1333e3611e302f166c">wait</link>(<link linkend="_class_interactions_1a4902f2e22aa30bab114000995a508b1d">waitfound</link>);
<anchor xml:id="__interactions_8cpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="_class_interactions_1abd5b5d8a44970e1333e3611e302f166c">wait</link>(delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00361"/>00361 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a884bfcd6394ec8faac5777d6fb69a8d7">rebootCount</link>++;
<anchor xml:id="__interactions_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(delayMilliseconds&#32;==&#32;<link linkend="_class_interactions_1a2ba3357ced2764e8901b742c941547c1">DEFAULTDELAY</link>)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1abd5b5d8a44970e1333e3611e302f166c">wait</link>(<link linkend="_class_interactions_1a61b758d8ccf55d4d58b1c5c4f70c03e5">waitnotfound</link>);
<anchor xml:id="__interactions_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="_class_interactions_1abd5b5d8a44970e1333e3611e302f166c">wait</link>(delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;found;
<anchor xml:id="__interactions_8cpp_source_1l00370"/>00370 }
<anchor xml:id="__interactions_8cpp_source_1l00371"/>00371 
<anchor xml:id="__interactions_8cpp_source_1l00372"/><link linkend="_class_interactions_1af01fb8407a9f18982f7e75f0433f7ef2">00372</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1af01fb8407a9f18982f7e75f0433f7ef2">Interactions::fcOneTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;allTempl,&#32;std::string&amp;&#32;foundTempl,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds)
<anchor xml:id="__interactions_8cpp_source_1l00373"/>00373 {
<anchor xml:id="__interactions_8cpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad86db2bcd0900e15cfd36374937d7748">fOneTemplateA</link>(allTempl,&#32;foundTempl,&#32;Z,&#32;delayMilliseconds,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__interactions_8cpp_source_1l00375"/>00375 }
<anchor xml:id="__interactions_8cpp_source_1l00376"/><link linkend="_class_interactions_1aae244f39f0b9b6be1f85f90d0d2c1ff2">00376</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1af01fb8407a9f18982f7e75f0433f7ef2">Interactions::fcOneTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;toclick,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;tonotclick,&#32;std::string&amp;&#32;foundTempl,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds)
<anchor xml:id="__interactions_8cpp_source_1l00377"/>00377 {
<anchor xml:id="__interactions_8cpp_source_1l00378"/>00378 
<anchor xml:id="__interactions_8cpp_source_1l00379"/>00379 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1ad86db2bcd0900e15cfd36374937d7748">fOneTemplateA</link>(tonotclick,&#32;foundTempl,&#32;Z,&#32;delayMilliseconds,&#32;<emphasis role="keyword">false</emphasis>))<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1af01fb8407a9f18982f7e75f0433f7ef2">fcOneTemplateA</link>(toclick,&#32;foundTempl,&#32;Z,&#32;delayMilliseconds))<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00382"/>00382 }
<anchor xml:id="__interactions_8cpp_source_1l00383"/><link linkend="_class_interactions_1abe11d91838527eb473bb207986536b70">00383</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1af01fb8407a9f18982f7e75f0433f7ef2">Interactions::fcOneTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;toclick,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;tonotclick,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds)
<anchor xml:id="__interactions_8cpp_source_1l00384"/>00384 {
<anchor xml:id="__interactions_8cpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;foundclick&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;foundnoclick&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00387"/>00387 
<anchor xml:id="__interactions_8cpp_source_1l00388"/>00388 &#32;&#32;&#32;&#32;foundclick&#32;=&#32;<link linkend="_class_interactions_1af01fb8407a9f18982f7e75f0433f7ef2">fcOneTemplateA</link>(toclick,&#32;Z,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00389"/>00389 &#32;&#32;&#32;&#32;foundnoclick&#32;=&#32;<link linkend="_class_interactions_1ad86db2bcd0900e15cfd36374937d7748">fOneTemplateA</link>(tonotclick,&#32;Z,&#32;delayMilliseconds,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__interactions_8cpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;foundclick&#32;||&#32;foundnoclick;
<anchor xml:id="__interactions_8cpp_source_1l00391"/>00391 }
<anchor xml:id="__interactions_8cpp_source_1l00392"/>00392 
<anchor xml:id="__interactions_8cpp_source_1l00393"/>00393 
<anchor xml:id="__interactions_8cpp_source_1l00394"/><link linkend="_class_interactions_1ad86db2bcd0900e15cfd36374937d7748">00394</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1ad86db2bcd0900e15cfd36374937d7748">Interactions::fOneTemplateA</link>(std::vector&lt;std::string&gt;&#32;allTempl,&#32;std::string&amp;&#32;foundTempl,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00395"/>00395 {
<anchor xml:id="__interactions_8cpp_source_1l00396"/>00396 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00397"/>00397 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00398"/>00398 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;allMats&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(allTempl,<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>);
<anchor xml:id="__interactions_8cpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>();
<anchor xml:id="__interactions_8cpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1abe41135f4dce8bf30bbdf6fd28d2abbc">cvmtfOneTemplate</link>(allMats,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;Tresult,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;foundTempl&#32;=&#32;Tresult.<link linkend="_struct_template_1a7d3b343c5b1f0dce079476ecc5962985">id</link>;
<anchor xml:id="__interactions_8cpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;Tresult,&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00406"/>00406 }
<anchor xml:id="__interactions_8cpp_source_1l00407"/>00407 
<anchor xml:id="__interactions_8cpp_source_1l00408"/><link linkend="_class_interactions_1a420519a4236772332018c8acd6f35ab0">00408</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a420519a4236772332018c8acd6f35ab0">Interactions::fMultipleTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&#32;allTempl,&#32;std::vector&lt;std::string&gt;&amp;&#32;foundTemplates,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00409"/>00409 {
<anchor xml:id="__interactions_8cpp_source_1l00410"/>00410 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;allMats&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(allTempl,<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>);
<anchor xml:id="__interactions_8cpp_source_1l00413"/>00413 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;&#32;Tresults;
<anchor xml:id="__interactions_8cpp_source_1l00414"/>00414 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>();
<anchor xml:id="__interactions_8cpp_source_1l00415"/>00415 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a95c56af5716e2b2d1b4df612796cc229">cvmtfMultipleTemplate</link>(allMats,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;Tresults,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_struct_template">Template</link>&#32;t&#32;:&#32;Tresults)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;foundTemplates.push_back(t.id);
<anchor xml:id="__interactions_8cpp_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;last&#32;=&#32;std::unique(foundTemplates.begin(),&#32;foundTemplates.end());
<anchor xml:id="__interactions_8cpp_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;foundTemplates.erase(last,&#32;foundTemplates.end());
<anchor xml:id="__interactions_8cpp_source_1l00422"/>00422 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00423"/>00423 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;<link linkend="_struct_template">Template</link>(),&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00424"/>00424 }
<anchor xml:id="__interactions_8cpp_source_1l00425"/>00425 
<anchor xml:id="__interactions_8cpp_source_1l00426"/><link linkend="_class_interactions_1ad71346be58dfe5a5d5d8ac7f2122a765">00426</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1ad71346be58dfe5a5d5d8ac7f2122a765">Interactions::fMultipleCompareTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&#32;alltempl,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&#32;simTempl,&#32;std::vector&lt;std::string&gt;&amp;&#32;foundTemplates,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00427"/>00427 {
<anchor xml:id="__interactions_8cpp_source_1l00428"/>00428 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00429"/>00429 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00430"/>00430 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;allMats&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(alltempl,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00431"/>00431 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;allSim&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(simTempl,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00432"/>00432 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;&#32;Tresults;
<anchor xml:id="__interactions_8cpp_source_1l00433"/>00433 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>(<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00434"/>00434 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a154cb9c9b19db5ba6c4df73e72c98256">cvmtfMultipleTemplateCompareMultipleTemplate</link>(allMats,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;allSim,&#32;Tresults,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_struct_template">Template</link>&#32;t&#32;:&#32;Tresults)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;foundTemplates.push_back(t.id);
<anchor xml:id="__interactions_8cpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;last&#32;=&#32;std::unique(foundTemplates.begin(),&#32;foundTemplates.end());
<anchor xml:id="__interactions_8cpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;foundTemplates.erase(last,&#32;foundTemplates.end());
<anchor xml:id="__interactions_8cpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00442"/>00442 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;<link linkend="_struct_template">Template</link>(),&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00443"/>00443 }
<anchor xml:id="__interactions_8cpp_source_1l00444"/>00444 
<anchor xml:id="__interactions_8cpp_source_1l00445"/>00445 
<anchor xml:id="__interactions_8cpp_source_1l00446"/><link linkend="_class_interactions_1a3e09f4be284f0321d27588fc336eef21">00446</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a3e09f4be284f0321d27588fc336eef21">Interactions::fCompareOneTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;allTempl,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;simTempl,&#32;std::string&amp;&#32;foundTempl,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00447"/>00447 {
<anchor xml:id="__interactions_8cpp_source_1l00448"/>00448 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00449"/>00449 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00450"/>00450 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;allMats&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(allTempl,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;simMats&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(simTempl,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00452"/>00452 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00453"/>00453 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>(<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00454"/>00454 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a4b7f4310e3f3a9227fa4b12401c3a94b">cvmtfCompareOneTemplate</link>(allMats,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;simMats,&#32;Tresult,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;foundTempl&#32;=&#32;Tresult.<link linkend="_struct_template_1a7d3b343c5b1f0dce079476ecc5962985">id</link>;
<anchor xml:id="__interactions_8cpp_source_1l00457"/>00457 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00458"/>00458 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;Tresult,&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00459"/>00459 }
<anchor xml:id="__interactions_8cpp_source_1l00460"/>00460 
<anchor xml:id="__interactions_8cpp_source_1l00461"/>00461 
<anchor xml:id="__interactions_8cpp_source_1l00462"/>00462 
<anchor xml:id="__interactions_8cpp_source_1l00463"/><link linkend="_class_interactions_1a14660eef97f54664ede7c0cccdd524a9">00463</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1af01fb8407a9f18982f7e75f0433f7ef2">Interactions::fcOneTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;allTempl,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds)
<anchor xml:id="__interactions_8cpp_source_1l00464"/>00464 {
<anchor xml:id="__interactions_8cpp_source_1l00465"/>00465 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad86db2bcd0900e15cfd36374937d7748">fOneTemplateA</link>(allTempl,&#32;Z,&#32;delayMilliseconds,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__interactions_8cpp_source_1l00466"/>00466 }
<anchor xml:id="__interactions_8cpp_source_1l00467"/>00467 
<anchor xml:id="__interactions_8cpp_source_1l00468"/>00468 
<anchor xml:id="__interactions_8cpp_source_1l00469"/><link linkend="_class_interactions_1a75d1c7883ad5786240851e1396c85ccf">00469</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1ad86db2bcd0900e15cfd36374937d7748">Interactions::fOneTemplateA</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;allTempl,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00470"/>00470 {
<anchor xml:id="__interactions_8cpp_source_1l00471"/>00471 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00472"/>00472 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00473"/>00473 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;allMats&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(allTempl,<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>);
<anchor xml:id="__interactions_8cpp_source_1l00474"/>00474 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00475"/>00475 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>();
<anchor xml:id="__interactions_8cpp_source_1l00476"/>00476 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1abe41135f4dce8bf30bbdf6fd28d2abbc">cvmtfOneTemplate</link>(allMats,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;Tresult,&#32;Z))found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00477"/>00477 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;Tresult,&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00478"/>00478 }
<anchor xml:id="__interactions_8cpp_source_1l00479"/>00479 
<anchor xml:id="__interactions_8cpp_source_1l00480"/><link linkend="_class_interactions_1a628a6c47d7580529d4b4e99abc4136fc">00480</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a628a6c47d7580529d4b4e99abc4136fc">Interactions::fOneTemplateEraseA</link>(std::vector&lt;std::string&gt;&amp;&#32;allTempl,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00481"/>00481 {
<anchor xml:id="__interactions_8cpp_source_1l00482"/>00482 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00483"/>00483 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00484"/>00484 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;allMats&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(allTempl,<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>);
<anchor xml:id="__interactions_8cpp_source_1l00485"/>00485 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00486"/>00486 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>();
<anchor xml:id="__interactions_8cpp_source_1l00487"/>00487 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1abe41135f4dce8bf30bbdf6fd28d2abbc">cvmtfOneTemplate</link>(allMats,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;Tresult,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a3796cd8ba317d67243241f2510de6fdf">eraseString</link>(allTempl,&#32;Tresult.<link linkend="_struct_template_1a7d3b343c5b1f0dce079476ecc5962985">id</link>);
<anchor xml:id="__interactions_8cpp_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00490"/>00490 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00491"/>00491 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;Tresult,&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00492"/>00492 }
<anchor xml:id="__interactions_8cpp_source_1l00493"/>00493 
<anchor xml:id="__interactions_8cpp_source_1l00494"/><link linkend="_class_interactions_1a55a9a71c6ad731e023520197774e1c29">00494</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a55a9a71c6ad731e023520197774e1c29">Interactions::fcOneTemplateEraseA</link>(std::vector&lt;std::string&gt;&amp;&#32;allTempl,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds)
<anchor xml:id="__interactions_8cpp_source_1l00495"/>00495 {
<anchor xml:id="__interactions_8cpp_source_1l00496"/>00496 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1a628a6c47d7580529d4b4e99abc4136fc">fOneTemplateEraseA</link>(allTempl,&#32;Z,&#32;delayMilliseconds,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__interactions_8cpp_source_1l00497"/>00497 }
<anchor xml:id="__interactions_8cpp_source_1l00498"/>00498 
<anchor xml:id="__interactions_8cpp_source_1l00499"/>00499 
<anchor xml:id="__interactions_8cpp_source_1l00500"/><link linkend="_class_interactions_1a610a820dde0e642d3bcae7fdf971a75e">00500</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a610a820dde0e642d3bcae7fdf971a75e">Interactions::fOneMultipleTemplateA</link>(std::vector&lt;std::vector&lt;std::string&gt;&gt;&#32;allTempl,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;delayMilliseconds,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00501"/>00501 {
<anchor xml:id="__interactions_8cpp_source_1l00502"/>00502 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00503"/>00503 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00504"/>00504 &#32;&#32;&#32;&#32;std::vector&lt;std::vector&lt;Template&gt;&gt;allMats;
<anchor xml:id="__interactions_8cpp_source_1l00505"/>00505 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00506"/>00506 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::vector&lt;std::string&gt;&#32;oneAll&#32;:&#32;allTempl)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allMats.push_back(<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(oneAll,<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>));
<anchor xml:id="__interactions_8cpp_source_1l00508"/>00508 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00509"/>00509 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>();
<anchor xml:id="__interactions_8cpp_source_1l00510"/>00510 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1ae8b731e67c3c69e0ca3f60a25fa37dc2">cvmtfOneMultipleTemplate</link>(allMats,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;Tresult,&#32;Z))found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00511"/>00511 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;<link linkend="_struct_template">Template</link>(),&#32;willInteract,&#32;delayMilliseconds);
<anchor xml:id="__interactions_8cpp_source_1l00512"/>00512 }
<anchor xml:id="__interactions_8cpp_source_1l00513"/>00513 
<anchor xml:id="__interactions_8cpp_source_1l00514"/>00514 
<anchor xml:id="__interactions_8cpp_source_1l00515"/>00515 
<anchor xml:id="__interactions_8cpp_source_1l00516"/><link linkend="_class_interactions_1ae6f71f7be8c80c4954bdd0f594891e66">00516</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1ae6f71f7be8c80c4954bdd0f594891e66">Interactions::fSwipeA</link>(std::string&#32;templ,&#32;<link linkend="_struct_coord">Coord</link>&#32;Cresult,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00517"/>00517 {
<anchor xml:id="__interactions_8cpp_source_1l00518"/>00518 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00519"/>00519 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00520"/>00520 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Mat&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(templ,<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>);
<anchor xml:id="__interactions_8cpp_source_1l00521"/>00521 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00522"/>00522 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>();
<anchor xml:id="__interactions_8cpp_source_1l00523"/>00523 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a69713584f69a121e4ed91918a64448a0">cvmtfTemplate</link>(Mat,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;Tresult,&#32;Z))found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00524"/>00524 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;Tresult,&#32;willInteract,&#32;<link linkend="__units_8h_1a8bb1ef53467e4f61410d12822d922498a304b72a071eba27b9f39f32a9b90f51f">Swipe</link>,&#32;Cresult);
<anchor xml:id="__interactions_8cpp_source_1l00525"/>00525 }
<anchor xml:id="__interactions_8cpp_source_1l00526"/>00526 
<anchor xml:id="__interactions_8cpp_source_1l00527"/><link linkend="_class_interactions_1aeecb637d08c04de1439096ad646fdb36">00527</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1ae6f71f7be8c80c4954bdd0f594891e66">Interactions::fSwipeA</link>(std::string&#32;templ,&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aa">Direction</link>&#32;dir,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;willInteract)
<anchor xml:id="__interactions_8cpp_source_1l00528"/>00528 {
<anchor xml:id="__interactions_8cpp_source_1l00529"/>00529 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00530"/>00530 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ade7f52c59105f434650b9358b22e5488">resetCount</link>();
<anchor xml:id="__interactions_8cpp_source_1l00531"/>00531 &#32;&#32;&#32;&#32;<link linkend="_struct_coord">Coord</link>&#32;Cend;
<anchor xml:id="__interactions_8cpp_source_1l00532"/>00532 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Mat&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(templ,<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>);
<anchor xml:id="__interactions_8cpp_source_1l00533"/>00533 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00534"/>00534 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a0a0ffd9ad1990de31fd7b2773db32667">loopPopUp</link>();
<anchor xml:id="__interactions_8cpp_source_1l00535"/>00535 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fopencv_8cpp_1a69713584f69a121e4ed91918a64448a0">cvmtfTemplate</link>(Mat,&#32;<link linkend="_class_interactions_1a5c9403e01a3347ff4aef2da96b623617">background</link>,&#32;Tresult,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(dir)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa2c63acbe79d9f41ba6bb7766e9c37702">N</link>:
<anchor xml:id="__interactions_8cpp_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cend.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>&#32;=&#32;<link linkend="_class_interactions_1a9315497a155670565c9c24f1448940d2">resCoords</link>.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>;
<anchor xml:id="__interactions_8cpp_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaaf1ce01387d2348f8b858721a7db81670">S</link>:
<anchor xml:id="__interactions_8cpp_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cend.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>&#32;=&#32;<link linkend="_class_interactions_1ac8184067871e90f96c9dec8891125cce">dimX</link>;
<anchor xml:id="__interactions_8cpp_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaab199e021998d49b1f09338d8b9b18ecb">E</link>:
<anchor xml:id="__interactions_8cpp_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cend.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>&#32;=&#32;0;
<anchor xml:id="__interactions_8cpp_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaab722ceeb601c72cd78fbd35f3581fdf7">W</link>:
<anchor xml:id="__interactions_8cpp_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cend.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>&#32;=&#32;0;
<anchor xml:id="__interactions_8cpp_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa4d3f872f5054b256b01ee4f2c8cf51db">NE</link>:
<anchor xml:id="__interactions_8cpp_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cend.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>&#32;=&#32;<link linkend="_class_interactions_1ac8184067871e90f96c9dec8891125cce">dimX</link>;
<anchor xml:id="__interactions_8cpp_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa9b2eeb9b33247edbc638099452c6b46f">NW</link>:
<anchor xml:id="__interactions_8cpp_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cend.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>&#32;=&#32;0;
<anchor xml:id="__interactions_8cpp_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa61c600c17d14bd4db73433ddbb8491e8">SE</link>:
<anchor xml:id="__interactions_8cpp_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cend.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>&#32;=&#32;<link linkend="_class_interactions_1ac8184067871e90f96c9dec8891125cce">dimX</link>;
<anchor xml:id="__interactions_8cpp_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa247b880fc48dc1c74961ba58ae0f68a2">SW</link>:
<anchor xml:id="__interactions_8cpp_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cend.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>&#32;=&#32;0;
<anchor xml:id="__interactions_8cpp_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__interactions_8cpp_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cend.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>&#32;=&#32;0;
<anchor xml:id="__interactions_8cpp_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00566"/>00566 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00567"/>00567 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ad7daddd9df3cea80e69872b8afd6c8dc">templateFound</link>(found,&#32;Tresult,&#32;willInteract,&#32;<link linkend="__units_8h_1a8bb1ef53467e4f61410d12822d922498a304b72a071eba27b9f39f32a9b90f51f">Swipe</link>,&#32;Cend);
<anchor xml:id="__interactions_8cpp_source_1l00568"/>00568 }
<anchor xml:id="__interactions_8cpp_source_1l00569"/>00569 
<anchor xml:id="__interactions_8cpp_source_1l00570"/><link linkend="_class_interactions_1a8dd8d6d917a4a95c2e2ef2d389380751">00570</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a8dd8d6d917a4a95c2e2ef2d389380751">Interactions::fMultipleDigitsA</link>(<emphasis role="keywordtype">int</emphasis>&#32;nb,&#32;std::vector&lt;std::string&gt;digits,&#32;std::vector&lt;Template&gt;&amp;&#32;Tresult,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00571"/>00571 &#32;&#32;&#32;&#32;std::string&#32;imagetofind;
<anchor xml:id="__interactions_8cpp_source_1l00572"/>00572 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nb&#32;&lt;&#32;digits.size())&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;imagetofind&#32;=&#32;digits.at(nb);
<anchor xml:id="__interactions_8cpp_source_1l00574"/>00574 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00575"/>00575 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Tdigit&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(imagetofind,<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00576"/>00576 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;Tbackg(<link linkend="_paths_8cpp_1ab4024e5273f45de079b5001a5bb21c88">backg</link>,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00577"/>00577 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;Tdigits&#32;=&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">getTemplate</link>(digits,<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a0d368292f17012d66912908725eaedbb">Color</link>);
<anchor xml:id="__interactions_8cpp_source_1l00578"/>00578 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fopencv_8cpp_1a154cb9c9b19db5ba6c4df73e72c98256">cvmtfMultipleTemplateCompareMultipleTemplate</link>(Tdigit,&#32;Tbackg,&#32;Tdigits,&#32;Tresult,&#32;Z);
<anchor xml:id="__interactions_8cpp_source_1l00579"/>00579 }
<anchor xml:id="__interactions_8cpp_source_1l00580"/>00580 
<anchor xml:id="__interactions_8cpp_source_1l00581"/><link linkend="_class_interactions_1a7a8357271583869fba1939d42718a569">00581</link> <link linkend="_struct_number">Number</link>&#32;<link linkend="_class_interactions_1a7a8357271583869fba1939d42718a569">Interactions::fNumberIntegerA</link>(std::vector&lt;std::string&gt;digits,&#32;std::vector&lt;Unit&gt;Units,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00582"/>00582 &#32;&#32;&#32;&#32;<link linkend="_fadb_8cpp_1aeec40a5f78ae4713eedd84cb5f75746f">screenshot</link>(<link linkend="_class_interactions_1ae5b95018d6b3e8c79174757907dbd685">adbId</link>);
<anchor xml:id="__interactions_8cpp_source_1l00583"/>00583 &#32;&#32;&#32;&#32;<link linkend="_struct_number">Number</link>&#32;Ntemp;
<anchor xml:id="__interactions_8cpp_source_1l00584"/>00584 &#32;&#32;&#32;&#32;<link linkend="_struct_digit">Digit</link>&#32;Dtemp;
<anchor xml:id="__interactions_8cpp_source_1l00585"/>00585 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;&#32;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00586"/>00586 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;digits.size();&#32;++i)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1a8dd8d6d917a4a95c2e2ef2d389380751">fMultipleDigitsA</link>(i,&#32;digits,&#32;Tresult,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_struct_template">Template</link>&#32;Templ&#32;:&#32;Tresult)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dtemp.<link linkend="_struct_digit_1ac7c3dfa0d9f6f0e4d9167c1063928a0b">Cnb</link>&#32;=&#32;Templ.C;
<anchor xml:id="__interactions_8cpp_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dtemp.<link linkend="_struct_digit_1aa5b5ce0804b5ea5d0525cf610b37c1f2">dig</link>&#32;=&#32;i;
<anchor xml:id="__interactions_8cpp_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.push_back(Dtemp);
<anchor xml:id="__interactions_8cpp_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00594"/>00594 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00595"/>00595 &#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;allsameImages;
<anchor xml:id="__interactions_8cpp_source_1l00596"/>00596 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::string&#32;image&#32;:&#32;digits)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allsameImages.push_back(image);
<anchor xml:id="__interactions_8cpp_source_1l00598"/>00598 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00599"/>00599 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_struct_unit">Unit</link>&#32;image&#32;:&#32;Units)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allsameImages.push_back(image.nameunit);
<anchor xml:id="__interactions_8cpp_source_1l00601"/>00601 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00602"/>00602 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1af3c13c1ae7d10eb3f41f626549982d41">orderDigits</link>(Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>);
<anchor xml:id="__interactions_8cpp_source_1l00603"/>00603 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;l&#32;=&#32;0;&#32;l&#32;&lt;&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.size();&#32;++l)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00604"/>00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;+=&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.at(l).dig&#32;*&#32;pow(10,&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.size()&#32;-&#32;l&#32;-&#32;1);
<anchor xml:id="__interactions_8cpp_source_1l00605"/>00605 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00606"/>00606 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00607"/>00607 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_struct_unit">Unit</link>&#32;u&#32;:&#32;Units)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(u.Ord)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00609"/>00609 
<anchor xml:id="__interactions_8cpp_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba3164f07c167fef9df34fc550a096b2c2">Orders::noOrd</link>:
<anchor xml:id="__interactions_8cpp_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba660a38111995acbeb2820648e82f0d8c">Orders::K</link>:
<anchor xml:id="__interactions_8cpp_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1a1e4898ef6baa65c69e8f4a94e34f91f9">fCompareMultipleTemplateA</link>(u.nameunit,&#32;allsameImages,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00614"/>00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1a7014a93868df01160171efa7a6eabb0d">K</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;*=&#32;pow(10,&#32;3);
<anchor xml:id="__interactions_8cpp_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Ntemp;
<anchor xml:id="__interactions_8cpp_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba51ca6c63d97347ee58cc7da59ab6994b">Orders::M</link>:
<anchor xml:id="__interactions_8cpp_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1a1e4898ef6baa65c69e8f4a94e34f91f9">fCompareMultipleTemplateA</link>(u.nameunit,&#32;allsameImages,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1a832eedab21672c2fd1080487c8937e6f">M</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;*=&#32;pow(10,&#32;6);
<anchor xml:id="__interactions_8cpp_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Ntemp;
<anchor xml:id="__interactions_8cpp_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba3f2a77ecd272aa6d6b5902faa5e5fc68">Orders::B</link>:
<anchor xml:id="__interactions_8cpp_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1a1e4898ef6baa65c69e8f4a94e34f91f9">fCompareMultipleTemplateA</link>(u.nameunit,&#32;allsameImages,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1a31db3f2b1a31b8902594096bd04cd406">B</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;*=&#32;pow(10,&#32;9);
<anchor xml:id="__interactions_8cpp_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Ntemp;
<anchor xml:id="__interactions_8cpp_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba21f40778b7db9343a6ca75ec2c41ccce">Orders::T</link>:
<anchor xml:id="__interactions_8cpp_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1a1e4898ef6baa65c69e8f4a94e34f91f9">fCompareMultipleTemplateA</link>(u.nameunit,&#32;allsameImages,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1a3bb0e3105b6a29a7afa20ecd368093f4">T</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;*=&#32;pow(10,&#32;12);
<anchor xml:id="__interactions_8cpp_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Ntemp;
<anchor xml:id="__interactions_8cpp_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00645"/>00645 
<anchor xml:id="__interactions_8cpp_source_1l00646"/>00646 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00647"/>00647 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00648"/>00648 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Ntemp;
<anchor xml:id="__interactions_8cpp_source_1l00649"/>00649 }
<anchor xml:id="__interactions_8cpp_source_1l00650"/>00650 
<anchor xml:id="__interactions_8cpp_source_1l00651"/><link linkend="_class_interactions_1ab309ac8a5a9dce72e641a1d83dfddcb4">00651</link> <link linkend="_struct_number">Number</link>&#32;<link linkend="_class_interactions_1a7a8357271583869fba1939d42718a569">Interactions::fNumberIntegerA</link>(std::vector&lt;std::string&gt;digits,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00652"/>00652 &#32;&#32;&#32;&#32;<link linkend="_fadb_8cpp_1aeec40a5f78ae4713eedd84cb5f75746f">screenshot</link>(<link linkend="_class_interactions_1ae5b95018d6b3e8c79174757907dbd685">adbId</link>);
<anchor xml:id="__interactions_8cpp_source_1l00653"/>00653 &#32;&#32;&#32;&#32;<link linkend="_struct_number">Number</link>&#32;Ntemp;
<anchor xml:id="__interactions_8cpp_source_1l00654"/>00654 &#32;&#32;&#32;&#32;<link linkend="_struct_digit">Digit</link>&#32;Dtemp;
<anchor xml:id="__interactions_8cpp_source_1l00655"/>00655 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;&#32;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00656"/>00656 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;digits.size();&#32;++i)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1a8dd8d6d917a4a95c2e2ef2d389380751">fMultipleDigitsA</link>(i,&#32;digits,&#32;Tresult,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_struct_template">Template</link>&#32;Templ&#32;:&#32;Tresult)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dtemp.<link linkend="_struct_digit_1ac7c3dfa0d9f6f0e4d9167c1063928a0b">Cnb</link>&#32;=&#32;Templ.C;
<anchor xml:id="__interactions_8cpp_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dtemp.<link linkend="_struct_digit_1aa5b5ce0804b5ea5d0525cf610b37c1f2">dig</link>&#32;=&#32;i;
<anchor xml:id="__interactions_8cpp_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.push_back(Dtemp);
<anchor xml:id="__interactions_8cpp_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00664"/>00664 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00665"/>00665 &#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;allsameImages;
<anchor xml:id="__interactions_8cpp_source_1l00666"/>00666 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::string&#32;image&#32;:&#32;digits)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00667"/>00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allsameImages.push_back(image);
<anchor xml:id="__interactions_8cpp_source_1l00668"/>00668 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00669"/>00669 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1af3c13c1ae7d10eb3f41f626549982d41">orderDigits</link>(Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>);
<anchor xml:id="__interactions_8cpp_source_1l00670"/>00670 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;l&#32;=&#32;0;&#32;l&#32;&lt;&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.size();&#32;++l)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;+=&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.at(l).dig&#32;*&#32;pow(10,&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.size()&#32;-&#32;l&#32;-&#32;1);
<anchor xml:id="__interactions_8cpp_source_1l00672"/>00672 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00673"/>00673 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00674"/>00674 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Ntemp;
<anchor xml:id="__interactions_8cpp_source_1l00675"/>00675 }
<anchor xml:id="__interactions_8cpp_source_1l00676"/>00676 
<anchor xml:id="__interactions_8cpp_source_1l00677"/><link linkend="_class_interactions_1a4b05b281fd479a1e86264290462f7112">00677</link> <link linkend="_struct_number">Number</link>&#32;<link linkend="_class_interactions_1a4b05b281fd479a1e86264290462f7112">Interactions::fNumberDecimalA</link>(std::vector&lt;std::string&gt;digits,&#32;std::vector&lt;Unit&gt;Units,&#32;std::string&#32;dot,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00678"/>00678 &#32;&#32;&#32;&#32;<link linkend="_fadb_8cpp_1aeec40a5f78ae4713eedd84cb5f75746f">screenshot</link>(<link linkend="_class_interactions_1ae5b95018d6b3e8c79174757907dbd685">adbId</link>);
<anchor xml:id="__interactions_8cpp_source_1l00679"/>00679 &#32;&#32;&#32;&#32;<link linkend="_struct_number">Number</link>&#32;Ntemp;
<anchor xml:id="__interactions_8cpp_source_1l00680"/>00680 &#32;&#32;&#32;&#32;<link linkend="_struct_digit">Digit</link>&#32;Dtemp;
<anchor xml:id="__interactions_8cpp_source_1l00681"/>00681 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;&#32;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00682"/>00682 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;digits.size();&#32;++i)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1a8dd8d6d917a4a95c2e2ef2d389380751">fMultipleDigitsA</link>(i,&#32;digits,&#32;Tresult,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_struct_template">Template</link>&#32;Templ&#32;:&#32;Tresult)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dtemp.<link linkend="_struct_digit_1ac7c3dfa0d9f6f0e4d9167c1063928a0b">Cnb</link>&#32;=&#32;Templ.C;
<anchor xml:id="__interactions_8cpp_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dtemp.<link linkend="_struct_digit_1aa5b5ce0804b5ea5d0525cf610b37c1f2">dig</link>&#32;=&#32;i;
<anchor xml:id="__interactions_8cpp_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.push_back(Dtemp);
<anchor xml:id="__interactions_8cpp_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00690"/>00690 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00691"/>00691 
<anchor xml:id="__interactions_8cpp_source_1l00692"/>00692 &#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;allsameImages;
<anchor xml:id="__interactions_8cpp_source_1l00693"/>00693 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::string&#32;image&#32;:&#32;digits)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allsameImages.push_back(image);
<anchor xml:id="__interactions_8cpp_source_1l00695"/>00695 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00696"/>00696 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_struct_unit">Unit</link>&#32;image&#32;:&#32;Units)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allsameImages.push_back(image.nameunit);
<anchor xml:id="__interactions_8cpp_source_1l00698"/>00698 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00699"/>00699 &#32;&#32;&#32;&#32;<link linkend="_struct_coord">Coord</link>&#32;Cdot;
<anchor xml:id="__interactions_8cpp_source_1l00700"/>00700 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1a1e4898ef6baa65c69e8f4a94e34f91f9">fCompareMultipleTemplateA</link>(dot,&#32;allsameImages,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1ab79250e6a622ea5627a04b0867ff4750">decimal</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00702"/>00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cdot&#32;=&#32;<link linkend="_class_interactions_1a9315497a155670565c9c24f1448940d2">resCoords</link>;
<anchor xml:id="__interactions_8cpp_source_1l00703"/>00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;DECIMAL&#32;NUMBER&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00704"/>00704 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00705"/>00705 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1af3c13c1ae7d10eb3f41f626549982d41">orderDigits</link>(Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>);
<anchor xml:id="__interactions_8cpp_source_1l00706"/>00706 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;l&#32;=&#32;0;&#32;l&#32;&lt;&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.size();&#32;++l)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;+=&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.at(l).dig&#32;*&#32;pow(10,&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.size()&#32;-&#32;l&#32;-&#32;1);
<anchor xml:id="__interactions_8cpp_source_1l00708"/>00708 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00709"/>00709 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00710"/>00710 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Ntemp.<link linkend="_struct_number_1ab79250e6a622ea5627a04b0867ff4750">decimal</link>&#32;==&#32;<emphasis role="keyword">true</emphasis>)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.size();&#32;i++)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Cdot.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>&#32;&lt;&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.at(i).Cnb.x)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1aae8f998c54dc46847ea2f71a897671ea">dotposition</link>&#32;=&#32;i;
<anchor xml:id="__interactions_8cpp_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;/=&#32;pow(10,&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.size()&#32;-&#32;i);
<anchor xml:id="__interactions_8cpp_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Dot&#32;position:&quot;</emphasis>&#32;&lt;&lt;&#32;i&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00717"/>00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00719"/>00719 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00720"/>00720 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00721"/>00721 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_struct_unit">Unit</link>&#32;u&#32;:&#32;Units)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(u.Ord)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00723"/>00723 
<anchor xml:id="__interactions_8cpp_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba3164f07c167fef9df34fc550a096b2c2">Orders::noOrd</link>:
<anchor xml:id="__interactions_8cpp_source_1l00725"/>00725 
<anchor xml:id="__interactions_8cpp_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00727"/>00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba660a38111995acbeb2820648e82f0d8c">Orders::K</link>:
<anchor xml:id="__interactions_8cpp_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1a1e4898ef6baa65c69e8f4a94e34f91f9">fCompareMultipleTemplateA</link>(u.nameunit,&#32;allsameImages,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1a7014a93868df01160171efa7a6eabb0d">K</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;*=&#32;pow(10,&#32;3);
<anchor xml:id="__interactions_8cpp_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Ntemp;
<anchor xml:id="__interactions_8cpp_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba51ca6c63d97347ee58cc7da59ab6994b">Orders::M</link>:
<anchor xml:id="__interactions_8cpp_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1a1e4898ef6baa65c69e8f4a94e34f91f9">fCompareMultipleTemplateA</link>(u.nameunit,&#32;allsameImages,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1a832eedab21672c2fd1080487c8937e6f">M</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;*=&#32;pow(10,&#32;6);
<anchor xml:id="__interactions_8cpp_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Ntemp;
<anchor xml:id="__interactions_8cpp_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00743"/>00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba3f2a77ecd272aa6d6b5902faa5e5fc68">Orders::B</link>:
<anchor xml:id="__interactions_8cpp_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1a1e4898ef6baa65c69e8f4a94e34f91f9">fCompareMultipleTemplateA</link>(u.nameunit,&#32;allsameImages,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1a31db3f2b1a31b8902594096bd04cd406">B</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;*=&#32;pow(10,&#32;9);
<anchor xml:id="__interactions_8cpp_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Ntemp;
<anchor xml:id="__interactions_8cpp_source_1l00749"/>00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a2b350cb683584e1f7db6c78f698c161ba21f40778b7db9343a6ca75ec2c41ccce">Orders::T</link>:
<anchor xml:id="__interactions_8cpp_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1a1e4898ef6baa65c69e8f4a94e34f91f9">fCompareMultipleTemplateA</link>(u.nameunit,&#32;allsameImages,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1a3bb0e3105b6a29a7afa20ecd368093f4">T</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00754"/>00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;*=&#32;pow(10,&#32;12);
<anchor xml:id="__interactions_8cpp_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00756"/>00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Ntemp;
<anchor xml:id="__interactions_8cpp_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00760"/>00760 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00761"/>00761 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00762"/>00762 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Ntemp;
<anchor xml:id="__interactions_8cpp_source_1l00763"/>00763 }
<anchor xml:id="__interactions_8cpp_source_1l00764"/>00764 
<anchor xml:id="__interactions_8cpp_source_1l00765"/><link linkend="_class_interactions_1a834d2963fb9d55be32d7123f94057c1c">00765</link> <link linkend="_struct_number">Number</link>&#32;<link linkend="_class_interactions_1a4b05b281fd479a1e86264290462f7112">Interactions::fNumberDecimalA</link>(std::vector&lt;std::string&gt;digits,&#32;std::string&#32;dot,&#32;<link linkend="_struct_zone">Zone</link>&#32;Z)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00766"/>00766 &#32;&#32;&#32;&#32;<link linkend="_fadb_8cpp_1aeec40a5f78ae4713eedd84cb5f75746f">screenshot</link>(<link linkend="_class_interactions_1ae5b95018d6b3e8c79174757907dbd685">adbId</link>);
<anchor xml:id="__interactions_8cpp_source_1l00767"/>00767 &#32;&#32;&#32;&#32;<link linkend="_struct_number">Number</link>&#32;Ntemp;
<anchor xml:id="__interactions_8cpp_source_1l00768"/>00768 &#32;&#32;&#32;&#32;<link linkend="_struct_digit">Digit</link>&#32;Dtemp;
<anchor xml:id="__interactions_8cpp_source_1l00769"/>00769 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;&#32;Tresult;
<anchor xml:id="__interactions_8cpp_source_1l00770"/>00770 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;digits.size();&#32;++i)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00771"/>00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1a8dd8d6d917a4a95c2e2ef2d389380751">fMultipleDigitsA</link>(i,&#32;digits,&#32;Tresult,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_struct_template">Template</link>&#32;Templ&#32;:&#32;Tresult)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dtemp.<link linkend="_struct_digit_1ac7c3dfa0d9f6f0e4d9167c1063928a0b">Cnb</link>&#32;=&#32;Templ.C;
<anchor xml:id="__interactions_8cpp_source_1l00774"/>00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dtemp.<link linkend="_struct_digit_1aa5b5ce0804b5ea5d0525cf610b37c1f2">dig</link>&#32;=&#32;i;
<anchor xml:id="__interactions_8cpp_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.push_back(Dtemp);
<anchor xml:id="__interactions_8cpp_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00777"/>00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00778"/>00778 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00779"/>00779 
<anchor xml:id="__interactions_8cpp_source_1l00780"/>00780 &#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;allsameImages;
<anchor xml:id="__interactions_8cpp_source_1l00781"/>00781 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::string&#32;image&#32;:&#32;digits)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allsameImages.push_back(image);
<anchor xml:id="__interactions_8cpp_source_1l00783"/>00783 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00784"/>00784 &#32;&#32;&#32;&#32;<link linkend="_struct_coord">Coord</link>&#32;Cdot;
<anchor xml:id="__interactions_8cpp_source_1l00785"/>00785 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1a1e4898ef6baa65c69e8f4a94e34f91f9">fCompareMultipleTemplateA</link>(dot,&#32;allsameImages,&#32;Z))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1ab79250e6a622ea5627a04b0867ff4750">decimal</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Cdot&#32;=&#32;<link linkend="_class_interactions_1a9315497a155670565c9c24f1448940d2">resCoords</link>;
<anchor xml:id="__interactions_8cpp_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;DECIMAL&#32;NUMBER&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00789"/>00789 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00790"/>00790 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1af3c13c1ae7d10eb3f41f626549982d41">orderDigits</link>(Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>);
<anchor xml:id="__interactions_8cpp_source_1l00791"/>00791 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;l&#32;=&#32;0;&#32;l&#32;&lt;&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.size();&#32;++l)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00792"/>00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;+=&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.at(l).dig&#32;*&#32;pow(10,&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.size()&#32;-&#32;l&#32;-&#32;1);
<anchor xml:id="__interactions_8cpp_source_1l00793"/>00793 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00794"/>00794 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00795"/>00795 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Ntemp.<link linkend="_struct_number_1ab79250e6a622ea5627a04b0867ff4750">decimal</link>&#32;==&#32;<emphasis role="keyword">true</emphasis>)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00796"/>00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.size();&#32;i++)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Cdot.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>&#32;&lt;&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.at(i).Cnb.x)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00798"/>00798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1aae8f998c54dc46847ea2f71a897671ea">dotposition</link>&#32;=&#32;i;
<anchor xml:id="__interactions_8cpp_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;/=&#32;pow(10,&#32;Ntemp.<link linkend="_struct_number_1ab6756da04bb95c8d1a3316a247482010">digits</link>.size()&#32;-&#32;i);
<anchor xml:id="__interactions_8cpp_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Dot&#32;position:&quot;</emphasis>&#32;&lt;&lt;&#32;i&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00801"/>00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00803"/>00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00804"/>00804 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00805"/>00805 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;Ntemp.<link linkend="_struct_number_1afa76834b41de1cf8c3fdf5ae5950fe8e">nb</link>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__interactions_8cpp_source_1l00806"/>00806 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Ntemp;
<anchor xml:id="__interactions_8cpp_source_1l00807"/>00807 }
<anchor xml:id="__interactions_8cpp_source_1l00808"/>00808 
<anchor xml:id="__interactions_8cpp_source_1l00809"/>00809 
<anchor xml:id="__interactions_8cpp_source_1l00810"/>00810 
<anchor xml:id="__interactions_8cpp_source_1l00811"/><link linkend="_class_interactions_1a1738bd49c06bd5bffb9ac625d46afc19">00811</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1a1738bd49c06bd5bffb9ac625d46afc19">Interactions::distancePoint</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;fixpt,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;pt)
<anchor xml:id="__interactions_8cpp_source_1l00812"/>00812 {
<anchor xml:id="__interactions_8cpp_source_1l00813"/>00813 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>)sqrt(pow(fixpt.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>&#32;-&#32;pt.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>,&#32;2)&#32;+&#32;pow(fixpt.<link linkend="_struct_coord_1a214166cca70cef7dda9201689c3e81ab">y</link>&#32;-&#32;pt.<link linkend="_struct_coord_1a214166cca70cef7dda9201689c3e81ab">y</link>,&#32;2));
<anchor xml:id="__interactions_8cpp_source_1l00814"/>00814 }
<anchor xml:id="__interactions_8cpp_source_1l00815"/>00815 
<anchor xml:id="__interactions_8cpp_source_1l00816"/><link linkend="_class_interactions_1ae39566ea8b39040355099c95f1e7998d">00816</link> std::vector&lt;Coord&gt;&#32;<link linkend="_class_interactions_1ae39566ea8b39040355099c95f1e7998d">Interactions::orderCoords</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;Coord&gt;&amp;&#32;coordes,&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aa">Direction</link>&#32;dir)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00817"/>00817 &#32;&#32;&#32;&#32;std::vector&lt;Coord&gt;&#32;coords&#32;=&#32;coordes;
<anchor xml:id="__interactions_8cpp_source_1l00818"/>00818 
<anchor xml:id="__interactions_8cpp_source_1l00819"/>00819 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(dir)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00820"/>00820 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa2c63acbe79d9f41ba6bb7766e9c37702">N</link>:
<anchor xml:id="__interactions_8cpp_source_1l00821"/>00821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sort(coords.begin(),&#32;coords.end(),&#32;[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;a.y&#32;&lt;&#32;b.y;
<anchor xml:id="__interactions_8cpp_source_1l00823"/>00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l00824"/>00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00825"/>00825 
<anchor xml:id="__interactions_8cpp_source_1l00826"/>00826 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaaf1ce01387d2348f8b858721a7db81670">S</link>:
<anchor xml:id="__interactions_8cpp_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sort(coords.begin(),&#32;coords.end(),&#32;[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;a.y&#32;&gt;&#32;b.y;
<anchor xml:id="__interactions_8cpp_source_1l00829"/>00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00831"/>00831 
<anchor xml:id="__interactions_8cpp_source_1l00832"/>00832 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaab722ceeb601c72cd78fbd35f3581fdf7">W</link>:
<anchor xml:id="__interactions_8cpp_source_1l00833"/>00833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sort(coords.begin(),&#32;coords.end(),&#32;[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;a.x&#32;&lt;&#32;b.x;
<anchor xml:id="__interactions_8cpp_source_1l00835"/>00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00837"/>00837 
<anchor xml:id="__interactions_8cpp_source_1l00838"/>00838 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaab199e021998d49b1f09338d8b9b18ecb">E</link>:
<anchor xml:id="__interactions_8cpp_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sort(coords.begin(),&#32;coords.end(),&#32;[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00840"/>00840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;a.x&#32;&gt;&#32;b.x;
<anchor xml:id="__interactions_8cpp_source_1l00841"/>00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l00842"/>00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00843"/>00843 
<anchor xml:id="__interactions_8cpp_source_1l00844"/>00844 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa9b2eeb9b33247edbc638099452c6b46f">NW</link>:
<anchor xml:id="__interactions_8cpp_source_1l00845"/>00845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sort(coords.begin(),&#32;coords.end(),&#32;[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00846"/>00846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;a.x&#32;+&#32;a.y&#32;&lt;&#32;b.x&#32;+&#32;b.y;
<anchor xml:id="__interactions_8cpp_source_1l00847"/>00847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00849"/>00849 
<anchor xml:id="__interactions_8cpp_source_1l00850"/>00850 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa4d3f872f5054b256b01ee4f2c8cf51db">NE</link>:
<anchor xml:id="__interactions_8cpp_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sort(coords.begin(),&#32;coords.end(),&#32;[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;a.x&#32;-&#32;a.y&#32;&gt;&#32;b.x&#32;-&#32;b.y;
<anchor xml:id="__interactions_8cpp_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00855"/>00855 
<anchor xml:id="__interactions_8cpp_source_1l00856"/>00856 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa247b880fc48dc1c74961ba58ae0f68a2">SW</link>:
<anchor xml:id="__interactions_8cpp_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sort(coords.begin(),&#32;coords.end(),&#32;[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;a.y&#32;-&#32;a.x&#32;&gt;&#32;b.y&#32;-&#32;b.x;
<anchor xml:id="__interactions_8cpp_source_1l00859"/>00859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00861"/>00861 
<anchor xml:id="__interactions_8cpp_source_1l00862"/>00862 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa61c600c17d14bd4db73433ddbb8491e8">SE</link>:
<anchor xml:id="__interactions_8cpp_source_1l00863"/>00863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sort(coords.begin(),&#32;coords.end(),&#32;[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;a.x&#32;+&#32;a.y&#32;&gt;&#32;b.x&#32;+&#32;b.y;
<anchor xml:id="__interactions_8cpp_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00867"/>00867 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00868"/>00868 
<anchor xml:id="__interactions_8cpp_source_1l00869"/>00869 
<anchor xml:id="__interactions_8cpp_source_1l00870"/>00870 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;coords;
<anchor xml:id="__interactions_8cpp_source_1l00871"/>00871 }
<anchor xml:id="__interactions_8cpp_source_1l00872"/>00872 
<anchor xml:id="__interactions_8cpp_source_1l00873"/><link linkend="_class_interactions_1a9947d091de5ba2d09ec925866d231fe1">00873</link> std::vector&lt;Template&gt;&#32;<link linkend="_class_interactions_1a9947d091de5ba2d09ec925866d231fe1">Interactions::orderTemplates</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;Template&gt;&amp;&#32;allTempl,&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aa">Direction</link>&#32;dir)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00874"/>00874 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;&#32;coords&#32;=&#32;allTempl;
<anchor xml:id="__interactions_8cpp_source_1l00875"/>00875 
<anchor xml:id="__interactions_8cpp_source_1l00876"/>00876 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(dir)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00877"/>00877 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa2c63acbe79d9f41ba6bb7766e9c37702">N</link>:
<anchor xml:id="__interactions_8cpp_source_1l00878"/>00878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sort(coords.begin(),&#32;coords.end(),&#32;[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00879"/>00879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;a.C.y&#32;&lt;&#32;b.C.y;
<anchor xml:id="__interactions_8cpp_source_1l00880"/>00880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l00881"/>00881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00882"/>00882 
<anchor xml:id="__interactions_8cpp_source_1l00883"/>00883 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaaf1ce01387d2348f8b858721a7db81670">S</link>:
<anchor xml:id="__interactions_8cpp_source_1l00884"/>00884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sort(coords.begin(),&#32;coords.end(),&#32;[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00885"/>00885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;a.C.y&#32;&gt;&#32;b.C.y;
<anchor xml:id="__interactions_8cpp_source_1l00886"/>00886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l00887"/>00887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00888"/>00888 
<anchor xml:id="__interactions_8cpp_source_1l00889"/>00889 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaab722ceeb601c72cd78fbd35f3581fdf7">W</link>:
<anchor xml:id="__interactions_8cpp_source_1l00890"/>00890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sort(coords.begin(),&#32;coords.end(),&#32;[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00891"/>00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;a.C.x&#32;&lt;&#32;b.C.x;
<anchor xml:id="__interactions_8cpp_source_1l00892"/>00892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l00893"/>00893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00894"/>00894 
<anchor xml:id="__interactions_8cpp_source_1l00895"/>00895 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaab199e021998d49b1f09338d8b9b18ecb">E</link>:
<anchor xml:id="__interactions_8cpp_source_1l00896"/>00896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sort(coords.begin(),&#32;coords.end(),&#32;[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;a.C.x&#32;&gt;&#32;b.C.x;
<anchor xml:id="__interactions_8cpp_source_1l00898"/>00898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l00899"/>00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00900"/>00900 
<anchor xml:id="__interactions_8cpp_source_1l00901"/>00901 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa9b2eeb9b33247edbc638099452c6b46f">NW</link>:
<anchor xml:id="__interactions_8cpp_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sort(coords.begin(),&#32;coords.end(),&#32;[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;a.C.x&#32;+&#32;a.C.y&#32;&lt;&#32;b.C.x&#32;+&#32;b.C.y;
<anchor xml:id="__interactions_8cpp_source_1l00904"/>00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00906"/>00906 
<anchor xml:id="__interactions_8cpp_source_1l00907"/>00907 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa4d3f872f5054b256b01ee4f2c8cf51db">NE</link>:
<anchor xml:id="__interactions_8cpp_source_1l00908"/>00908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sort(coords.begin(),&#32;coords.end(),&#32;[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00909"/>00909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;a.C.x&#32;-&#32;a.C.y&#32;&gt;&#32;b.C.x&#32;-&#32;b.C.y;
<anchor xml:id="__interactions_8cpp_source_1l00910"/>00910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l00911"/>00911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00912"/>00912 
<anchor xml:id="__interactions_8cpp_source_1l00913"/>00913 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa247b880fc48dc1c74961ba58ae0f68a2">SW</link>:
<anchor xml:id="__interactions_8cpp_source_1l00914"/>00914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sort(coords.begin(),&#32;coords.end(),&#32;[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00915"/>00915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;a.C.y&#32;-&#32;a.C.x&#32;&gt;&#32;b.C.y&#32;-&#32;b.C.x;
<anchor xml:id="__interactions_8cpp_source_1l00916"/>00916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l00917"/>00917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00918"/>00918 
<anchor xml:id="__interactions_8cpp_source_1l00919"/>00919 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__units_8h_1a224b9163917ac32fc95a60d8c1eec3aaa61c600c17d14bd4db73433ddbb8491e8">SE</link>:
<anchor xml:id="__interactions_8cpp_source_1l00920"/>00920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sort(coords.begin(),&#32;coords.end(),&#32;[](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_template">Template</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00921"/>00921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;a.C.x&#32;+&#32;a.C.y&#32;&gt;&#32;b.C.x&#32;+&#32;b.C.y;
<anchor xml:id="__interactions_8cpp_source_1l00922"/>00922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l00923"/>00923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l00924"/>00924 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00925"/>00925 
<anchor xml:id="__interactions_8cpp_source_1l00926"/>00926 
<anchor xml:id="__interactions_8cpp_source_1l00927"/>00927 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;coords;
<anchor xml:id="__interactions_8cpp_source_1l00928"/>00928 }
<anchor xml:id="__interactions_8cpp_source_1l00929"/>00929 
<anchor xml:id="__interactions_8cpp_source_1l00930"/><link linkend="_class_interactions_1af916d0cdf7643f49bed0f81afd914f6f">00930</link> std::vector&lt;Coord&gt;&#32;<link linkend="_class_interactions_1af916d0cdf7643f49bed0f81afd914f6f">Interactions::orderPoint</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;Coord&gt;&amp;&#32;coords,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;Cf)
<anchor xml:id="__interactions_8cpp_source_1l00931"/>00931 {
<anchor xml:id="__interactions_8cpp_source_1l00932"/>00932 &#32;&#32;&#32;&#32;std::vector&lt;Coord&gt;&#32;newcoords&#32;=&#32;coords;
<anchor xml:id="__interactions_8cpp_source_1l00933"/>00933 &#32;&#32;&#32;&#32;std::sort(newcoords.begin(),&#32;newcoords.end(),&#32;[&amp;](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_coord">Coord</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00934"/>00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int&#32;distanceA&#32;=&#32;distancePoint(a,&#32;Cf);
<anchor xml:id="__interactions_8cpp_source_1l00935"/>00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int&#32;distanceB&#32;=&#32;distancePoint(b,&#32;Cf);
<anchor xml:id="__interactions_8cpp_source_1l00936"/>00936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;distanceA&#32;&lt;&#32;distanceB;
<anchor xml:id="__interactions_8cpp_source_1l00937"/>00937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l00938"/>00938 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;newcoords;
<anchor xml:id="__interactions_8cpp_source_1l00939"/>00939 }
<anchor xml:id="__interactions_8cpp_source_1l00940"/>00940 
<anchor xml:id="__interactions_8cpp_source_1l00941"/><link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">00941</link> <link linkend="_struct_template">Template</link>&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">Interactions::getTemplate</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;image,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61">typeMat</link>&#32;type)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00942"/>00942 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1ac822b4a91ce02780f96305562b755a25">allTemplates</link>.find(image)&#32;!=&#32;<link linkend="_class_interactions_1ac822b4a91ce02780f96305562b755a25">allTemplates</link>.end())&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00943"/>00943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;templ&#32;=&#32;<link linkend="_class_interactions_1ac822b4a91ce02780f96305562b755a25">allTemplates</link>.at(image);
<anchor xml:id="__interactions_8cpp_source_1l00944"/>00944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;templ.<link linkend="_struct_template_1a93d3c6f97592ba09d7819fda3c3296d7">setType</link>(type);
<anchor xml:id="__interactions_8cpp_source_1l00945"/>00945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;templ;
<anchor xml:id="__interactions_8cpp_source_1l00946"/>00946 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00947"/>00947 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_template">Template</link>();
<anchor xml:id="__interactions_8cpp_source_1l00948"/>00948 }
<anchor xml:id="__interactions_8cpp_source_1l00949"/>00949 
<anchor xml:id="__interactions_8cpp_source_1l00950"/><link linkend="_class_interactions_1af388711680a68ad02aa6fa6ed9e59cfb">00950</link> std::vector&lt;Template&gt;&#32;<link linkend="_class_interactions_1a5b5af2b125ff152043789cfcf70ffb2b">Interactions::getTemplate</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;images,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61">typeMat</link>&#32;type)
<anchor xml:id="__interactions_8cpp_source_1l00951"/>00951 {
<anchor xml:id="__interactions_8cpp_source_1l00952"/>00952 &#32;&#32;&#32;&#32;std::vector&lt;Template&gt;&#32;result;
<anchor xml:id="__interactions_8cpp_source_1l00953"/>00953 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::string&#32;image&#32;:&#32;images)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00954"/>00954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1ac822b4a91ce02780f96305562b755a25">allTemplates</link>.find(image)&#32;!=&#32;<link linkend="_class_interactions_1ac822b4a91ce02780f96305562b755a25">allTemplates</link>.end())&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00955"/>00955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;templ&#32;=&#32;<link linkend="_class_interactions_1ac822b4a91ce02780f96305562b755a25">allTemplates</link>.at(image);
<anchor xml:id="__interactions_8cpp_source_1l00956"/>00956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;templ.<link linkend="_struct_template_1a93d3c6f97592ba09d7819fda3c3296d7">setType</link>(type);
<anchor xml:id="__interactions_8cpp_source_1l00957"/>00957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result.push_back(templ);
<anchor xml:id="__interactions_8cpp_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00959"/>00959 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00960"/>00960 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="__interactions_8cpp_source_1l00961"/>00961 }
<anchor xml:id="__interactions_8cpp_source_1l00962"/>00962 
<anchor xml:id="__interactions_8cpp_source_1l00963"/>00963 
<anchor xml:id="__interactions_8cpp_source_1l00964"/>00964 
<anchor xml:id="__interactions_8cpp_source_1l00965"/><link linkend="_class_interactions_1a0bd08e482083b90d3b228ec518b12c4d">00965</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1a0bd08e482083b90d3b228ec518b12c4d">Interactions::getDimX</link>()&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00966"/>00966 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ac8184067871e90f96c9dec8891125cce">dimX</link>;
<anchor xml:id="__interactions_8cpp_source_1l00967"/>00967 }
<anchor xml:id="__interactions_8cpp_source_1l00968"/>00968 
<anchor xml:id="__interactions_8cpp_source_1l00969"/><link linkend="_class_interactions_1ac4c5a76c6c1c878d67caef77bd2520f2">00969</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1ac4c5a76c6c1c878d67caef77bd2520f2">Interactions::getDimY</link>()&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00970"/>00970 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1ab2a75e021a19afe95b43c09b0cb7a0e5">dimY</link>;
<anchor xml:id="__interactions_8cpp_source_1l00971"/>00971 }
<anchor xml:id="__interactions_8cpp_source_1l00972"/>00972 
<anchor xml:id="__interactions_8cpp_source_1l00973"/><link linkend="_class_interactions_1ab56a5b3cd91c4ec1063b9d19205358a0">00973</link> <link linkend="__units_8h_1ae8bf5a756cf15252b4e514a258bbbde9">day</link>&#32;<link linkend="_class_interactions_1ab56a5b3cd91c4ec1063b9d19205358a0">Interactions::getUTCDay</link>()&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00974"/>00974 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;now&#32;=&#32;std::chrono::system_clock::now();
<anchor xml:id="__interactions_8cpp_source_1l00975"/>00975 &#32;&#32;&#32;&#32;std::time_t&#32;current_time&#32;=&#32;std::chrono::system_clock::to_time_t(now);
<anchor xml:id="__interactions_8cpp_source_1l00976"/>00976 &#32;&#32;&#32;&#32;tm&#32;utc_time;
<anchor xml:id="__interactions_8cpp_source_1l00977"/>00977 &#32;&#32;&#32;&#32;gmtime_s(&amp;utc_time,&#32;&amp;current_time);
<anchor xml:id="__interactions_8cpp_source_1l00978"/>00978 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__units_8h_1ae8bf5a756cf15252b4e514a258bbbde9">day</link>&#32;=&#32;utc_time.tm_wday;
<anchor xml:id="__interactions_8cpp_source_1l00979"/>00979 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="__units_8h_1ae8bf5a756cf15252b4e514a258bbbde9">day</link>)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l00980"/>00980 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:
<anchor xml:id="__interactions_8cpp_source_1l00981"/>00981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1ae8bf5a756cf15252b4e514a258bbbde9a50f766951431e13654ab869ef85e162c">Sunday</link>;
<anchor xml:id="__interactions_8cpp_source_1l00982"/>00982 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:
<anchor xml:id="__interactions_8cpp_source_1l00983"/>00983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1ae8bf5a756cf15252b4e514a258bbbde9a455141191c205fb8f46e2e9da6b0dd47">Monday</link>;
<anchor xml:id="__interactions_8cpp_source_1l00984"/>00984 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:
<anchor xml:id="__interactions_8cpp_source_1l00985"/>00985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1ae8bf5a756cf15252b4e514a258bbbde9a596327c453efea63ea26096bf041f630">Tuesday</link>;
<anchor xml:id="__interactions_8cpp_source_1l00986"/>00986 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;3:
<anchor xml:id="__interactions_8cpp_source_1l00987"/>00987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1ae8bf5a756cf15252b4e514a258bbbde9a0ae230de6136f0671e2f13a0332a620c">Wednesday</link>;
<anchor xml:id="__interactions_8cpp_source_1l00988"/>00988 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;4:
<anchor xml:id="__interactions_8cpp_source_1l00989"/>00989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1ae8bf5a756cf15252b4e514a258bbbde9a8d9721cec5bcce006e98e794d3ff4912">Thursday</link>;
<anchor xml:id="__interactions_8cpp_source_1l00990"/>00990 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;5:
<anchor xml:id="__interactions_8cpp_source_1l00991"/>00991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1ae8bf5a756cf15252b4e514a258bbbde9aadb8f1f9f2221414dcd35c6e5f8e7d81">Friday</link>;
<anchor xml:id="__interactions_8cpp_source_1l00992"/>00992 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;6:
<anchor xml:id="__interactions_8cpp_source_1l00993"/>00993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1ae8bf5a756cf15252b4e514a258bbbde9a5a996d296d81b9b8bd3b9201afa4c547">Saturday</link>;
<anchor xml:id="__interactions_8cpp_source_1l00994"/>00994 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__interactions_8cpp_source_1l00995"/>00995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__units_8h_1ae8bf5a756cf15252b4e514a258bbbde9a455141191c205fb8f46e2e9da6b0dd47">Monday</link>;
<anchor xml:id="__interactions_8cpp_source_1l00996"/>00996 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l00997"/>00997 }
<anchor xml:id="__interactions_8cpp_source_1l00998"/>00998 
<anchor xml:id="__interactions_8cpp_source_1l00999"/><link linkend="_class_interactions_1a6063dfa44fd2439c23e7b04a0a70c177">00999</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1a6063dfa44fd2439c23e7b04a0a70c177">Interactions::getUTCHour</link>()&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01000"/>01000 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;now&#32;=&#32;std::chrono::system_clock::now();
<anchor xml:id="__interactions_8cpp_source_1l01001"/>01001 &#32;&#32;&#32;&#32;std::time_t&#32;current_time&#32;=&#32;std::chrono::system_clock::to_time_t(now);
<anchor xml:id="__interactions_8cpp_source_1l01002"/>01002 &#32;&#32;&#32;&#32;tm&#32;utc_time;
<anchor xml:id="__interactions_8cpp_source_1l01003"/>01003 &#32;&#32;&#32;&#32;gmtime_s(&amp;utc_time,&#32;&amp;current_time);
<anchor xml:id="__interactions_8cpp_source_1l01004"/>01004 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;utc_time.tm_hour;
<anchor xml:id="__interactions_8cpp_source_1l01005"/>01005 }
<anchor xml:id="__interactions_8cpp_source_1l01006"/>01006 
<anchor xml:id="__interactions_8cpp_source_1l01007"/><link linkend="_class_interactions_1aa07a6de3761c67111c20084509a9ff5e">01007</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interactions_1aa07a6de3761c67111c20084509a9ff5e">Interactions::loadTemplate</link>(std::string&#32;image)
<anchor xml:id="__interactions_8cpp_source_1l01008"/>01008 {
<anchor xml:id="__interactions_8cpp_source_1l01009"/>01009 &#32;&#32;&#32;&#32;<link linkend="_struct_template">Template</link>&#32;newTemplate(image);
<anchor xml:id="__interactions_8cpp_source_1l01010"/>01010 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ac822b4a91ce02780f96305562b755a25">allTemplates</link>.insert(std::pair&lt;std::string,&#32;Template&gt;(image,&#32;newTemplate));
<anchor xml:id="__interactions_8cpp_source_1l01011"/>01011 }
<anchor xml:id="__interactions_8cpp_source_1l01012"/>01012 
<anchor xml:id="__interactions_8cpp_source_1l01013"/><link linkend="_class_interactions_1acf4720976ec410b61c65e13d2979fd1f">01013</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interactions_1acf4720976ec410b61c65e13d2979fd1f">Interactions::loadAllTemplates</link>()&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01014"/>01014 &#32;&#32;&#32;&#32;std::string&#32;path&#32;=&#32;<emphasis role="stringliteral">&quot;.\\assets\\templates&quot;</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l01015"/>01015 &#32;&#32;&#32;&#32;std::filesystem::directory_iterator&#32;dir(path);
<anchor xml:id="__interactions_8cpp_source_1l01016"/>01016 &#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;allFileNames;
<anchor xml:id="__interactions_8cpp_source_1l01017"/>01017 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a5ee06840be01ec86e99072ca262d3791">getFilesPath</link>(allFileNames,&#32;dir);
<anchor xml:id="__interactions_8cpp_source_1l01018"/>01018 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;str&#32;:&#32;allFileNames)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01019"/>01019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1aa07a6de3761c67111c20084509a9ff5e">loadTemplate</link>(str);
<anchor xml:id="__interactions_8cpp_source_1l01020"/>01020 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l01021"/>01021 }
<anchor xml:id="__interactions_8cpp_source_1l01022"/>01022 
<anchor xml:id="__interactions_8cpp_source_1l01023"/><link linkend="_class_interactions_1a5ee06840be01ec86e99072ca262d3791">01023</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interactions_1a5ee06840be01ec86e99072ca262d3791">Interactions::getFilesPath</link>(std::vector&lt;std::string&gt;&amp;&#32;tab,&#32;std::filesystem::directory_iterator&#32;path)
<anchor xml:id="__interactions_8cpp_source_1l01024"/>01024 {
<anchor xml:id="__interactions_8cpp_source_1l01025"/>01025 &#32;&#32;&#32;&#32;std::filesystem::path&#32;currentPath&#32;=&#32;path-&gt;path().parent_path();
<anchor xml:id="__interactions_8cpp_source_1l01026"/>01026 
<anchor xml:id="__interactions_8cpp_source_1l01027"/>01027 &#32;&#32;&#32;&#32;std::vector&lt;std::filesystem::directory_entry&gt;&#32;folders;
<anchor xml:id="__interactions_8cpp_source_1l01028"/>01028 &#32;&#32;&#32;&#32;folders.clear();
<anchor xml:id="__interactions_8cpp_source_1l01029"/>01029 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;entry&#32;:&#32;path)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01030"/>01030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(entry.is_regular_file())&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01031"/>01031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tab.push_back(entry.path().string());
<anchor xml:id="__interactions_8cpp_source_1l01032"/>01032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l01033"/>01033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(entry.is_directory())&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01034"/>01034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;folders.push_back(entry);
<anchor xml:id="__interactions_8cpp_source_1l01035"/>01035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l01036"/>01036 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l01037"/>01037 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;folders.size();&#32;i++)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01038"/>01038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!std::filesystem::is_empty(folders.at(i).path()))&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01039"/>01039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a5ee06840be01ec86e99072ca262d3791">getFilesPath</link>(tab,&#32;std::filesystem::directory_iterator(folders.at(i).path()));
<anchor xml:id="__interactions_8cpp_source_1l01040"/>01040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l01041"/>01041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01042"/>01042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::filesystem::path&#32;currentPath&#32;=&#32;folders.at(i).path();
<anchor xml:id="__interactions_8cpp_source_1l01043"/>01043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l01044"/>01044 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l01045"/>01045 }
<anchor xml:id="__interactions_8cpp_source_1l01046"/>01046 
<anchor xml:id="__interactions_8cpp_source_1l01047"/><link linkend="_class_interactions_1a7f2c26654c8cbde803d2267b98479dc1">01047</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interactions_1a7f2c26654c8cbde803d2267b98479dc1">Interactions::showVector</link>(std::vector&lt;std::string&gt;&#32;vect)
<anchor xml:id="__interactions_8cpp_source_1l01048"/>01048 {
<anchor xml:id="__interactions_8cpp_source_1l01049"/>01049 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;str&#32;:&#32;vect)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01050"/>01050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;str&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l01051"/>01051 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l01052"/>01052 }
<anchor xml:id="__interactions_8cpp_source_1l01053"/>01053 
<anchor xml:id="__interactions_8cpp_source_1l01054"/>01054 
<anchor xml:id="__interactions_8cpp_source_1l01055"/><link linkend="_class_interactions_1a981d4790a0903cde44961f2781636cad">01055</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1a981d4790a0903cde44961f2781636cad">Interactions::getYear</link>()&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01056"/>01056 &#32;&#32;&#32;&#32;std::time_t&#32;t&#32;=&#32;std::time(<emphasis role="keyword">nullptr</emphasis>);
<anchor xml:id="__interactions_8cpp_source_1l01057"/>01057 &#32;&#32;&#32;&#32;std::tm&#32;now;
<anchor xml:id="__interactions_8cpp_source_1l01058"/>01058 &#32;&#32;&#32;&#32;localtime_s(&amp;now,&#32;&amp;t);
<anchor xml:id="__interactions_8cpp_source_1l01059"/>01059 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;now.tm_year&#32;+&#32;1900;
<anchor xml:id="__interactions_8cpp_source_1l01060"/>01060 }
<anchor xml:id="__interactions_8cpp_source_1l01061"/>01061 
<anchor xml:id="__interactions_8cpp_source_1l01062"/><link linkend="_class_interactions_1a4e27fdc5316915fd29db386563780388">01062</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1a4e27fdc5316915fd29db386563780388">Interactions::getMonth</link>()&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01063"/>01063 &#32;&#32;&#32;&#32;std::time_t&#32;t&#32;=&#32;std::time(<emphasis role="keyword">nullptr</emphasis>);
<anchor xml:id="__interactions_8cpp_source_1l01064"/>01064 &#32;&#32;&#32;&#32;std::tm&#32;now;
<anchor xml:id="__interactions_8cpp_source_1l01065"/>01065 &#32;&#32;&#32;&#32;localtime_s(&amp;now,&#32;&amp;t);
<anchor xml:id="__interactions_8cpp_source_1l01066"/>01066 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;now.tm_mon&#32;+&#32;1;
<anchor xml:id="__interactions_8cpp_source_1l01067"/>01067 }
<anchor xml:id="__interactions_8cpp_source_1l01068"/>01068 
<anchor xml:id="__interactions_8cpp_source_1l01069"/><link linkend="_class_interactions_1ac7fc1f0d7d65c6b926bf12eb12204ff3">01069</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1ac7fc1f0d7d65c6b926bf12eb12204ff3">Interactions::getDay</link>()&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01070"/>01070 &#32;&#32;&#32;&#32;std::time_t&#32;t&#32;=&#32;std::time(<emphasis role="keyword">nullptr</emphasis>);
<anchor xml:id="__interactions_8cpp_source_1l01071"/>01071 &#32;&#32;&#32;&#32;std::tm&#32;now;
<anchor xml:id="__interactions_8cpp_source_1l01072"/>01072 &#32;&#32;&#32;&#32;localtime_s(&amp;now,&#32;&amp;t);
<anchor xml:id="__interactions_8cpp_source_1l01073"/>01073 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dayOfWeek&#32;=&#32;now.tm_wday;
<anchor xml:id="__interactions_8cpp_source_1l01074"/>01074 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dayOfWeek&#32;==&#32;0)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01075"/>01075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dayOfWeek&#32;=&#32;7;
<anchor xml:id="__interactions_8cpp_source_1l01076"/>01076 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l01077"/>01077 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dayOfWeek;
<anchor xml:id="__interactions_8cpp_source_1l01078"/>01078 }
<anchor xml:id="__interactions_8cpp_source_1l01079"/>01079 
<anchor xml:id="__interactions_8cpp_source_1l01080"/><link linkend="_class_interactions_1a0b3c1a0320752fc90bb3d969a472009d">01080</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1a0b3c1a0320752fc90bb3d969a472009d">Interactions::getHour</link>()&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01081"/>01081 &#32;&#32;&#32;&#32;std::time_t&#32;t&#32;=&#32;std::time(<emphasis role="keyword">nullptr</emphasis>);
<anchor xml:id="__interactions_8cpp_source_1l01082"/>01082 &#32;&#32;&#32;&#32;std::tm&#32;now;
<anchor xml:id="__interactions_8cpp_source_1l01083"/>01083 &#32;&#32;&#32;&#32;localtime_s(&amp;now,&#32;&amp;t);
<anchor xml:id="__interactions_8cpp_source_1l01084"/>01084 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;now.tm_hour;
<anchor xml:id="__interactions_8cpp_source_1l01085"/>01085 }
<anchor xml:id="__interactions_8cpp_source_1l01086"/>01086 
<anchor xml:id="__interactions_8cpp_source_1l01087"/><link linkend="_class_interactions_1ab31446219b9680d6960e1c76484c9331">01087</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1ab31446219b9680d6960e1c76484c9331">Interactions::getMinute</link>()&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01088"/>01088 &#32;&#32;&#32;&#32;std::time_t&#32;t&#32;=&#32;std::time(<emphasis role="keyword">nullptr</emphasis>);
<anchor xml:id="__interactions_8cpp_source_1l01089"/>01089 &#32;&#32;&#32;&#32;std::tm&#32;now;
<anchor xml:id="__interactions_8cpp_source_1l01090"/>01090 &#32;&#32;&#32;&#32;localtime_s(&amp;now,&#32;&amp;t);
<anchor xml:id="__interactions_8cpp_source_1l01091"/>01091 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;now.tm_min;
<anchor xml:id="__interactions_8cpp_source_1l01092"/>01092 }
<anchor xml:id="__interactions_8cpp_source_1l01093"/>01093 
<anchor xml:id="__interactions_8cpp_source_1l01094"/><link linkend="_class_interactions_1a5569890eeb93a27f8c428439460c52b2">01094</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1a5569890eeb93a27f8c428439460c52b2">Interactions::getSecond</link>()&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01095"/>01095 &#32;&#32;&#32;&#32;std::time_t&#32;t&#32;=&#32;std::time(<emphasis role="keyword">nullptr</emphasis>);
<anchor xml:id="__interactions_8cpp_source_1l01096"/>01096 &#32;&#32;&#32;&#32;std::tm&#32;now;
<anchor xml:id="__interactions_8cpp_source_1l01097"/>01097 &#32;&#32;&#32;&#32;localtime_s(&amp;now,&#32;&amp;t);
<anchor xml:id="__interactions_8cpp_source_1l01098"/>01098 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;now.tm_sec;
<anchor xml:id="__interactions_8cpp_source_1l01099"/>01099 }
<anchor xml:id="__interactions_8cpp_source_1l01100"/>01100 
<anchor xml:id="__interactions_8cpp_source_1l01101"/><link linkend="_class_interactions_1a185fecdd73adc781ffb402bf0dac3ed7">01101</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interactions_1a185fecdd73adc781ffb402bf0dac3ed7">Interactions::setRebootCount</link>(<emphasis role="keywordtype">int</emphasis>&#32;nb)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01102"/>01102 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a884bfcd6394ec8faac5777d6fb69a8d7">rebootCount</link>&#32;=&#32;nb;
<anchor xml:id="__interactions_8cpp_source_1l01103"/>01103 }
<anchor xml:id="__interactions_8cpp_source_1l01104"/>01104 
<anchor xml:id="__interactions_8cpp_source_1l01105"/>01105 
<anchor xml:id="__interactions_8cpp_source_1l01106"/><link linkend="_class_interactions_1a9a7024bd6937b747a114af86263850d5">01106</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1a9a7024bd6937b747a114af86263850d5">Interactions::getRebootCount</link>()&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01107"/>01107 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_interactions_1a884bfcd6394ec8faac5777d6fb69a8d7">rebootCount</link>;
<anchor xml:id="__interactions_8cpp_source_1l01108"/>01108 }
<anchor xml:id="__interactions_8cpp_source_1l01109"/>01109 
<anchor xml:id="__interactions_8cpp_source_1l01110"/><link linkend="_class_interactions_1a77df030e3199449235b9f50c360b7095">01110</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interactions_1a77df030e3199449235b9f50c360b7095">Interactions::setDimX</link>(<emphasis role="keywordtype">int</emphasis>&#32;x)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01111"/>01111 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ac8184067871e90f96c9dec8891125cce">dimX</link>&#32;=&#32;x;
<anchor xml:id="__interactions_8cpp_source_1l01112"/>01112 }
<anchor xml:id="__interactions_8cpp_source_1l01113"/><link linkend="_class_interactions_1a9686fccac68a6f049d2d04690febc3d1">01113</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interactions_1a9686fccac68a6f049d2d04690febc3d1">Interactions::setDimY</link>(<emphasis role="keywordtype">int</emphasis>&#32;y)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01114"/>01114 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1ab2a75e021a19afe95b43c09b0cb7a0e5">dimY</link>&#32;=&#32;y;
<anchor xml:id="__interactions_8cpp_source_1l01115"/>01115 }
<anchor xml:id="__interactions_8cpp_source_1l01116"/><link linkend="_class_interactions_1a58d25a692c5ee6773914f3c0c4f2cb6e">01116</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1a58d25a692c5ee6773914f3c0c4f2cb6e">Interactions::getMatWidth</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;name)
<anchor xml:id="__interactions_8cpp_source_1l01117"/>01117 {
<anchor xml:id="__interactions_8cpp_source_1l01118"/>01118 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fopencv_8cpp_1a5c455ed716b7fa4c675446fc5b8ba4fb">CreateMat</link>(name,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>).cols;
<anchor xml:id="__interactions_8cpp_source_1l01119"/>01119 }
<anchor xml:id="__interactions_8cpp_source_1l01120"/><link linkend="_class_interactions_1a4c7bbb037e2814f276bdbb3625d25c17">01120</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_interactions_1a4c7bbb037e2814f276bdbb3625d25c17">Interactions::getMatHeight</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;name)
<anchor xml:id="__interactions_8cpp_source_1l01121"/>01121 {
<anchor xml:id="__interactions_8cpp_source_1l01122"/>01122 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fopencv_8cpp_1a5c455ed716b7fa4c675446fc5b8ba4fb">CreateMat</link>(name,&#32;<link linkend="__units_8h_1a6b62789b863165c9d424a7504d4a6f61a551cc46435cf57d89ca000b540d78ab0">Gray</link>).rows;
<anchor xml:id="__interactions_8cpp_source_1l01123"/>01123 }
<anchor xml:id="__interactions_8cpp_source_1l01124"/>01124 
<anchor xml:id="__interactions_8cpp_source_1l01125"/><link linkend="_class_interactions_1abd5b5d8a44970e1333e3611e302f166c">01125</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interactions_1abd5b5d8a44970e1333e3611e302f166c">Interactions::wait</link>(<emphasis role="keywordtype">int</emphasis>&#32;milliSeconds)
<anchor xml:id="__interactions_8cpp_source_1l01126"/>01126 {
<anchor xml:id="__interactions_8cpp_source_1l01127"/>01127 &#32;&#32;&#32;&#32;std::this_thread::sleep_for(std::chrono::milliseconds(milliSeconds));
<anchor xml:id="__interactions_8cpp_source_1l01128"/>01128 }
<anchor xml:id="__interactions_8cpp_source_1l01129"/><link linkend="_class_interactions_1a1a602b1baed0f80f749fbb5d569349b8">01129</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interactions_1a1a602b1baed0f80f749fbb5d569349b8">Interactions::gSwipeX</link>(<emphasis role="keywordtype">double</emphasis>&#32;x1,&#32;<emphasis role="keywordtype">double</emphasis>&#32;x2,&#32;<emphasis role="keywordtype">int</emphasis>&#32;millitime)
<anchor xml:id="__interactions_8cpp_source_1l01130"/>01130 {
<anchor xml:id="__interactions_8cpp_source_1l01131"/>01131 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a9044fca002a4287ad1a89ce0422a68e5">gSwipe</link>(x1,&#32;<link linkend="_class_interactions_1ab2a75e021a19afe95b43c09b0cb7a0e5">dimY</link>&#32;/&#32;2,&#32;x2,&#32;<link linkend="_class_interactions_1ab2a75e021a19afe95b43c09b0cb7a0e5">dimY</link>&#32;/&#32;2,&#32;millitime);
<anchor xml:id="__interactions_8cpp_source_1l01132"/>01132 }
<anchor xml:id="__interactions_8cpp_source_1l01133"/>01133 
<anchor xml:id="__interactions_8cpp_source_1l01134"/><link linkend="_class_interactions_1a21f2cc1ce6998a0d6d934f36d7f2df24">01134</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interactions_1a21f2cc1ce6998a0d6d934f36d7f2df24">Interactions::gSwipeY</link>(<emphasis role="keywordtype">double</emphasis>&#32;y1,&#32;<emphasis role="keywordtype">double</emphasis>&#32;y2,&#32;<emphasis role="keywordtype">int</emphasis>&#32;millitime)
<anchor xml:id="__interactions_8cpp_source_1l01135"/>01135 {
<anchor xml:id="__interactions_8cpp_source_1l01136"/>01136 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1a9044fca002a4287ad1a89ce0422a68e5">gSwipe</link>(<link linkend="_class_interactions_1ac8184067871e90f96c9dec8891125cce">dimX</link>&#32;/&#32;2,&#32;y1,&#32;<link linkend="_class_interactions_1ac8184067871e90f96c9dec8891125cce">dimX</link>&#32;/&#32;2,&#32;y2,&#32;millitime);
<anchor xml:id="__interactions_8cpp_source_1l01137"/>01137 }
<anchor xml:id="__interactions_8cpp_source_1l01138"/>01138 
<anchor xml:id="__interactions_8cpp_source_1l01139"/><link linkend="_class_interactions_1a9044fca002a4287ad1a89ce0422a68e5">01139</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interactions_1a9044fca002a4287ad1a89ce0422a68e5">Interactions::gSwipe</link>(<emphasis role="keywordtype">double</emphasis>&#32;x1,&#32;<emphasis role="keywordtype">double</emphasis>&#32;y1,&#32;<emphasis role="keywordtype">double</emphasis>&#32;x2,&#32;<emphasis role="keywordtype">double</emphasis>&#32;y2,&#32;<emphasis role="keywordtype">int</emphasis>&#32;millitime)
<anchor xml:id="__interactions_8cpp_source_1l01140"/>01140 {
<anchor xml:id="__interactions_8cpp_source_1l01141"/>01141 &#32;&#32;&#32;&#32;<link linkend="_fadb_8cpp_1aaaa05d37f22f833c0f941bf81f963504">swipe</link>((<emphasis role="keywordtype">int</emphasis>)x1,&#32;(<emphasis role="keywordtype">int</emphasis>)y1,&#32;(<emphasis role="keywordtype">int</emphasis>)x2,&#32;(<emphasis role="keywordtype">int</emphasis>)y2,&#32;millitime,&#32;<link linkend="_class_interactions_1ae5b95018d6b3e8c79174757907dbd685">adbId</link>);
<anchor xml:id="__interactions_8cpp_source_1l01142"/>01142 }
<anchor xml:id="__interactions_8cpp_source_1l01143"/>01143 
<anchor xml:id="__interactions_8cpp_source_1l01144"/><link linkend="_class_interactions_1aae6172962092f278714536142e987cde">01144</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interactions_1aae6172962092f278714536142e987cde">Interactions::click</link>(<link linkend="_struct_coord">Coord</link>&#32;<link linkend="_struct_coord">Coord</link>)
<anchor xml:id="__interactions_8cpp_source_1l01145"/>01145 {
<anchor xml:id="__interactions_8cpp_source_1l01146"/>01146 &#32;&#32;&#32;&#32;<link linkend="_class_interactions_1aae6172962092f278714536142e987cde">click</link>(<link linkend="_struct_coord">Coord</link>.<link linkend="_struct_coord_1a696eaa744360fc791d0e3b331c549dbe">x</link>,&#32;<link linkend="_struct_coord">Coord</link>.<link linkend="_struct_coord_1a214166cca70cef7dda9201689c3e81ab">y</link>);
<anchor xml:id="__interactions_8cpp_source_1l01147"/>01147 }
<anchor xml:id="__interactions_8cpp_source_1l01148"/><link linkend="_class_interactions_1af23557a5473cf551e7a1268f5fc2f0c6">01148</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interactions_1aae6172962092f278714536142e987cde">Interactions::click</link>(<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y)
<anchor xml:id="__interactions_8cpp_source_1l01149"/>01149 {
<anchor xml:id="__interactions_8cpp_source_1l01150"/>01150 &#32;&#32;&#32;&#32;<link linkend="_fadb_8cpp_1aa473853dcd4f0bff3e28f729af6e9641">touch</link>(x,&#32;y,&#32;<link linkend="_class_interactions_1ae5b95018d6b3e8c79174757907dbd685">adbId</link>);
<anchor xml:id="__interactions_8cpp_source_1l01151"/>01151 }
<anchor xml:id="__interactions_8cpp_source_1l01152"/>01152 
<anchor xml:id="__interactions_8cpp_source_1l01153"/><link linkend="_class_interactions_1af3c13c1ae7d10eb3f41f626549982d41">01153</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_interactions_1af3c13c1ae7d10eb3f41f626549982d41">Interactions::orderDigits</link>(std::vector&lt;Digit&gt;&amp;&#32;digits)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01154"/>01154 &#32;&#32;&#32;&#32;std::sort(digits.begin(),&#32;digits.end(),&#32;[&amp;](<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_digit">Digit</link>&amp;&#32;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_digit">Digit</link>&amp;&#32;b)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01155"/>01155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;a.Cnb.x&#32;&lt;&#32;b.Cnb.x;
<anchor xml:id="__interactions_8cpp_source_1l01156"/>01156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;});
<anchor xml:id="__interactions_8cpp_source_1l01157"/>01157 }
<anchor xml:id="__interactions_8cpp_source_1l01158"/>01158 
<anchor xml:id="__interactions_8cpp_source_1l01159"/><link linkend="_class_interactions_1a3796cd8ba317d67243241f2510de6fdf">01159</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a3796cd8ba317d67243241f2510de6fdf">Interactions::eraseString</link>(std::vector&lt;std::string&gt;&amp;&#32;allTempl,&#32;std::string&#32;templ)
<anchor xml:id="__interactions_8cpp_source_1l01160"/>01160 {
<anchor xml:id="__interactions_8cpp_source_1l01161"/>01161 &#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;::iterator&#32;it;
<anchor xml:id="__interactions_8cpp_source_1l01162"/>01162 &#32;&#32;&#32;&#32;it&#32;=&#32;std::find(allTempl.begin(),&#32;allTempl.end(),&#32;templ);
<anchor xml:id="__interactions_8cpp_source_1l01163"/>01163 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(it&#32;!=&#32;allTempl.end())&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01164"/>01164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;allTempl.erase(it);
<anchor xml:id="__interactions_8cpp_source_1l01165"/>01165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l01166"/>01166 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l01167"/>01167 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l01168"/>01168 }
<anchor xml:id="__interactions_8cpp_source_1l01169"/>01169 
<anchor xml:id="__interactions_8cpp_source_1l01170"/><link linkend="_class_interactions_1a47882846bb356655826f5e9347f1d580">01170</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a47882846bb356655826f5e9347f1d580">Interactions::fStr</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;allTempl,&#32;std::string&#32;templ)
<anchor xml:id="__interactions_8cpp_source_1l01171"/>01171 {
<anchor xml:id="__interactions_8cpp_source_1l01172"/>01172 &#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;::iterator&#32;it;
<anchor xml:id="__interactions_8cpp_source_1l01173"/>01173 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::find(allTempl.begin(),&#32;allTempl.end(),&#32;templ)&#32;!=&#32;allTempl.end();
<anchor xml:id="__interactions_8cpp_source_1l01174"/>01174 }
<anchor xml:id="__interactions_8cpp_source_1l01175"/>01175 
<anchor xml:id="__interactions_8cpp_source_1l01176"/><link linkend="_class_interactions_1a495250a31d9f3762cf300b44a11cd613">01176</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a47882846bb356655826f5e9347f1d580">Interactions::fStr</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;allTempl,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&#32;allkeys)
<anchor xml:id="__interactions_8cpp_source_1l01177"/>01177 {
<anchor xml:id="__interactions_8cpp_source_1l01178"/>01178 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::string&#32;key&#32;:&#32;allkeys)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01179"/>01179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_interactions_1a47882846bb356655826f5e9347f1d580">fStr</link>(allTempl,&#32;key))<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l01180"/>01180 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l01181"/>01181 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l01182"/>01182 }
<anchor xml:id="__interactions_8cpp_source_1l01183"/>01183 
<anchor xml:id="__interactions_8cpp_source_1l01184"/><link linkend="_class_interactions_1a1eb3a67f15cd278977b200c6ffca71eb">01184</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_interactions_1a1eb3a67f15cd278977b200c6ffca71eb">Interactions::fOneStr</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&amp;&#32;allTempl,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&#32;allkeys)
<anchor xml:id="__interactions_8cpp_source_1l01185"/>01185 {
<anchor xml:id="__interactions_8cpp_source_1l01186"/>01186 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::string&#32;key&#32;:&#32;allkeys)&#32;{
<anchor xml:id="__interactions_8cpp_source_1l01187"/>01187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_interactions_1a47882846bb356655826f5e9347f1d580">fStr</link>(allTempl,&#32;key))<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l01188"/>01188 &#32;&#32;&#32;&#32;}
<anchor xml:id="__interactions_8cpp_source_1l01189"/>01189 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__interactions_8cpp_source_1l01190"/>01190 }
<anchor xml:id="__interactions_8cpp_source_1l01191"/>01191 
</programlisting></section>
