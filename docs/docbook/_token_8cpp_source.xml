<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__token_8cpp_source" xml:lang="en-US">
<title>Token.cpp</title>
<indexterm><primary>src/Token.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__token_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__token_8h">Token.h</link>&quot;</emphasis>
<anchor xml:id="__token_8cpp_source_1l00002"/>00002 
<anchor xml:id="__token_8cpp_source_1l00003"/><link linkend="__token_8cpp_1ad42767aaf8252eb57581d009530bd527">00003</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__token_8cpp_1ad42767aaf8252eb57581d009530bd527">isTokenString</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text)
<anchor xml:id="__token_8cpp_source_1l00004"/>00004 {
<anchor xml:id="__token_8cpp_source_1l00005"/>00005 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8cpp_1a3276e6efe4a3f409262ffe0b345e9636">isKeywordString</link>(text)&#32;||&#32;<link linkend="__token_8cpp_1ae8bab56314c8b787497a84c189b9114d">isLiteralString</link>(text)&#32;||&#32;<link linkend="__token_8cpp_1ad93eecc58b3fdba57ba605dcb296f03e">isPunctuationString</link>(text)&#32;||&#32;<link linkend="__token_8cpp_1ae80d3823673e42ed3ce7e84597bbd552">isOperatorString</link>(text);
<anchor xml:id="__token_8cpp_source_1l00006"/>00006 }
<anchor xml:id="__token_8cpp_source_1l00007"/>00007 
<anchor xml:id="__token_8cpp_source_1l00008"/><link linkend="__token_8cpp_1a3276e6efe4a3f409262ffe0b345e9636">00008</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__token_8cpp_1a3276e6efe4a3f409262ffe0b345e9636">isKeywordString</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text)
<anchor xml:id="__token_8cpp_source_1l00009"/>00009 {
<anchor xml:id="__token_8cpp_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;tokenString&#32;:&#32;allKeywordsTokensString)&#32;{
<anchor xml:id="__token_8cpp_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tokenString.compare(text)&#32;==&#32;0)<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00014"/>00014 }
<anchor xml:id="__token_8cpp_source_1l00015"/>00015 
<anchor xml:id="__token_8cpp_source_1l00016"/>00016 <emphasis role="comment">//ADD&#32;TABLE&#32;OF&#32;ID&#32;+&#32;TYPES&#32;and&#32;then&#32;implement&#32;search&#32;in&#32;it</emphasis>
<anchor xml:id="__token_8cpp_source_1l00017"/><link linkend="__token_8cpp_1a8dd32087361a0d3911776dd01da96f7e">00017</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__token_8cpp_1a8dd32087361a0d3911776dd01da96f7e">isNumericToken</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Token&gt;&amp;&#32;token,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(token)&#32;{
<anchor xml:id="__token_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;d&#32;=&#32;token-&gt;getDataType(tRes);
<anchor xml:id="__token_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;d&#32;==&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a53f93baa3057821107c750323892fa92">DataType::INT</link>&#32;||&#32;d&#32;==&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6ae738c26bf4ce1037fa81b039a915cbf6">DataType::FLOAT</link>;
<anchor xml:id="__token_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00023"/>00023 }
<anchor xml:id="__token_8cpp_source_1l00024"/>00024 
<anchor xml:id="__token_8cpp_source_1l00025"/><link linkend="__token_8cpp_1ae8bab56314c8b787497a84c189b9114d">00025</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__token_8cpp_1ae8bab56314c8b787497a84c189b9114d">isLiteralString</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text)
<anchor xml:id="__token_8cpp_source_1l00026"/>00026 {
<anchor xml:id="__token_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;tokenString&#32;:&#32;allLiteralsTokensStrings)&#32;{
<anchor xml:id="__token_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tokenString.compare(text)&#32;==&#32;0)<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00031"/>00031 }
<anchor xml:id="__token_8cpp_source_1l00032"/>00032 
<anchor xml:id="__token_8cpp_source_1l00033"/><link linkend="__token_8cpp_1ad93eecc58b3fdba57ba605dcb296f03e">00033</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__token_8cpp_1ad93eecc58b3fdba57ba605dcb296f03e">isPunctuationString</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text)
<anchor xml:id="__token_8cpp_source_1l00034"/>00034 {
<anchor xml:id="__token_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;tokenString&#32;:&#32;allPunctuationsTokensStrings)&#32;{
<anchor xml:id="__token_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tokenString.compare(text)&#32;==&#32;0)<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00039"/>00039 }
<anchor xml:id="__token_8cpp_source_1l00040"/>00040 
<anchor xml:id="__token_8cpp_source_1l00041"/><link linkend="__token_8cpp_1ae80d3823673e42ed3ce7e84597bbd552">00041</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__token_8cpp_1ae80d3823673e42ed3ce7e84597bbd552">isOperatorString</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text)
<anchor xml:id="__token_8cpp_source_1l00042"/>00042 {
<anchor xml:id="__token_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;tokenString&#32;:&#32;allOperatorsTokensStrings)&#32;{
<anchor xml:id="__token_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tokenString.compare(text)&#32;==&#32;0)<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00047"/>00047 }
<anchor xml:id="__token_8cpp_source_1l00048"/>00048 
<anchor xml:id="__token_8cpp_source_1l00049"/><link linkend="__token_8cpp_1a38a3bc682b32b85fc40cda646569d271">00049</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__token_8cpp_1a38a3bc682b32b85fc40cda646569d271">isTokenStringContained</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;text)&#32;{
<anchor xml:id="__token_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;word&#32;:&#32;allTokensStrings)&#32;{
<anchor xml:id="__token_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(text.find(word)&#32;!=&#32;std::string::npos)<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00054"/>00054 }
<anchor xml:id="__token_8cpp_source_1l00055"/>00055 
<anchor xml:id="__token_8cpp_source_1l00056"/>00056 
<anchor xml:id="__token_8cpp_source_1l00057"/><link linkend="__token_8cpp_1a226930df4269e20dd367d4b70f0ad457">00057</link> std::string&#32;<link linkend="__token_8cpp_1a226930df4269e20dd367d4b70f0ad457">getNextNumeric</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;str)&#32;{
<anchor xml:id="__token_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;std::string&#32;digits&#32;=&#32;<emphasis role="stringliteral">&quot;0123456789&quot;</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;firstDigitPos&#32;=&#32;str.find_first_of(digits);
<anchor xml:id="__token_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(firstDigitPos&#32;!=&#32;std::string::npos)
<anchor xml:id="__token_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;{
<anchor xml:id="__token_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::size_t&#32;<emphasis role="keyword">const</emphasis>&#32;firstNonDigitPos&#32;=&#32;str.find_first_not_of(digits,&#32;firstDigitPos);
<anchor xml:id="__token_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;str.substr(firstDigitPos,&#32;firstNonDigitPos&#32;==&#32;std::string::npos&#32;?&#32;firstNonDigitPos&#32;-&#32;firstDigitPos&#32;:&#32;firstNonDigitPos);
<anchor xml:id="__token_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00065"/>00065 }
<anchor xml:id="__token_8cpp_source_1l00066"/>00066 
<anchor xml:id="__token_8cpp_source_1l00067"/>00067 
<anchor xml:id="__token_8cpp_source_1l00068"/>00068 
<anchor xml:id="__token_8cpp_source_1l00069"/><link linkend="__token_8cpp_1a910f9c92b4e541a09214dedd7338b6b5">00069</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__token_8cpp_1a910f9c92b4e541a09214dedd7338b6b5">isIdentifier</link>(<emphasis role="keyword">const</emphasis>&#32;std::shared_ptr&lt;Token&gt;&amp;&#32;token)&#32;{
<anchor xml:id="__token_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(token)<emphasis role="keywordflow">return</emphasis>&#32;token-&gt;getValue()&#32;==&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca6fcc416051346daca31c571646af127a">TokenVALUE::IDENTIFIER</link>;
<anchor xml:id="__token_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00072"/>00072 }
<anchor xml:id="__token_8cpp_source_1l00073"/>00073 
<anchor xml:id="__token_8cpp_source_1l00074"/>00074 
<anchor xml:id="__token_8cpp_source_1l00075"/>00075 
<anchor xml:id="__token_8cpp_source_1l00076"/>00076 <emphasis role="comment">//Doesn&apos;t&#32;have&#32;an&#32;escape&#32;character&#32;to&#32;store&#32;&quot;</emphasis>
<anchor xml:id="__token_8cpp_source_1l00077"/><link linkend="__token_8cpp_1a426cbd25cc7742ac6cface09364031ba">00077</link> std::string&#32;<link linkend="__token_8cpp_1a426cbd25cc7742ac6cface09364031ba">getStringLiteral</link>(std::string&amp;&#32;text)&#32;{
<anchor xml:id="__token_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;std::string&#32;temp&#32;=&#32;<link linkend="__text_manager_8cpp_1aff8311b88dbf5f3091f3ac1262543242">getStringBefore</link>(text,&#32;quotation);
<anchor xml:id="__token_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(temp.empty())<emphasis role="keywordflow">return</emphasis>&#32;text;
<anchor xml:id="__token_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;temp;
<anchor xml:id="__token_8cpp_source_1l00081"/>00081 }
<anchor xml:id="__token_8cpp_source_1l00082"/>00082 
<anchor xml:id="__token_8cpp_source_1l00083"/>00083 
<anchor xml:id="__token_8cpp_source_1l00084"/>00084 
<anchor xml:id="__token_8cpp_source_1l00085"/>00085 
<anchor xml:id="__token_8cpp_source_1l00086"/>00086 
<anchor xml:id="__token_8cpp_source_1l00087"/><link linkend="_class_identifier_token_1a7be51f313dff6ce44902faddf3e0c8a1">00087</link> <link linkend="_class_identifier_token_1a7be51f313dff6ce44902faddf3e0c8a1">IdentifierToken::IdentifierToken</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;varName):<link linkend="_class_token">Token</link>()
<anchor xml:id="__token_8cpp_source_1l00088"/>00088 {
<anchor xml:id="__token_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca6fcc416051346daca31c571646af127a">TokenVALUE::IDENTIFIER</link>;
<anchor xml:id="__token_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;varName;
<anchor xml:id="__token_8cpp_source_1l00091"/>00091 }
<anchor xml:id="__token_8cpp_source_1l00092"/>00092 
<anchor xml:id="__token_8cpp_source_1l00093"/>00093 
<anchor xml:id="__token_8cpp_source_1l00094"/><link linkend="_class_identifier_token_1a0ddba0337e1b1858a5d067c9dc902d44">00094</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_identifier_token_1a0ddba0337e1b1858a5d067c9dc902d44">IdentifierToken::addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00095"/>00095 {
<anchor xml:id="__token_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;tl.<link linkend="_class_iterator_list_1af5c370ccb8698e2a9fb0714782d57203">next</link>();
<anchor xml:id="__token_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00098"/>00098 }
<anchor xml:id="__token_8cpp_source_1l00099"/>00099 
<anchor xml:id="__token_8cpp_source_1l00100"/><link linkend="_class_main_token_1a1c3f66d8b2aed831a6c1f7098aad4bc3">00100</link> <link linkend="_class_main_token_1a1c3f66d8b2aed831a6c1f7098aad4bc3">MainToken::MainToken</link>()&#32;:<link linkend="_class_flow_p_k_token">FlowPKToken</link>()
<anchor xml:id="__token_8cpp_source_1l00101"/>00101 {
<anchor xml:id="__token_8cpp_source_1l00102"/>00102 
<anchor xml:id="__token_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca186495f7da296bf880df3a22a492b378">TokenVALUE::MAIN</link>;
<anchor xml:id="__token_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;mainK;
<anchor xml:id="__token_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;<link linkend="_class_main_token_1ae9247cca379895ee8c033482c1beab9e">setOverloads</link>();
<anchor xml:id="__token_8cpp_source_1l00106"/>00106 }
<anchor xml:id="__token_8cpp_source_1l00107"/>00107 
<anchor xml:id="__token_8cpp_source_1l00108"/><link linkend="_class_main_token_1ae9247cca379895ee8c033482c1beab9e">00108</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_main_token_1ae9247cca379895ee8c033482c1beab9e">MainToken::setOverloads</link>()
<anchor xml:id="__token_8cpp_source_1l00109"/>00109 {
<anchor xml:id="__token_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(),0);
<anchor xml:id="__token_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;<emphasis role="comment">//Set&#32;the&#32;functions&#32;DataType&#32;in&#32;a&#32;file;</emphasis>
<anchor xml:id="__token_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(),1);
<anchor xml:id="__token_8cpp_source_1l00113"/>00113 }
<anchor xml:id="__token_8cpp_source_1l00114"/>00114 
<anchor xml:id="__token_8cpp_source_1l00115"/>00115 <emphasis role="comment">//Leave&#32;empty</emphasis>
<anchor xml:id="__token_8cpp_source_1l00116"/><link linkend="_class_p_k_token_1ab964c1ed5353551fafcab7d9f0053a86">00116</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1ab964c1ed5353551fafcab7d9f0053a86">PKToken::handleArguments</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00117"/>00117 {
<anchor xml:id="__token_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;mustSeparate&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a4fc9b2ef6a2ec9c3f963ddcb44621794">initTabs</link>();
<anchor xml:id="__token_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;<emphasis role="keyword">this</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!tl.<link linkend="_class_iterator_list_1a2ebc1118094754b7d333b0a9d257d12b">ended</link>())&#32;{
<anchor xml:id="__token_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;elem&#32;=&#32;tl.<link linkend="_class_iterator_list_1a4acf162e4a194bddd3c2fe26b073f45a">currentToken</link>();
<anchor xml:id="__token_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!elem-&gt;addTokens(tl,&#32;tRes))<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(elem-&gt;hasValue(<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46cab658c0ab7888b812782bb032dbf4815c">TokenVALUE::CLOSEPARENTHESIS</link>))&#32;{
<anchor xml:id="__token_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a65ea1970c75fddd5990ac66a1475a63f">hasCompletedArguments</link>())&#32;{
<anchor xml:id="__token_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_token_1ade47ed51e2f495f6d847c1bff9fe8db6">addError</link>(tRes,&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46cab658c0ab7888b812782bb032dbf4815c">TokenVALUE::CLOSEPARENTHESIS</link>,&#32;<link linkend="__token_8h_1ab0df38968e4f03a3f1f6d6df0f31f45aa79c6a788549c6275055c935df474f0e7">ErrorType::UNEXPECTED</link>);
<anchor xml:id="__token_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__token_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1ab26f7552e32582556f6c7c6132e355cf">setCompleteIndex</link>();
<anchor xml:id="__token_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a64d744e4cf4b113bc458eb03f15ba69d">dispatchArguments</link>();
<anchor xml:id="__token_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(elem-&gt;hasValue(<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca4d9b3e9fc12849d060371eb65154c751">TokenVALUE::COMMA</link>))&#32;{
<anchor xml:id="__token_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!mustSeparate)<link linkend="_class_token_1ade47ed51e2f495f6d847c1bff9fe8db6">addError</link>(tRes,&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca4d9b3e9fc12849d060371eb65154c751">TokenVALUE::COMMA</link>,&#32;<link linkend="__token_8h_1ab0df38968e4f03a3f1f6d6df0f31f45aa79c6a788549c6275055c935df474f0e7">ErrorType::UNEXPECTED</link>);
<anchor xml:id="__token_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__token_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a9bd07a9eaf2728560d1aa29bcc13bba9">addComma</link>(tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mustSeparate&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__token_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;type&#32;=&#32;elem-&gt;getDataType(tRes);
<anchor xml:id="__token_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1aaed90f32011643050b1440daed30c168">approveType</link>(type))&#32;{
<anchor xml:id="__token_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>.push_back(elem);
<anchor xml:id="__token_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mustSeparate&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a44c9abfe32ebc098862157d7ddf22b19">next</link>();
<anchor xml:id="__token_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tl.<link linkend="_class_iterator_list_1af5c370ccb8698e2a9fb0714782d57203">next</link>();
<anchor xml:id="__token_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_token_1ade47ed51e2f495f6d847c1bff9fe8db6">addError</link>(tRes,&#32;type);
<anchor xml:id="__token_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00152"/>00152 }
<anchor xml:id="__token_8cpp_source_1l00153"/>00153 
<anchor xml:id="__token_8cpp_source_1l00154"/><link linkend="_class_p_k_token_1a6b73584776ba004968c2273a7466e62c">00154</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_p_k_token_1a6b73584776ba004968c2273a7466e62c">PKToken::setOverloads</link>()
<anchor xml:id="__token_8cpp_source_1l00155"/>00155 {
<anchor xml:id="__token_8cpp_source_1l00156"/>00156 }
<anchor xml:id="__token_8cpp_source_1l00157"/>00157 
<anchor xml:id="__token_8cpp_source_1l00158"/><link linkend="_class_p_k_token_1a64d744e4cf4b113bc458eb03f15ba69d">00158</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_p_k_token_1a64d744e4cf4b113bc458eb03f15ba69d">PKToken::dispatchArguments</link>()
<anchor xml:id="__token_8cpp_source_1l00159"/>00159 {
<anchor xml:id="__token_8cpp_source_1l00160"/>00160 }
<anchor xml:id="__token_8cpp_source_1l00161"/>00161 
<anchor xml:id="__token_8cpp_source_1l00162"/><link linkend="_class_p_k_token_1a53a1431d31066e66aac1c2ea99245c0a">00162</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_p_k_token_1a53a1431d31066e66aac1c2ea99245c0a">PKToken::showTokenTree</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nestedLayer)
<anchor xml:id="__token_8cpp_source_1l00163"/>00163 {
<anchor xml:id="__token_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;<link linkend="_class_token_1abd61b776070d98e2e1b748831a8ae85e">Token::showTokenTree</link>(nestedLayer);
<anchor xml:id="__token_8cpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;openParenthesisP;
<anchor xml:id="__token_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a5aebdb70c18806f9119694e027202396">showArguments</link>(nestedLayer);
<anchor xml:id="__token_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;closeParenthesisP;
<anchor xml:id="__token_8cpp_source_1l00168"/>00168 }
<anchor xml:id="__token_8cpp_source_1l00169"/>00169 
<anchor xml:id="__token_8cpp_source_1l00170"/><link linkend="_class_p_k_token_1a5aebdb70c18806f9119694e027202396">00170</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_p_k_token_1a5aebdb70c18806f9119694e027202396">PKToken::showArguments</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nestedLayer)
<anchor xml:id="__token_8cpp_source_1l00171"/>00171 {
<anchor xml:id="__token_8cpp_source_1l00172"/>00172 
<anchor xml:id="__token_8cpp_source_1l00173"/>00173 }
<anchor xml:id="__token_8cpp_source_1l00174"/>00174 
<anchor xml:id="__token_8cpp_source_1l00175"/><link linkend="_class_coord_token_1a9f04020eee6553e459eaef139ad0ba66">00175</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_coord_token_1a9f04020eee6553e459eaef139ad0ba66">CoordToken::showArguments</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nestedLayer)
<anchor xml:id="__token_8cpp_source_1l00176"/>00176 {
<anchor xml:id="__token_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_coord_token_1a21470f2dfdc0677999da55c3731c1b4a">xPoint</link>&#32;&amp;&amp;&#32;<link linkend="_class_coord_token_1ac1290944990250ad960c7004a7eef459">yPoint</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_coord_token_1a21470f2dfdc0677999da55c3731c1b4a">xPoint</link>-&gt;showTokenTree(nestedLayer);
<anchor xml:id="__token_8cpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;,&apos;</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_coord_token_1ac1290944990250ad960c7004a7eef459">yPoint</link>-&gt;showTokenTree(nestedLayer);
<anchor xml:id="__token_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_coord_token_1a1da90086131fc87de755754d41ecbf41">coordToken</link>){
<anchor xml:id="__token_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_coord_token_1a1da90086131fc87de755754d41ecbf41">coordToken</link>-&gt;showTokenTree(nestedLayer);
<anchor xml:id="__token_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00185"/>00185 }
<anchor xml:id="__token_8cpp_source_1l00186"/>00186 
<anchor xml:id="__token_8cpp_source_1l00187"/><link linkend="_class_p_k_token_1a3af43a7a3050bf9e446938692be33262">00187</link> <link linkend="_class_p_k_token_1a3af43a7a3050bf9e446938692be33262">PKToken::PKToken</link>()&#32;:<link linkend="_class_k_token">KToken</link>()
<anchor xml:id="__token_8cpp_source_1l00188"/>00188 {
<anchor xml:id="__token_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a6b73584776ba004968c2273a7466e62c">setOverloads</link>();
<anchor xml:id="__token_8cpp_source_1l00190"/>00190 }
<anchor xml:id="__token_8cpp_source_1l00191"/>00191 
<anchor xml:id="__token_8cpp_source_1l00192"/>00192 
<anchor xml:id="__token_8cpp_source_1l00193"/><link linkend="_class_token_1ad69955a02eaf8f332b8898a1855c7a28">00193</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_token_1ad69955a02eaf8f332b8898a1855c7a28">Token::addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00194"/>00194 {
<anchor xml:id="__token_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00196"/>00196 }
<anchor xml:id="__token_8cpp_source_1l00197"/>00197 
<anchor xml:id="__token_8cpp_source_1l00198"/><link linkend="_class_k_token_1aa70f9690ec470ceece17f9641bc9fb96">00198</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_k_token_1aa70f9690ec470ceece17f9641bc9fb96">KToken::addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00199"/>00199 {
<anchor xml:id="__token_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;tl.<link linkend="_class_iterator_list_1af5c370ccb8698e2a9fb0714782d57203">next</link>();
<anchor xml:id="__token_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00202"/>00202 }
<anchor xml:id="__token_8cpp_source_1l00203"/>00203 
<anchor xml:id="__token_8cpp_source_1l00204"/><link linkend="_class_p_k_token_1a533aa21d507b12c9682e3babc83c4396">00204</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1a533aa21d507b12c9682e3babc83c4396">PKToken::addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00205"/>00205 {
<anchor xml:id="__token_8cpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;<link linkend="_class_k_token_1aa70f9690ec470ceece17f9641bc9fb96">KToken::addTokens</link>(tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_p_k_token_1aa0d39255200f157dcead5e02815c0345">addOp</link>(tl,tRes))&#32;{
<anchor xml:id="__token_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_p_k_token_1ab964c1ed5353551fafcab7d9f0053a86">handleArguments</link>(tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00211"/>00211 }
<anchor xml:id="__token_8cpp_source_1l00212"/>00212 
<anchor xml:id="__token_8cpp_source_1l00213"/>00213 
<anchor xml:id="__token_8cpp_source_1l00214"/><link linkend="_class_u_p_k_token_1a17fe15dac3bae5361799314d76a63800">00214</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_u_p_k_token_1a17fe15dac3bae5361799314d76a63800">UPKToken::addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00215"/>00215 {
<anchor xml:id="__token_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;<emphasis role="comment">//same&#32;as&#32;PKToken,&#32;handleArguments&#32;gets&#32;only&#32;1&#32;token</emphasis>
<anchor xml:id="__token_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_p_k_token_1a533aa21d507b12c9682e3babc83c4396">PKToken::addTokens</link>(tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00218"/>00218 }
<anchor xml:id="__token_8cpp_source_1l00219"/><link linkend="_class_flow_k_token_1a61c9d0279bdf37b161af7c4153e92e98">00219</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_flow_k_token_1a61c9d0279bdf37b161af7c4153e92e98">FlowKToken::addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00220"/>00220 {
<anchor xml:id="__token_8cpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_k_token_1aa70f9690ec470ceece17f9641bc9fb96">KToken::addTokens</link>(tl,&#32;tRes))&#32;{
<anchor xml:id="__token_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_flow_token_1abb30bac4dada1a3372776680719d517c">FlowToken::addBody</link>(tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00225"/>00225 }
<anchor xml:id="__token_8cpp_source_1l00226"/><link linkend="_class_flow_p_k_token_1a03998327bfce2d536cf666aaa29950da">00226</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_flow_p_k_token_1a03998327bfce2d536cf666aaa29950da">FlowPKToken::addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00227"/>00227 {
<anchor xml:id="__token_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_p_k_token_1a533aa21d507b12c9682e3babc83c4396">PKToken::addTokens</link>(tl,&#32;tRes)){
<anchor xml:id="__token_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_flow_token_1abb30bac4dada1a3372776680719d517c">FlowToken::addBody</link>(tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00232"/>00232 }
<anchor xml:id="__token_8cpp_source_1l00233"/>00233 
<anchor xml:id="__token_8cpp_source_1l00234"/><link linkend="_class_main_token_1a4d466f7e8e8a0e9c7fa3eba722f51bcd">00234</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_main_token_1a4d466f7e8e8a0e9c7fa3eba722f51bcd">MainToken::addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00235"/>00235 {
<anchor xml:id="__token_8cpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;<link linkend="_class_flow_p_k_token_1a03998327bfce2d536cf666aaa29950da">FlowPKToken::addTokens</link>(tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;<emphasis role="comment">//handle&#32;main&#32;logic</emphasis>
<anchor xml:id="__token_8cpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00239"/>00239 }
<anchor xml:id="__token_8cpp_source_1l00240"/>00240 
<anchor xml:id="__token_8cpp_source_1l00241"/><link linkend="_class_flow_c_k_token_1a70e9e870b981aca2c2995a7fcceac2ac">00241</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_flow_c_k_token_1a70e9e870b981aca2c2995a7fcceac2ac">FlowCKToken::addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00242"/>00242 {
<anchor xml:id="__token_8cpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_token_1ad69955a02eaf8f332b8898a1855c7a28">CKToken::addTokens</link>(tl,&#32;tRes))&#32;{
<anchor xml:id="__token_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_flow_token_1abb30bac4dada1a3372776680719d517c">FlowToken::addBody</link>(tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00247"/>00247 }
<anchor xml:id="__token_8cpp_source_1l00248"/>00248 
<anchor xml:id="__token_8cpp_source_1l00249"/><link linkend="_class_wait_token_1a0c7c5e917c640de13ee85f0361f73fb1">00249</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_wait_token_1a0c7c5e917c640de13ee85f0361f73fb1">WaitToken::addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00250"/>00250 {
<anchor xml:id="__token_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_m_p_k_token_1a9a5cbbc3269d1601a414e3dd25bfeb63">MPKToken::addTokens</link>(tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00252"/>00252 }
<anchor xml:id="__token_8cpp_source_1l00253"/>00253 
<anchor xml:id="__token_8cpp_source_1l00254"/><link linkend="_class_store_token_1a42ebff8fa5aa531bfa439cf4b9fd7613">00254</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_store_token_1a42ebff8fa5aa531bfa439cf4b9fd7613">StoreToken::addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00255"/>00255 {
<anchor xml:id="__token_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_m_p_k_token_1a9a5cbbc3269d1601a414e3dd25bfeb63">MPKToken::addTokens</link>(tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00257"/>00257 }
<anchor xml:id="__token_8cpp_source_1l00258"/>00258 
<anchor xml:id="__token_8cpp_source_1l00259"/>00259 
<anchor xml:id="__token_8cpp_source_1l00260"/>00260 
<anchor xml:id="__token_8cpp_source_1l00261"/>00261 
<anchor xml:id="__token_8cpp_source_1l00262"/><link linkend="_class_list_token_1a9003dd872c19760212536f6197d70f51">00262</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_list_token_1a9003dd872c19760212536f6197d70f51">ListToken::addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00263"/>00263 {
<anchor xml:id="__token_8cpp_source_1l00264"/>00264 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_template_token_1a4f803a24960bab2671effe0c746d1b8e">TemplateToken::addTokens</link>(tl,&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>))&#32;{
<anchor xml:id="__token_8cpp_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_m_p_k_token_1a9a5cbbc3269d1601a414e3dd25bfeb63">MPKToken::addTokens</link>(tl,&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>);
<anchor xml:id="__token_8cpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00268"/>00268 }
<anchor xml:id="__token_8cpp_source_1l00269"/>00269 
<anchor xml:id="__token_8cpp_source_1l00270"/><link linkend="_class_template_token_1a6fa9056c91c1a555678b264f4e3e7508">00270</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1a6fa9056c91c1a555678b264f4e3e7508">TemplateToken::addNumber</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_template_token_1ac4146f0f59ba02482abb40679265e21d">addType</link>({&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a53f93baa3057821107c750323892fa92">DataType::INT</link>,<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6ae738c26bf4ce1037fa81b039a915cbf6">DataType::FLOAT</link>&#32;},tl,<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>);
<anchor xml:id="__token_8cpp_source_1l00272"/>00272 }
<anchor xml:id="__token_8cpp_source_1l00273"/>00273 
<anchor xml:id="__token_8cpp_source_1l00274"/><link linkend="_class_p_k_token_1ae1cc35c4987621ced09326fe94d07e88">00274</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1ae1cc35c4987621ced09326fe94d07e88">PKToken::addNumber</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_p_k_token_1ae8d5672d16cc994d3d0d3f73e240cec4">addType</link>({&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a53f93baa3057821107c750323892fa92">DataType::INT</link>,<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6ae738c26bf4ce1037fa81b039a915cbf6">DataType::FLOAT</link>&#32;},tl,tRes);
<anchor xml:id="__token_8cpp_source_1l00276"/>00276 }
<anchor xml:id="__token_8cpp_source_1l00277"/>00277 
<anchor xml:id="__token_8cpp_source_1l00278"/>00278 
<anchor xml:id="__token_8cpp_source_1l00279"/><link linkend="_class_p_k_token_1a6161b28490f22a80ba2898bcc3fab9d8">00279</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1a6161b28490f22a80ba2898bcc3fab9d8">PKToken::addToken</link>(<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;tVal,&#32;<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!tl.<link linkend="_class_iterator_list_1a2ebc1118094754b7d333b0a9d257d12b">ended</link>())&#32;{
<anchor xml:id="__token_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;elem&#32;=&#32;tl.<link linkend="_class_iterator_list_1a4acf162e4a194bddd3c2fe26b073f45a">currentToken</link>();
<anchor xml:id="__token_8cpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(elem-&gt;getValue()==tVal)&#32;{
<anchor xml:id="__token_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tl.<link linkend="_class_iterator_list_1af5c370ccb8698e2a9fb0714782d57203">next</link>();
<anchor xml:id="__token_8cpp_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;elem-&gt;addTokens(tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00286"/>00286 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_token_1ade47ed51e2f495f6d847c1bff9fe8db6">addError</link>(tRes,tVal);
<anchor xml:id="__token_8cpp_source_1l00288"/>00288 }
<anchor xml:id="__token_8cpp_source_1l00289"/><link linkend="_class_template_token_1a3d79f7926bda1d8b49a3f12d6ff615b0">00289</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1a3d79f7926bda1d8b49a3f12d6ff615b0">TemplateToken::addToken</link>(<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;tVal,&#32;<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!tl.<link linkend="_class_iterator_list_1a2ebc1118094754b7d333b0a9d257d12b">ended</link>())&#32;{
<anchor xml:id="__token_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;elem&#32;=&#32;tl.<link linkend="_class_iterator_list_1a4acf162e4a194bddd3c2fe26b073f45a">currentToken</link>();
<anchor xml:id="__token_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(elem-&gt;getValue()&#32;==&#32;tVal)&#32;{
<anchor xml:id="__token_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;elem-&gt;addTokens(tl,&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>);
<anchor xml:id="__token_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_template_token_1ad981d8ad4aeb0162d344d334ff3ac0f3">addError</link>(<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>,&#32;tVal);
<anchor xml:id="__token_8cpp_source_1l00297"/>00297 }
<anchor xml:id="__token_8cpp_source_1l00298"/>00298 
<anchor xml:id="__token_8cpp_source_1l00299"/><link linkend="_class_p_k_token_1ae8d5672d16cc994d3d0d3f73e240cec4">00299</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1ae8d5672d16cc994d3d0d3f73e240cec4">PKToken::addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;tVal,&#32;<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00300"/>00300 {
<anchor xml:id="__token_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!tl.<link linkend="_class_iterator_list_1a2ebc1118094754b7d333b0a9d257d12b">ended</link>())&#32;{
<anchor xml:id="__token_8cpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;elem&#32;=&#32;tl.<link linkend="_class_iterator_list_1a4acf162e4a194bddd3c2fe26b073f45a">currentToken</link>();
<anchor xml:id="__token_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(elem-&gt;getDataType(tRes)&#32;==&#32;tVal)&#32;{
<anchor xml:id="__token_8cpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;elem-&gt;addTokens(tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_token_1ade47ed51e2f495f6d847c1bff9fe8db6">addError</link>(tRes,&#32;tVal);
<anchor xml:id="__token_8cpp_source_1l00308"/>00308 }
<anchor xml:id="__token_8cpp_source_1l00309"/><link linkend="_class_p_k_token_1addbc260740c6abb048dbe063fc52eb67">00309</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1ae8d5672d16cc994d3d0d3f73e240cec4">PKToken::addType</link>(std::vector&lt;DataType&gt;&#32;listTypes,&#32;<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00310"/>00310 {
<anchor xml:id="__token_8cpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;t&#32;:&#32;listTypes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_p_k_token_1ae8d5672d16cc994d3d0d3f73e240cec4">addType</link>(t,&#32;tl,&#32;tRes))<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00315"/>00315 }
<anchor xml:id="__token_8cpp_source_1l00316"/>00316 
<anchor xml:id="__token_8cpp_source_1l00317"/><link linkend="_class_template_token_1ac4146f0f59ba02482abb40679265e21d">00317</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1ac4146f0f59ba02482abb40679265e21d">TemplateToken::addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;tVal,&#32;<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00318"/>00318 {
<anchor xml:id="__token_8cpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!tl.<link linkend="_class_iterator_list_1a2ebc1118094754b7d333b0a9d257d12b">ended</link>())&#32;{
<anchor xml:id="__token_8cpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;elem&#32;=&#32;tl.<link linkend="_class_iterator_list_1a4acf162e4a194bddd3c2fe26b073f45a">currentToken</link>();
<anchor xml:id="__token_8cpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(elem-&gt;getDataType(<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>)&#32;==&#32;tVal)&#32;{
<anchor xml:id="__token_8cpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;elem-&gt;addTokens(tl,&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>);
<anchor xml:id="__token_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_template_token_1ad981d8ad4aeb0162d344d334ff3ac0f3">addError</link>(<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>,&#32;tVal);
<anchor xml:id="__token_8cpp_source_1l00326"/>00326 }
<anchor xml:id="__token_8cpp_source_1l00327"/><link linkend="_class_template_token_1a23f3e763a82c043ee0e4e211680eab24">00327</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1ac4146f0f59ba02482abb40679265e21d">TemplateToken::addType</link>(std::vector&lt;DataType&gt;&#32;listTypes,&#32;<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00328"/>00328 {
<anchor xml:id="__token_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;t&#32;:&#32;listTypes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_template_token_1ac4146f0f59ba02482abb40679265e21d">addType</link>(t,&#32;tl,&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>))<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00333"/>00333 }
<anchor xml:id="__token_8cpp_source_1l00334"/>00334 
<anchor xml:id="__token_8cpp_source_1l00335"/><link linkend="_class_p_k_token_1abcee4a278fbc864a01ce17a7fe2871b7">00335</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1abcee4a278fbc864a01ce17a7fe2871b7">PKToken::addDataType</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_p_k_token_1ae8d5672d16cc994d3d0d3f73e240cec4">addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a02ff2101e64dbed6c34c715aa8d5cfea">DataType::DATATYPE</link>,&#32;tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00337"/>00337 }
<anchor xml:id="__token_8cpp_source_1l00338"/><link linkend="_class_p_k_token_1a93e03c8505eb71b40a996f895ea0a8a1">00338</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1a93e03c8505eb71b40a996f895ea0a8a1">PKToken::addInteger</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_p_k_token_1ae8d5672d16cc994d3d0d3f73e240cec4">addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a53f93baa3057821107c750323892fa92">DataType::INT</link>,&#32;tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00340"/>00340 }
<anchor xml:id="__token_8cpp_source_1l00341"/>00341 
<anchor xml:id="__token_8cpp_source_1l00342"/><link linkend="_class_p_k_token_1ac1c11a5ce856f6705bec792cb9417f16">00342</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1ac1c11a5ce856f6705bec792cb9417f16">PKToken::addFloat</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_p_k_token_1ae8d5672d16cc994d3d0d3f73e240cec4">addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6ae738c26bf4ce1037fa81b039a915cbf6">DataType::FLOAT</link>,&#32;tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00344"/>00344 }
<anchor xml:id="__token_8cpp_source_1l00345"/>00345 
<anchor xml:id="__token_8cpp_source_1l00346"/><link linkend="_class_p_k_token_1a00080a1fa3e1ff14ff53f523acf09770">00346</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1a00080a1fa3e1ff14ff53f523acf09770">PKToken::addCoord</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_p_k_token_1ae8d5672d16cc994d3d0d3f73e240cec4">addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a6a977bf6454341ccb0b79c3d0900db91">DataType::COORD</link>,&#32;tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00348"/>00348 }
<anchor xml:id="__token_8cpp_source_1l00349"/>00349 
<anchor xml:id="__token_8cpp_source_1l00350"/><link linkend="_class_p_k_token_1a32ca841c2a6ae8e213d15babbc4a27f9">00350</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1a32ca841c2a6ae8e213d15babbc4a27f9">PKToken::addZone</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_p_k_token_1ae8d5672d16cc994d3d0d3f73e240cec4">addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a1d23cac77df97a722cd2ec7767a06e06">DataType::ZONE</link>,&#32;tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00352"/>00352 }
<anchor xml:id="__token_8cpp_source_1l00353"/>00353 
<anchor xml:id="__token_8cpp_source_1l00354"/><link linkend="_class_p_k_token_1a6cf23e694a6bf9e4c08a72d3cc48d899">00354</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1a6cf23e694a6bf9e4c08a72d3cc48d899">PKToken::addString</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00355"/>00355 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_p_k_token_1ae8d5672d16cc994d3d0d3f73e240cec4">addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a63b588d5559f64f89a416e656880b949">DataType::STRING</link>,&#32;tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00356"/>00356 }
<anchor xml:id="__token_8cpp_source_1l00357"/>00357 
<anchor xml:id="__token_8cpp_source_1l00358"/><link linkend="_class_p_k_token_1a9bd07a9eaf2728560d1aa29bcc13bba9">00358</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1a9bd07a9eaf2728560d1aa29bcc13bba9">PKToken::addComma</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_p_k_token_1a6161b28490f22a80ba2898bcc3fab9d8">addToken</link>(<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca4d9b3e9fc12849d060371eb65154c751">TokenVALUE::COMMA</link>,&#32;tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00360"/>00360 }
<anchor xml:id="__token_8cpp_source_1l00361"/>00361 
<anchor xml:id="__token_8cpp_source_1l00362"/><link linkend="_class_p_k_token_1abf2772818107f39c995f40f698630539">00362</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1abf2772818107f39c995f40f698630539">PKToken::addTimeType</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_p_k_token_1ae8d5672d16cc994d3d0d3f73e240cec4">addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6af03689713d1683f6872267046e6de33c">DataType::TIMETYPE</link>,&#32;tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00364"/>00364 }
<anchor xml:id="__token_8cpp_source_1l00365"/>00365 
<anchor xml:id="__token_8cpp_source_1l00366"/><link linkend="_class_p_k_token_1a62f5f46f8befb663543c117d6ed92fc9">00366</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1a62f5f46f8befb663543c117d6ed92fc9">PKToken::addBool</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_p_k_token_1ae8d5672d16cc994d3d0d3f73e240cec4">addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6aa97b2c144243b2b9d2c593ec268b62f5">DataType::BOOL</link>,&#32;tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00368"/>00368 }
<anchor xml:id="__token_8cpp_source_1l00369"/>00369 
<anchor xml:id="__token_8cpp_source_1l00370"/><link linkend="_class_p_k_token_1aa0d39255200f157dcead5e02815c0345">00370</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1aa0d39255200f157dcead5e02815c0345">PKToken::addOp</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00371"/>00371 {
<anchor xml:id="__token_8cpp_source_1l00372"/>00372 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_p_k_token_1a6161b28490f22a80ba2898bcc3fab9d8">addToken</link>(<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46caab5f2c1029696d0fa27db2acf531e951">TokenVALUE::OPENPARENTHESIS</link>,&#32;tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00373"/>00373 }
<anchor xml:id="__token_8cpp_source_1l00374"/>00374 
<anchor xml:id="__token_8cpp_source_1l00375"/><link linkend="_class_p_k_token_1a2a1e90c3b769f9125740c05de9da7499">00375</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1a2a1e90c3b769f9125740c05de9da7499">PKToken::addCp</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00376"/>00376 {
<anchor xml:id="__token_8cpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_p_k_token_1a6161b28490f22a80ba2898bcc3fab9d8">addToken</link>(<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46cab658c0ab7888b812782bb032dbf4815c">TokenVALUE::CLOSEPARENTHESIS</link>,&#32;tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00378"/>00378 }
<anchor xml:id="__token_8cpp_source_1l00379"/>00379 
<anchor xml:id="__token_8cpp_source_1l00380"/><link linkend="_class_template_token_1ae5409c200682323bbd3ab7952ef4b4f5">00380</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1ae5409c200682323bbd3ab7952ef4b4f5">TemplateToken::addDataType</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_template_token_1ac4146f0f59ba02482abb40679265e21d">addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a02ff2101e64dbed6c34c715aa8d5cfea">DataType::DATATYPE</link>,&#32;tl,&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>);
<anchor xml:id="__token_8cpp_source_1l00382"/>00382 }
<anchor xml:id="__token_8cpp_source_1l00383"/><link linkend="_class_template_token_1a96ca35999c1a6551e66bb77922cac8aa">00383</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1a96ca35999c1a6551e66bb77922cac8aa">TemplateToken::addInteger</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_template_token_1ac4146f0f59ba02482abb40679265e21d">addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a53f93baa3057821107c750323892fa92">DataType::INT</link>,&#32;tl,&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>);
<anchor xml:id="__token_8cpp_source_1l00385"/>00385 }
<anchor xml:id="__token_8cpp_source_1l00386"/>00386 
<anchor xml:id="__token_8cpp_source_1l00387"/><link linkend="_class_template_token_1a8d9b343f2012524731d7cc7d657b30bc">00387</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1a8d9b343f2012524731d7cc7d657b30bc">TemplateToken::addFloat</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00388"/>00388 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_template_token_1ac4146f0f59ba02482abb40679265e21d">addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6ae738c26bf4ce1037fa81b039a915cbf6">DataType::FLOAT</link>,&#32;tl,&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>);
<anchor xml:id="__token_8cpp_source_1l00389"/>00389 }
<anchor xml:id="__token_8cpp_source_1l00390"/>00390 
<anchor xml:id="__token_8cpp_source_1l00391"/><link linkend="_class_template_token_1aaffa06b318ca9e8b874a6598d721e424">00391</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1aaffa06b318ca9e8b874a6598d721e424">TemplateToken::addCoord</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_template_token_1ac4146f0f59ba02482abb40679265e21d">addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a6a977bf6454341ccb0b79c3d0900db91">DataType::COORD</link>,&#32;tl,&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>);
<anchor xml:id="__token_8cpp_source_1l00393"/>00393 }
<anchor xml:id="__token_8cpp_source_1l00394"/>00394 
<anchor xml:id="__token_8cpp_source_1l00395"/><link linkend="_class_template_token_1a277108b785df33d49c4957aaf14d7935">00395</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1a277108b785df33d49c4957aaf14d7935">TemplateToken::addZone</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00396"/>00396 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_template_token_1ac4146f0f59ba02482abb40679265e21d">addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a1d23cac77df97a722cd2ec7767a06e06">DataType::ZONE</link>,&#32;tl,&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>);
<anchor xml:id="__token_8cpp_source_1l00397"/>00397 }
<anchor xml:id="__token_8cpp_source_1l00398"/>00398 
<anchor xml:id="__token_8cpp_source_1l00399"/><link linkend="_class_template_token_1adb300eb290123fa430ce7aaff136a46d">00399</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1adb300eb290123fa430ce7aaff136a46d">TemplateToken::addString</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_template_token_1ac4146f0f59ba02482abb40679265e21d">addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a63b588d5559f64f89a416e656880b949">DataType::STRING</link>,&#32;tl,&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>);
<anchor xml:id="__token_8cpp_source_1l00401"/>00401 }
<anchor xml:id="__token_8cpp_source_1l00402"/><link linkend="_class_template_token_1a0564dddc4f77b9d92efd80c1f6bab565">00402</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1a0564dddc4f77b9d92efd80c1f6bab565">TemplateToken::addComma</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00403"/>00403 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_template_token_1a3d79f7926bda1d8b49a3f12d6ff615b0">addToken</link>(<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca4d9b3e9fc12849d060371eb65154c751">TokenVALUE::COMMA</link>,&#32;tl,&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>);
<anchor xml:id="__token_8cpp_source_1l00404"/>00404 }
<anchor xml:id="__token_8cpp_source_1l00405"/>00405 
<anchor xml:id="__token_8cpp_source_1l00406"/><link linkend="_class_template_token_1aa3148f8f737edb75778c19616148ee48">00406</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1aa3148f8f737edb75778c19616148ee48">TemplateToken::addTimeType</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_template_token_1ac4146f0f59ba02482abb40679265e21d">addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6af03689713d1683f6872267046e6de33c">DataType::TIMETYPE</link>,&#32;tl,&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>);
<anchor xml:id="__token_8cpp_source_1l00408"/>00408 }
<anchor xml:id="__token_8cpp_source_1l00409"/>00409 
<anchor xml:id="__token_8cpp_source_1l00410"/><link linkend="_class_template_token_1a6eb3afbfb157bc54af838a654d570d00">00410</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1a6eb3afbfb157bc54af838a654d570d00">TemplateToken::addBool</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_template_token_1ac4146f0f59ba02482abb40679265e21d">addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6aa97b2c144243b2b9d2c593ec268b62f5">DataType::BOOL</link>,&#32;tl,&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>);
<anchor xml:id="__token_8cpp_source_1l00412"/>00412 }
<anchor xml:id="__token_8cpp_source_1l00413"/>00413 
<anchor xml:id="__token_8cpp_source_1l00414"/><link linkend="_class_template_token_1abb2f4c81dfdde0b3579d039279191d0a">00414</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1abb2f4c81dfdde0b3579d039279191d0a">TemplateToken::addIdentifier</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00415"/>00415 {
<anchor xml:id="__token_8cpp_source_1l00416"/>00416 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_template_token_1a3d79f7926bda1d8b49a3f12d6ff615b0">addToken</link>(<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca6fcc416051346daca31c571646af127a">TokenVALUE::IDENTIFIER</link>,tl,<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>);
<anchor xml:id="__token_8cpp_source_1l00417"/>00417 }
<anchor xml:id="__token_8cpp_source_1l00418"/>00418 
<anchor xml:id="__token_8cpp_source_1l00419"/>00419 
<anchor xml:id="__token_8cpp_source_1l00420"/>00420 
<anchor xml:id="__token_8cpp_source_1l00421"/>00421 
<anchor xml:id="__token_8cpp_source_1l00422"/>00422 
<anchor xml:id="__token_8cpp_source_1l00423"/><link linkend="_class_identifier_token_1a2998f6143008f3133e60a0cd997c255c">00423</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_identifier_token_1a2998f6143008f3133e60a0cd997c255c">IdentifierToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00424"/>00424 {
<anchor xml:id="__token_8cpp_source_1l00425"/>00425 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;map=tRes.<link linkend="_class_token_result_1a9dd11c802bde0c755168f74b134e5cbc">getVarTable</link>();
<anchor xml:id="__token_8cpp_source_1l00426"/>00426 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;elem&#32;=&#32;map.find(<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>);
<anchor xml:id="__token_8cpp_source_1l00427"/>00427 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(elem&#32;!=&#32;map.end())<emphasis role="keywordflow">return</emphasis>&#32;elem-&gt;second;
<anchor xml:id="__token_8cpp_source_1l00428"/>00428 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6ab50339a10e1de285ac99d4c3990b8693">DataType::NONE</link>;
<anchor xml:id="__token_8cpp_source_1l00429"/>00429 }
<anchor xml:id="__token_8cpp_source_1l00430"/>00430 
<anchor xml:id="__token_8cpp_source_1l00431"/><link linkend="_class_p_k_token_1a97e1183958a6dabeb6652340bfe4a1f7">00431</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_p_k_token_1a97e1183958a6dabeb6652340bfe4a1f7">PKToken::addIdentifier</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00432"/>00432 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_p_k_token_1a6161b28490f22a80ba2898bcc3fab9d8">addToken</link>(<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca6fcc416051346daca31c571646af127a">TokenVALUE::IDENTIFIER</link>,&#32;tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00433"/>00433 }
<anchor xml:id="__token_8cpp_source_1l00434"/>00434 
<anchor xml:id="__token_8cpp_source_1l00435"/><link linkend="__token_8cpp_1a3f320bc2cacb0801375f7148d89f9094">00435</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__token_8cpp_1a3f320bc2cacb0801375f7148d89f9094">isValue</link>(std::shared_ptr&lt;Token&gt;&#32;token,<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;token-&gt;getDataType(tRes)&#32;!=&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6ab50339a10e1de285ac99d4c3990b8693">DataType::NONE</link>;
<anchor xml:id="__token_8cpp_source_1l00437"/>00437 }
<anchor xml:id="__token_8cpp_source_1l00438"/>00438 
<anchor xml:id="__token_8cpp_source_1l00439"/><link linkend="__token_8cpp_1aeae120e34ddae125123ab27fd7a2eeb3">00439</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="__token_8cpp_1aeae120e34ddae125123ab27fd7a2eeb3">isType</link>(std::shared_ptr&lt;Token&gt;&#32;token)&#32;{
<anchor xml:id="__token_8cpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::unordered_set&lt;TokenVALUE&gt;&#32;validTypes&#32;=&#32;{
<anchor xml:id="__token_8cpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca5d5cd46919fa987731fb2edefe0f2a0c">TokenVALUE::INTEGER</link>,&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46cae738c26bf4ce1037fa81b039a915cbf6">TokenVALUE::FLOAT</link>,&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46caa97b2c144243b2b9d2c593ec268b62f5">TokenVALUE::BOOL</link>,
<anchor xml:id="__token_8cpp_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca6a977bf6454341ccb0b79c3d0900db91">TokenVALUE::COORD</link>,&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca1d23cac77df97a722cd2ec7767a06e06">TokenVALUE::ZONE</link>,&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca823d5f6b867f6d6adec93ad4999bae9f">TokenVALUE::DIRECTION</link>,
<anchor xml:id="__token_8cpp_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca63b588d5559f64f89a416e656880b949">TokenVALUE::STRING</link>
<anchor xml:id="__token_8cpp_source_1l00444"/>00444 &#32;&#32;&#32;&#32;};
<anchor xml:id="__token_8cpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;validTypes.count(token-&gt;getValue())&#32;&gt;&#32;0;
<anchor xml:id="__token_8cpp_source_1l00446"/>00446 }
<anchor xml:id="__token_8cpp_source_1l00447"/>00447 
<anchor xml:id="__token_8cpp_source_1l00448"/><link linkend="_class_store_token_1ad522e07a350fe2a104fb6de9fa21e70b">00448</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_store_token_1ad522e07a350fe2a104fb6de9fa21e70b">StoreToken::addValue</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&#32;tRes)&#32;{
<anchor xml:id="__token_8cpp_source_1l00449"/>00449 &#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(!tl.ended())&#32;{</emphasis>
<anchor xml:id="__token_8cpp_source_1l00450"/>00450 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;auto&#32;elem&#32;=&#32;tl.currentToken();</emphasis>
<anchor xml:id="__token_8cpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;auto&#32;res&#32;=&#32;elem-&gt;addTokens(tl,&#32;tRes);</emphasis>
<anchor xml:id="__token_8cpp_source_1l00452"/>00452 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;if&#32;(res.success())&#32;{</emphasis>
<anchor xml:id="__token_8cpp_source_1l00453"/>00453 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(isValue(elem))&#32;{</emphasis>
<anchor xml:id="__token_8cpp_source_1l00454"/>00454 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;valueToken&#32;=&#32;elem;</emphasis>
<anchor xml:id="__token_8cpp_source_1l00455"/>00455 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tRes.addVar(identifierToken-&gt;getTokenText(),&#32;valueToken-&gt;getDataType());</emphasis>
<anchor xml:id="__token_8cpp_source_1l00456"/>00456 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;elem;</emphasis>
<anchor xml:id="__token_8cpp_source_1l00457"/>00457 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__token_8cpp_source_1l00458"/>00458 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="__token_8cpp_source_1l00459"/>00459 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;else&#32;updateRes(res);</emphasis>
<anchor xml:id="__token_8cpp_source_1l00460"/>00460 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;elem;</emphasis>
<anchor xml:id="__token_8cpp_source_1l00461"/>00461 &#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__token_8cpp_source_1l00462"/>00462 &#32;&#32;&#32;&#32;<emphasis role="comment">//addError(TokenVALUE::INTEGER);</emphasis>
<anchor xml:id="__token_8cpp_source_1l00463"/>00463 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00464"/>00464 }
<anchor xml:id="__token_8cpp_source_1l00465"/>00465 
<anchor xml:id="__token_8cpp_source_1l00466"/>00466 
<anchor xml:id="__token_8cpp_source_1l00467"/>00467 
<anchor xml:id="__token_8cpp_source_1l00468"/><link linkend="_class_flow_token_1a1bbf1118c555638aca5acb0e758f8c87">00468</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_flow_token_1a1bbf1118c555638aca5acb0e758f8c87">FlowToken::addCb</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00469"/>00469 {
<anchor xml:id="__token_8cpp_source_1l00470"/>00470 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_flow_token_1adca9213b63d564c72ec40a97f0af8210">addToken</link>(<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46caf62b7b10a36ac4ff1386de6dc9c3ec13">TokenVALUE::CLOSEBRACKETS</link>,&#32;tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00471"/>00471 }
<anchor xml:id="__token_8cpp_source_1l00472"/>00472 
<anchor xml:id="__token_8cpp_source_1l00473"/><link linkend="_class_flow_token_1adf13c232a8b5279ae0027df6859fdd12">00473</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_flow_token_1adf13c232a8b5279ae0027df6859fdd12">FlowToken::addNestedTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00474"/>00474 {
<anchor xml:id="__token_8cpp_source_1l00475"/>00475 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!tl.<link linkend="_class_iterator_list_1a2ebc1118094754b7d333b0a9d257d12b">ended</link>())&#32;{
<anchor xml:id="__token_8cpp_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;elem&#32;=&#32;tl.<link linkend="_class_iterator_list_1a4acf162e4a194bddd3c2fe26b073f45a">currentToken</link>();
<anchor xml:id="__token_8cpp_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(elem-&gt;hasValue(<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46caf62b7b10a36ac4ff1386de6dc9c3ec13">TokenVALUE::CLOSEBRACKETS</link>))&#32;{
<anchor xml:id="__token_8cpp_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_flow_token_1a1bbf1118c555638aca5acb0e758f8c87">addCb</link>(tl,tRes);
<anchor xml:id="__token_8cpp_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__token_8cpp_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(elem-&gt;addTokens(tl,&#32;tRes))&#32;{
<anchor xml:id="__token_8cpp_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_flow_token_1a983bda19879009577e51360d9bdc93da">nestedTokens</link>.push_back(elem);
<anchor xml:id="__token_8cpp_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00485"/>00485 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00486"/>00486 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_flow_token_1a3a3cb964ee95cd5e565a009e4d6aabca">addError</link>(tRes,&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46caf62b7b10a36ac4ff1386de6dc9c3ec13">TokenVALUE::CLOSEBRACKETS</link>);
<anchor xml:id="__token_8cpp_source_1l00487"/>00487 }
<anchor xml:id="__token_8cpp_source_1l00488"/>00488 
<anchor xml:id="__token_8cpp_source_1l00489"/><link linkend="_class_flow_token_1abb30bac4dada1a3372776680719d517c">00489</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_flow_token_1abb30bac4dada1a3372776680719d517c">FlowToken::addBody</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00490"/>00490 {
<anchor xml:id="__token_8cpp_source_1l00491"/>00491 &#32;&#32;&#32;&#32;<emphasis role="comment">//no&#32;tl.next()&#32;because&#32;there&apos;s&#32;no&#32;keyword</emphasis>
<anchor xml:id="__token_8cpp_source_1l00492"/>00492 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_flow_token_1a7403770ae8bbe3efb6ec95608a5318be">addOb</link>(tl,tRes))&#32;{
<anchor xml:id="__token_8cpp_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_flow_token_1adf13c232a8b5279ae0027df6859fdd12">addNestedTokens</link>(tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l00494"/>00494 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00495"/>00495 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00496"/>00496 }
<anchor xml:id="__token_8cpp_source_1l00497"/>00497 
<anchor xml:id="__token_8cpp_source_1l00498"/><link linkend="_class_flow_token_1a7403770ae8bbe3efb6ec95608a5318be">00498</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_flow_token_1a7403770ae8bbe3efb6ec95608a5318be">FlowToken::addOb</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00499"/>00499 {
<anchor xml:id="__token_8cpp_source_1l00500"/>00500 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!tl.<link linkend="_class_iterator_list_1a2ebc1118094754b7d333b0a9d257d12b">ended</link>())&#32;{
<anchor xml:id="__token_8cpp_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;elem&#32;=&#32;tl.<link linkend="_class_iterator_list_1a4acf162e4a194bddd3c2fe26b073f45a">currentToken</link>();
<anchor xml:id="__token_8cpp_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(elem-&gt;hasValue(&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca56d9d72077d098fe411d4f715c339e92">TokenVALUE::OPENBRACKETS</link>))&#32;{
<anchor xml:id="__token_8cpp_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tl.<link linkend="_class_iterator_list_1af5c370ccb8698e2a9fb0714782d57203">next</link>();
<anchor xml:id="__token_8cpp_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00506"/>00506 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00507"/>00507 &#32;&#32;&#32;&#32;<link linkend="_class_flow_token_1a3a3cb964ee95cd5e565a009e4d6aabca">addError</link>(tRes,<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca56d9d72077d098fe411d4f715c339e92">TokenVALUE::OPENBRACKETS</link>);
<anchor xml:id="__token_8cpp_source_1l00508"/>00508 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00509"/>00509 }
<anchor xml:id="__token_8cpp_source_1l00510"/>00510 
<anchor xml:id="__token_8cpp_source_1l00511"/>00511 
<anchor xml:id="__token_8cpp_source_1l00512"/>00512 
<anchor xml:id="__token_8cpp_source_1l00513"/><link linkend="_class_flow_p_k_token_1abeff75e4199efaa80fe90f23efd06865">00513</link> <link linkend="_class_flow_p_k_token_1abeff75e4199efaa80fe90f23efd06865">FlowPKToken::FlowPKToken</link>()&#32;:<link linkend="_class_p_k_token">PKToken</link>(),&#32;<link linkend="_class_flow_token">FlowToken</link>(line)
<anchor xml:id="__token_8cpp_source_1l00514"/>00514 {
<anchor xml:id="__token_8cpp_source_1l00515"/>00515 
<anchor xml:id="__token_8cpp_source_1l00516"/>00516 }
<anchor xml:id="__token_8cpp_source_1l00517"/>00517 
<anchor xml:id="__token_8cpp_source_1l00518"/>00518 
<anchor xml:id="__token_8cpp_source_1l00519"/>00519 
<anchor xml:id="__token_8cpp_source_1l00520"/>00520 
<anchor xml:id="__token_8cpp_source_1l00521"/>00521 
<anchor xml:id="__token_8cpp_source_1l00522"/><link linkend="_class_flow_k_token_1a1520ab9f311f4f2a5dc06189f7349d07">00522</link> <link linkend="_class_flow_k_token_1a1520ab9f311f4f2a5dc06189f7349d07">FlowKToken::FlowKToken</link>()&#32;:<link linkend="_class_k_token">KToken</link>(),&#32;<link linkend="_class_flow_token">FlowToken</link>(line)
<anchor xml:id="__token_8cpp_source_1l00523"/>00523 {
<anchor xml:id="__token_8cpp_source_1l00524"/>00524 
<anchor xml:id="__token_8cpp_source_1l00525"/>00525 }
<anchor xml:id="__token_8cpp_source_1l00526"/>00526 
<anchor xml:id="__token_8cpp_source_1l00527"/><link linkend="_class_flow_k_token_1a0fdf55d3a11ad097700e6de32c8ede96">00527</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_flow_k_token_1a0fdf55d3a11ad097700e6de32c8ede96">FlowKToken::showTokenTree</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nestedLayer)
<anchor xml:id="__token_8cpp_source_1l00528"/>00528 {
<anchor xml:id="__token_8cpp_source_1l00529"/>00529 &#32;&#32;&#32;&#32;<link linkend="_class_token_1abd61b776070d98e2e1b748831a8ae85e">Token::showTokenTree</link>(nestedLayer);
<anchor xml:id="__token_8cpp_source_1l00530"/>00530 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;openBracketsP&#32;+&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00531"/>00531 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;elem&#32;:&#32;<link linkend="_class_flow_token_1a983bda19879009577e51360d9bdc93da">nestedTokens</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;elem-&gt;showTokenTree(nestedLayer+1);
<anchor xml:id="__token_8cpp_source_1l00533"/>00533 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00534"/>00534 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;closeBracketsP&#32;+&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00535"/>00535 
<anchor xml:id="__token_8cpp_source_1l00536"/>00536 }
<anchor xml:id="__token_8cpp_source_1l00537"/>00537 
<anchor xml:id="__token_8cpp_source_1l00538"/>00538 
<anchor xml:id="__token_8cpp_source_1l00539"/>00539 
<anchor xml:id="__token_8cpp_source_1l00540"/><link linkend="_class_flow_p_k_token_1a0304d54103cabfd59b980cc9e999bac6">00540</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_flow_p_k_token_1a0304d54103cabfd59b980cc9e999bac6">FlowPKToken::showTokenTree</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nestedLayer)
<anchor xml:id="__token_8cpp_source_1l00541"/>00541 {
<anchor xml:id="__token_8cpp_source_1l00542"/>00542 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a53a1431d31066e66aac1c2ea99245c0a">PKToken::showTokenTree</link>(nestedLayer);
<anchor xml:id="__token_8cpp_source_1l00543"/>00543 &#32;&#32;&#32;&#32;<link linkend="_class_flow_token_1a8998fbb1c5e25b91be1936ff7ecbdc88">FlowToken::showTokenTree</link>(nestedLayer);
<anchor xml:id="__token_8cpp_source_1l00544"/>00544 }
<anchor xml:id="__token_8cpp_source_1l00545"/>00545 
<anchor xml:id="__token_8cpp_source_1l00546"/>00546 
<anchor xml:id="__token_8cpp_source_1l00547"/><link linkend="__token_8cpp_1aa3e235e0cfc2dd090f76c893bbb5078c">00547</link> std::shared_ptr&lt;Token&gt;&#32;<link linkend="__token_8cpp_1aa3e235e0cfc2dd090f76c893bbb5078c">getStringLiteralToken</link>(std::string&amp;&#32;stringLiteral)&#32;{
<anchor xml:id="__token_8cpp_source_1l00548"/>00548 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;StringLiteralToken&gt;(stringLiteral);
<anchor xml:id="__token_8cpp_source_1l00549"/>00549 }
<anchor xml:id="__token_8cpp_source_1l00550"/>00550 
<anchor xml:id="__token_8cpp_source_1l00551"/>00551 
<anchor xml:id="__token_8cpp_source_1l00552"/>00552 
<anchor xml:id="__token_8cpp_source_1l00553"/><link linkend="_class_flow_c_k_token_1ae708c7fca0ffbbbd66b1b2c7983f5463">00553</link> <link linkend="_class_flow_c_k_token_1ae708c7fca0ffbbbd66b1b2c7983f5463">FlowCKToken::FlowCKToken</link>()&#32;:<link linkend="_class_c_k_token">CKToken</link>(),&#32;<link linkend="_class_flow_token">FlowToken</link>(line)
<anchor xml:id="__token_8cpp_source_1l00554"/>00554 {
<anchor xml:id="__token_8cpp_source_1l00555"/>00555 }
<anchor xml:id="__token_8cpp_source_1l00556"/>00556 
<anchor xml:id="__token_8cpp_source_1l00557"/>00557 
<anchor xml:id="__token_8cpp_source_1l00558"/>00558 
<anchor xml:id="__token_8cpp_source_1l00559"/>00559 
<anchor xml:id="__token_8cpp_source_1l00560"/><link linkend="_class_flow_c_k_token_1a7ae11748e61f332a8c987399804a67ca">00560</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_flow_c_k_token_1a7ae11748e61f332a8c987399804a67ca">FlowCKToken::addCondition</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00561"/>00561 {
<anchor xml:id="__token_8cpp_source_1l00562"/>00562 
<anchor xml:id="__token_8cpp_source_1l00563"/>00563 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!tl.<link linkend="_class_iterator_list_1a2ebc1118094754b7d333b0a9d257d12b">ended</link>())&#32;{
<anchor xml:id="__token_8cpp_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;elem&#32;=&#32;tl.<link linkend="_class_iterator_list_1a4acf162e4a194bddd3c2fe26b073f45a">currentToken</link>();
<anchor xml:id="__token_8cpp_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_p_k_token_1a62f5f46f8befb663543c117d6ed92fc9">addBool</link>(tl,&#32;tRes))&#32;{
<anchor xml:id="__token_8cpp_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_u_p_k_token_1a1c9dbf2a5f4096f4891d57ece8e97288">uniqueToken</link>&#32;=&#32;elem;
<anchor xml:id="__token_8cpp_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00569"/>00569 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00570"/>00570 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00571"/>00571 }
<anchor xml:id="__token_8cpp_source_1l00572"/>00572 
<anchor xml:id="__token_8cpp_source_1l00573"/>00573 
<anchor xml:id="__token_8cpp_source_1l00574"/>00574 
<anchor xml:id="__token_8cpp_source_1l00575"/><link linkend="_class_flow_c_k_token_1a697e625af9e4d7a142b87242d5179d3b">00575</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_flow_c_k_token_1a697e625af9e4d7a142b87242d5179d3b">FlowCKToken::showArguments</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nestedLayer)
<anchor xml:id="__token_8cpp_source_1l00576"/>00576 {
<anchor xml:id="__token_8cpp_source_1l00577"/>00577 &#32;&#32;&#32;&#32;<link linkend="_class_u_p_k_token_1a1c9dbf2a5f4096f4891d57ece8e97288">uniqueToken</link>-&gt;<link linkend="_class_flow_token_1a8998fbb1c5e25b91be1936ff7ecbdc88">showTokenTree</link>(nestedLayer);
<anchor xml:id="__token_8cpp_source_1l00578"/>00578 }
<anchor xml:id="__token_8cpp_source_1l00579"/>00579 
<anchor xml:id="__token_8cpp_source_1l00580"/>00580 
<anchor xml:id="__token_8cpp_source_1l00581"/>00581 
<anchor xml:id="__token_8cpp_source_1l00582"/>00582 
<anchor xml:id="__token_8cpp_source_1l00583"/>00583 
<anchor xml:id="__token_8cpp_source_1l00584"/>00584 
<anchor xml:id="__token_8cpp_source_1l00585"/><link linkend="_class_main_token_1a7903f95481d0b435c6f1f01b17695b40">00585</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_main_token_1a7903f95481d0b435c6f1f01b17695b40">MainToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l00586"/>00586 {
<anchor xml:id="__token_8cpp_source_1l00587"/>00587 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l00588"/>00588 }
<anchor xml:id="__token_8cpp_source_1l00589"/>00589 
<anchor xml:id="__token_8cpp_source_1l00590"/>00590 
<anchor xml:id="__token_8cpp_source_1l00591"/><link linkend="_class_do_loop_token_1adb97a09bf62c4d496cd2d693c9ed3cf9">00591</link> <link linkend="_class_do_loop_token_1adb97a09bf62c4d496cd2d693c9ed3cf9">DoLoopToken::DoLoopToken</link>():<link linkend="_class_flow_c_k_token">FlowCKToken</link>()
<anchor xml:id="__token_8cpp_source_1l00592"/>00592 {
<anchor xml:id="__token_8cpp_source_1l00593"/>00593 
<anchor xml:id="__token_8cpp_source_1l00594"/>00594 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca94682254f1edc02f9576916290a5fddd">TokenVALUE::DOLOOP</link>;
<anchor xml:id="__token_8cpp_source_1l00595"/>00595 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;doloopK;
<anchor xml:id="__token_8cpp_source_1l00596"/>00596 }
<anchor xml:id="__token_8cpp_source_1l00597"/>00597 
<anchor xml:id="__token_8cpp_source_1l00598"/><link linkend="_class_do_loop_token_1a98c55d62059c3f6d6956e6c52a249ee8">00598</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_do_loop_token_1a98c55d62059c3f6d6956e6c52a249ee8">DoLoopToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l00599"/>00599 {
<anchor xml:id="__token_8cpp_source_1l00600"/>00600 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l00601"/>00601 }
<anchor xml:id="__token_8cpp_source_1l00602"/>00602 
<anchor xml:id="__token_8cpp_source_1l00603"/><link linkend="_class_if_token_1acba71a2f073560d50a15417ce40b739c">00603</link> <link linkend="_class_if_token_1acba71a2f073560d50a15417ce40b739c">IfToken::IfToken</link>()&#32;:<link linkend="_class_flow_c_k_token">FlowCKToken</link>()
<anchor xml:id="__token_8cpp_source_1l00604"/>00604 {
<anchor xml:id="__token_8cpp_source_1l00605"/>00605 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46cade6ee2b5d856295add4d5e3631fbfb93">TokenVALUE::IF</link>;
<anchor xml:id="__token_8cpp_source_1l00606"/>00606 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;ifK;
<anchor xml:id="__token_8cpp_source_1l00607"/>00607 }
<anchor xml:id="__token_8cpp_source_1l00608"/>00608 
<anchor xml:id="__token_8cpp_source_1l00609"/>00609 
<anchor xml:id="__token_8cpp_source_1l00610"/><link linkend="_class_if_token_1ac6a6d93dfcadc5348593bcc2350834f5">00610</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_if_token_1ac6a6d93dfcadc5348593bcc2350834f5">IfToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l00611"/>00611 {
<anchor xml:id="__token_8cpp_source_1l00612"/>00612 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l00613"/>00613 }
<anchor xml:id="__token_8cpp_source_1l00614"/>00614 
<anchor xml:id="__token_8cpp_source_1l00615"/><link linkend="_class_else_token_1a41f4dc1b51e7bab3d583b0684b387879">00615</link> <link linkend="_class_else_token_1a41f4dc1b51e7bab3d583b0684b387879">ElseToken::ElseToken</link>()&#32;:<link linkend="_class_flow_k_token">FlowKToken</link>()
<anchor xml:id="__token_8cpp_source_1l00616"/>00616 {
<anchor xml:id="__token_8cpp_source_1l00617"/>00617 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca778537b0acce06229cb78d5f72c907ab">TokenVALUE::ELSE</link>;
<anchor xml:id="__token_8cpp_source_1l00618"/>00618 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;elseK;
<anchor xml:id="__token_8cpp_source_1l00619"/>00619 }
<anchor xml:id="__token_8cpp_source_1l00620"/>00620 
<anchor xml:id="__token_8cpp_source_1l00621"/><link linkend="_class_else_token_1a04c498b5b90ae54baec24cff3c93fa84">00621</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_else_token_1a04c498b5b90ae54baec24cff3c93fa84">ElseToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l00622"/>00622 {
<anchor xml:id="__token_8cpp_source_1l00623"/>00623 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l00624"/>00624 }
<anchor xml:id="__token_8cpp_source_1l00625"/>00625 
<anchor xml:id="__token_8cpp_source_1l00626"/><link linkend="_class_elif_token_1a877b2c5a0fc06e8d50b0a84adf0a848b">00626</link> <link linkend="_class_elif_token_1a877b2c5a0fc06e8d50b0a84adf0a848b">ElifToken::ElifToken</link>()&#32;:<link linkend="_class_flow_c_k_token">FlowCKToken</link>()
<anchor xml:id="__token_8cpp_source_1l00627"/>00627 {
<anchor xml:id="__token_8cpp_source_1l00628"/>00628 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca722462c878f454d0872804374ef77c95">TokenVALUE::ELIF</link>;
<anchor xml:id="__token_8cpp_source_1l00629"/>00629 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;elifK;
<anchor xml:id="__token_8cpp_source_1l00630"/>00630 }
<anchor xml:id="__token_8cpp_source_1l00631"/>00631 
<anchor xml:id="__token_8cpp_source_1l00632"/>00632 
<anchor xml:id="__token_8cpp_source_1l00633"/>00633 
<anchor xml:id="__token_8cpp_source_1l00634"/><link linkend="_class_elif_token_1a7d4b264b0c023e44f7edc2b5781482f7">00634</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_elif_token_1a7d4b264b0c023e44f7edc2b5781482f7">ElifToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l00635"/>00635 {
<anchor xml:id="__token_8cpp_source_1l00636"/>00636 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l00637"/>00637 }
<anchor xml:id="__token_8cpp_source_1l00638"/>00638 
<anchor xml:id="__token_8cpp_source_1l00639"/><link linkend="_class_loop_token_1a461d7fb8e702cd1af27236ef796c1491">00639</link> <link linkend="_class_loop_token_1a461d7fb8e702cd1af27236ef796c1491">LoopToken::LoopToken</link>()&#32;:<link linkend="_class_flow_c_k_token">FlowCKToken</link>()
<anchor xml:id="__token_8cpp_source_1l00640"/>00640 {
<anchor xml:id="__token_8cpp_source_1l00641"/>00641 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca9159b3578e4e1eb31ffdf90acd6f6e40">TokenVALUE::LOOP</link>;
<anchor xml:id="__token_8cpp_source_1l00642"/>00642 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;loopK;
<anchor xml:id="__token_8cpp_source_1l00643"/>00643 }
<anchor xml:id="__token_8cpp_source_1l00644"/>00644 
<anchor xml:id="__token_8cpp_source_1l00645"/><link linkend="_class_loop_token_1aaf2ed4676012f15ef2b551241f2957aa">00645</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_loop_token_1aaf2ed4676012f15ef2b551241f2957aa">LoopToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l00646"/>00646 {
<anchor xml:id="__token_8cpp_source_1l00647"/>00647 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l00648"/>00648 }
<anchor xml:id="__token_8cpp_source_1l00649"/>00649 
<anchor xml:id="__token_8cpp_source_1l00650"/><link linkend="_class_bool_token_1a230b4c663f336dfe394307a4f5eaf4c9">00650</link> <link linkend="_class_bool_token_1a230b4c663f336dfe394307a4f5eaf4c9">BoolToken::BoolToken</link>()&#32;:<link linkend="_class_c_k_token">CKToken</link>()
<anchor xml:id="__token_8cpp_source_1l00651"/>00651 {
<anchor xml:id="__token_8cpp_source_1l00652"/>00652 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46caa97b2c144243b2b9d2c593ec268b62f5">TokenVALUE::BOOL</link>;
<anchor xml:id="__token_8cpp_source_1l00653"/>00653 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;boolK;
<anchor xml:id="__token_8cpp_source_1l00654"/>00654 &#32;&#32;&#32;&#32;<link linkend="_class_c_k_token_1a826b592efb9b09d8f3110f134671ec4b">setOverloads</link>();
<anchor xml:id="__token_8cpp_source_1l00655"/>00655 }
<anchor xml:id="__token_8cpp_source_1l00656"/>00656 
<anchor xml:id="__token_8cpp_source_1l00657"/><link linkend="_class_bool_token_1a4023134033edc2d4df317ab3c52d5d0c">00657</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_bool_token_1a4023134033edc2d4df317ab3c52d5d0c">BoolToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00658"/>00658 {
<anchor xml:id="__token_8cpp_source_1l00659"/>00659 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6aa97b2c144243b2b9d2c593ec268b62f5">DataType::BOOL</link>;
<anchor xml:id="__token_8cpp_source_1l00660"/>00660 }
<anchor xml:id="__token_8cpp_source_1l00661"/>00661 
<anchor xml:id="__token_8cpp_source_1l00662"/><link linkend="_class_bool_token_1ae9094e6512fb1f196d3ee7b456556e69">00662</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_bool_token_1ae9094e6512fb1f196d3ee7b456556e69">BoolToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l00663"/>00663 {
<anchor xml:id="__token_8cpp_source_1l00664"/>00664 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l00665"/>00665 }
<anchor xml:id="__token_8cpp_source_1l00666"/>00666 
<anchor xml:id="__token_8cpp_source_1l00667"/><link linkend="_class_wait_token_1aba6c9c4c6466b72c1ff3a545feb10050">00667</link> <link linkend="_class_wait_token_1aba6c9c4c6466b72c1ff3a545feb10050">WaitToken::WaitToken</link>()&#32;:<link linkend="_class_m_p_k_token">MPKToken</link>()
<anchor xml:id="__token_8cpp_source_1l00668"/>00668 {
<anchor xml:id="__token_8cpp_source_1l00669"/>00669 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46cad5cc6a0064b5c25ba37826aa3fda910c">TokenVALUE::WAIT</link>;
<anchor xml:id="__token_8cpp_source_1l00670"/>00670 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;waitK;
<anchor xml:id="__token_8cpp_source_1l00671"/>00671 &#32;&#32;&#32;&#32;<link linkend="_class_wait_token_1ab8a24eb04c56c85111816352fcee3381">setOverloads</link>();
<anchor xml:id="__token_8cpp_source_1l00672"/>00672 }
<anchor xml:id="__token_8cpp_source_1l00673"/>00673 
<anchor xml:id="__token_8cpp_source_1l00674"/><link linkend="_class_wait_token_1ab8a24eb04c56c85111816352fcee3381">00674</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_wait_token_1ab8a24eb04c56c85111816352fcee3381">WaitToken::setOverloads</link>()
<anchor xml:id="__token_8cpp_source_1l00675"/>00675 {
<anchor xml:id="__token_8cpp_source_1l00676"/>00676 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>({&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a53f93baa3057821107c750323892fa92">DataType::INT</link>,<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6af03689713d1683f6872267046e6de33c">DataType::TIMETYPE</link>&#32;}),0);
<anchor xml:id="__token_8cpp_source_1l00677"/>00677 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>({&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6ae738c26bf4ce1037fa81b039a915cbf6">DataType::FLOAT</link>,<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6af03689713d1683f6872267046e6de33c">DataType::TIMETYPE</link>&#32;}),1);
<anchor xml:id="__token_8cpp_source_1l00678"/>00678 }
<anchor xml:id="__token_8cpp_source_1l00679"/>00679 
<anchor xml:id="__token_8cpp_source_1l00680"/><link linkend="_class_wait_token_1a639055be7ce0426127e3441ffcb28652">00680</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_wait_token_1a639055be7ce0426127e3441ffcb28652">WaitToken::dispatchArguments</link>()
<anchor xml:id="__token_8cpp_source_1l00681"/>00681 {
<anchor xml:id="__token_8cpp_source_1l00682"/>00682 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a1620cfd1f2662ca030c5caf9bc5f5777">getID</link>())&#32;{
<anchor xml:id="__token_8cpp_source_1l00683"/>00683 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
<anchor xml:id="__token_8cpp_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>.size()&#32;&gt;&#32;1)&#32;{
<anchor xml:id="__token_8cpp_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_wait_token_1aed3ec2a75d33295a16081a881b7ecad6">numberToken</link>&#32;=&#32;<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>.front();
<anchor xml:id="__token_8cpp_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_wait_token_1a63c9a4570f8bc923927db941bdbb4b80">timeTypeToken</link>&#32;=&#32;<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>.at(1);
<anchor xml:id="__token_8cpp_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00689"/>00689 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00690"/>00690 }
<anchor xml:id="__token_8cpp_source_1l00691"/>00691 
<anchor xml:id="__token_8cpp_source_1l00692"/>00692 
<anchor xml:id="__token_8cpp_source_1l00693"/>00693 
<anchor xml:id="__token_8cpp_source_1l00694"/><link linkend="_class_wait_token_1afdc303d17be95afa35bbee3b36936303">00694</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_wait_token_1afdc303d17be95afa35bbee3b36936303">WaitToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l00695"/>00695 {
<anchor xml:id="__token_8cpp_source_1l00696"/>00696 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l00697"/>00697 }
<anchor xml:id="__token_8cpp_source_1l00698"/>00698 
<anchor xml:id="__token_8cpp_source_1l00699"/><link linkend="_class_and_token_1ad19dda0405dae7acad6ff7d1276b55d0">00699</link> <link linkend="_class_and_token_1ad19dda0405dae7acad6ff7d1276b55d0">AndToken::AndToken</link>()&#32;:<link linkend="_class_b_m_p_k_token">BMPKToken</link>()
<anchor xml:id="__token_8cpp_source_1l00700"/>00700 {
<anchor xml:id="__token_8cpp_source_1l00701"/>00701 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca558ffc8f5770d8e4f95f51d822685532">TokenVALUE::AND</link>;
<anchor xml:id="__token_8cpp_source_1l00702"/>00702 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;andK;
<anchor xml:id="__token_8cpp_source_1l00703"/>00703 }
<anchor xml:id="__token_8cpp_source_1l00704"/>00704 
<anchor xml:id="__token_8cpp_source_1l00705"/>00705 
<anchor xml:id="__token_8cpp_source_1l00706"/>00706 
<anchor xml:id="__token_8cpp_source_1l00707"/>00707 
<anchor xml:id="__token_8cpp_source_1l00708"/>00708 
<anchor xml:id="__token_8cpp_source_1l00709"/><link linkend="_class_c_k_token_1a3ba21d2fa5758ff97e963e338b90a4e1">00709</link> <link linkend="_class_c_k_token_1a3ba21d2fa5758ff97e963e338b90a4e1">CKToken::CKToken</link>()&#32;:<link linkend="_class_u_p_k_token">UPKToken</link>()
<anchor xml:id="__token_8cpp_source_1l00710"/>00710 {
<anchor xml:id="__token_8cpp_source_1l00711"/>00711 &#32;&#32;&#32;&#32;<link linkend="_class_c_k_token_1a826b592efb9b09d8f3110f134671ec4b">setOverloads</link>();
<anchor xml:id="__token_8cpp_source_1l00712"/>00712 }
<anchor xml:id="__token_8cpp_source_1l00713"/>00713 
<anchor xml:id="__token_8cpp_source_1l00714"/><link linkend="_class_c_k_token_1a826b592efb9b09d8f3110f134671ec4b">00714</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_k_token_1a826b592efb9b09d8f3110f134671ec4b">CKToken::setOverloads</link>()
<anchor xml:id="__token_8cpp_source_1l00715"/>00715 {
<anchor xml:id="__token_8cpp_source_1l00716"/>00716 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6aa97b2c144243b2b9d2c593ec268b62f5">DataType::BOOL</link>,<emphasis role="keyword">false</emphasis>),0);
<anchor xml:id="__token_8cpp_source_1l00717"/>00717 }
<anchor xml:id="__token_8cpp_source_1l00718"/>00718 
<anchor xml:id="__token_8cpp_source_1l00719"/><link linkend="_class_c_k_token_1a2d3563d0c427c2f88fbd7ddd118efe78">00719</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_c_k_token_1a2d3563d0c427c2f88fbd7ddd118efe78">CKToken::dispatchArguments</link>()
<anchor xml:id="__token_8cpp_source_1l00720"/>00720 {
<anchor xml:id="__token_8cpp_source_1l00721"/>00721 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a1620cfd1f2662ca030c5caf9bc5f5777">getID</link>())&#32;{
<anchor xml:id="__token_8cpp_source_1l00722"/>00722 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:
<anchor xml:id="__token_8cpp_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>.size()&#32;&gt;&#32;0)<link linkend="_class_u_p_k_token_1a1c9dbf2a5f4096f4891d57ece8e97288">uniqueToken</link>&#32;=&#32;<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>.front();
<anchor xml:id="__token_8cpp_source_1l00724"/>00724 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00725"/>00725 }
<anchor xml:id="__token_8cpp_source_1l00726"/>00726 
<anchor xml:id="__token_8cpp_source_1l00727"/><link linkend="_class_c_k_token_1a2b63ca034c3575ae1fdb559599a74d04">00727</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_c_k_token_1a2b63ca034c3575ae1fdb559599a74d04">CKToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00728"/>00728 {
<anchor xml:id="__token_8cpp_source_1l00729"/>00729 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6aa97b2c144243b2b9d2c593ec268b62f5">DataType::BOOL</link>;
<anchor xml:id="__token_8cpp_source_1l00730"/>00730 }
<anchor xml:id="__token_8cpp_source_1l00731"/>00731 
<anchor xml:id="__token_8cpp_source_1l00732"/>00732 
<anchor xml:id="__token_8cpp_source_1l00733"/><link linkend="_class_and_token_1a8412cc2be91843dbcec6bde30b06d146">00733</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_and_token_1a8412cc2be91843dbcec6bde30b06d146">AndToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l00734"/>00734 {
<anchor xml:id="__token_8cpp_source_1l00735"/>00735 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l00736"/>00736 }
<anchor xml:id="__token_8cpp_source_1l00737"/>00737 
<anchor xml:id="__token_8cpp_source_1l00738"/><link linkend="_class_or_token_1a7c85002ad97533e99a9512267eede569">00738</link> <link linkend="_class_or_token_1a7c85002ad97533e99a9512267eede569">OrToken::OrToken</link>()&#32;:<link linkend="_class_b_m_p_k_token">BMPKToken</link>()
<anchor xml:id="__token_8cpp_source_1l00739"/>00739 {
<anchor xml:id="__token_8cpp_source_1l00740"/>00740 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca1d00e7dce692e8dc3f6877f035e3a616">TokenVALUE::OR</link>;
<anchor xml:id="__token_8cpp_source_1l00741"/>00741 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;orK;
<anchor xml:id="__token_8cpp_source_1l00742"/>00742 }
<anchor xml:id="__token_8cpp_source_1l00743"/>00743 
<anchor xml:id="__token_8cpp_source_1l00744"/>00744 
<anchor xml:id="__token_8cpp_source_1l00745"/>00745 
<anchor xml:id="__token_8cpp_source_1l00746"/>00746 
<anchor xml:id="__token_8cpp_source_1l00747"/>00747 
<anchor xml:id="__token_8cpp_source_1l00748"/><link linkend="_class_or_token_1ad079040ecd6dc5384d817249f80eed65">00748</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_or_token_1ad079040ecd6dc5384d817249f80eed65">OrToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l00749"/>00749 {
<anchor xml:id="__token_8cpp_source_1l00750"/>00750 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l00751"/>00751 }
<anchor xml:id="__token_8cpp_source_1l00752"/>00752 
<anchor xml:id="__token_8cpp_source_1l00753"/><link linkend="_class_not_token_1a9a532a1f09a418d06d923114deebb5e9">00753</link> <link linkend="_class_not_token_1a9a532a1f09a418d06d923114deebb5e9">NotToken::NotToken</link>()&#32;:<link linkend="_class_c_k_token">CKToken</link>()
<anchor xml:id="__token_8cpp_source_1l00754"/>00754 {
<anchor xml:id="__token_8cpp_source_1l00755"/>00755 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca10df3d67626099df882920ba6552f16d">TokenVALUE::NOT</link>;
<anchor xml:id="__token_8cpp_source_1l00756"/>00756 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;notK;
<anchor xml:id="__token_8cpp_source_1l00757"/>00757 }
<anchor xml:id="__token_8cpp_source_1l00758"/>00758 
<anchor xml:id="__token_8cpp_source_1l00759"/><link linkend="_class_not_token_1a6c122b3073499f07b79eed8e8576ab2a">00759</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_not_token_1a6c122b3073499f07b79eed8e8576ab2a">NotToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l00760"/>00760 {
<anchor xml:id="__token_8cpp_source_1l00761"/>00761 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l00762"/>00762 }
<anchor xml:id="__token_8cpp_source_1l00763"/>00763 
<anchor xml:id="__token_8cpp_source_1l00764"/><link linkend="_class_false_token_1a4cc46b13ce0b957d44cdcfd648ce00bc">00764</link> <link linkend="_class_false_token_1a4cc46b13ce0b957d44cdcfd648ce00bc">FalseToken::FalseToken</link>()
<anchor xml:id="__token_8cpp_source_1l00765"/>00765 {
<anchor xml:id="__token_8cpp_source_1l00766"/>00766 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca3667ab316297387f31aa717670424e7b">TokenVALUE::FALSELITERAL</link>;
<anchor xml:id="__token_8cpp_source_1l00767"/>00767 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;falseL;
<anchor xml:id="__token_8cpp_source_1l00768"/>00768 }
<anchor xml:id="__token_8cpp_source_1l00769"/>00769 
<anchor xml:id="__token_8cpp_source_1l00770"/><link linkend="_class_false_token_1a1f60433402f09076e28d93b7a8ab176e">00770</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_false_token_1a1f60433402f09076e28d93b7a8ab176e">FalseToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00771"/>00771 {
<anchor xml:id="__token_8cpp_source_1l00772"/>00772 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6aa97b2c144243b2b9d2c593ec268b62f5">DataType::BOOL</link>;
<anchor xml:id="__token_8cpp_source_1l00773"/>00773 }
<anchor xml:id="__token_8cpp_source_1l00774"/>00774 
<anchor xml:id="__token_8cpp_source_1l00775"/><link linkend="_class_true_token_1a08aca6511e1fbde286a4776207b2d9c1">00775</link> <link linkend="_class_true_token_1a08aca6511e1fbde286a4776207b2d9c1">TrueToken::TrueToken</link>()
<anchor xml:id="__token_8cpp_source_1l00776"/>00776 {
<anchor xml:id="__token_8cpp_source_1l00777"/>00777 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46cad36335449b5720a1384868719f487119">TokenVALUE::TRUELITERAL</link>;
<anchor xml:id="__token_8cpp_source_1l00778"/>00778 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;trueL;
<anchor xml:id="__token_8cpp_source_1l00779"/>00779 }
<anchor xml:id="__token_8cpp_source_1l00780"/>00780 
<anchor xml:id="__token_8cpp_source_1l00781"/><link linkend="_class_true_token_1af3740cd45b792953be794e45d84125e2">00781</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_true_token_1af3740cd45b792953be794e45d84125e2">TrueToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00782"/>00782 {
<anchor xml:id="__token_8cpp_source_1l00783"/>00783 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6aa97b2c144243b2b9d2c593ec268b62f5">DataType::BOOL</link>;
<anchor xml:id="__token_8cpp_source_1l00784"/>00784 }
<anchor xml:id="__token_8cpp_source_1l00785"/>00785 
<anchor xml:id="__token_8cpp_source_1l00786"/><link linkend="_class_open_parenthesis_token_1a47a89050befd5ba73d4742338688584f">00786</link> <link linkend="_class_open_parenthesis_token_1a47a89050befd5ba73d4742338688584f">OpenParenthesisToken::OpenParenthesisToken</link>()
<anchor xml:id="__token_8cpp_source_1l00787"/>00787 {
<anchor xml:id="__token_8cpp_source_1l00788"/>00788 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46caab5f2c1029696d0fa27db2acf531e951">TokenVALUE::OPENPARENTHESIS</link>;
<anchor xml:id="__token_8cpp_source_1l00789"/>00789 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;openParenthesisP;
<anchor xml:id="__token_8cpp_source_1l00790"/>00790 }
<anchor xml:id="__token_8cpp_source_1l00791"/>00791 
<anchor xml:id="__token_8cpp_source_1l00792"/><link linkend="_class_close_parenthesis_token_1a19722cdf09d45d79725d6e8227ccd2ce">00792</link> <link linkend="_class_close_parenthesis_token_1a19722cdf09d45d79725d6e8227ccd2ce">CloseParenthesisToken::CloseParenthesisToken</link>()
<anchor xml:id="__token_8cpp_source_1l00793"/>00793 {
<anchor xml:id="__token_8cpp_source_1l00794"/>00794 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46cab658c0ab7888b812782bb032dbf4815c">TokenVALUE::CLOSEPARENTHESIS</link>;
<anchor xml:id="__token_8cpp_source_1l00795"/>00795 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;closeParenthesisP;
<anchor xml:id="__token_8cpp_source_1l00796"/>00796 }
<anchor xml:id="__token_8cpp_source_1l00797"/>00797 
<anchor xml:id="__token_8cpp_source_1l00798"/><link linkend="_class_close_brackets_token_1a804df0a59ddcffeff2c90a25e036f672">00798</link> <link linkend="_class_close_brackets_token_1a804df0a59ddcffeff2c90a25e036f672">CloseBracketsToken::CloseBracketsToken</link>()
<anchor xml:id="__token_8cpp_source_1l00799"/>00799 {
<anchor xml:id="__token_8cpp_source_1l00800"/>00800 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46caf62b7b10a36ac4ff1386de6dc9c3ec13">TokenVALUE::CLOSEBRACKETS</link>;
<anchor xml:id="__token_8cpp_source_1l00801"/>00801 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;closeBracketsP;
<anchor xml:id="__token_8cpp_source_1l00802"/>00802 }
<anchor xml:id="__token_8cpp_source_1l00803"/>00803 
<anchor xml:id="__token_8cpp_source_1l00804"/><link linkend="_class_open_brackets_token_1abe41351997882bec5477c775f5bc1673">00804</link> <link linkend="_class_open_brackets_token_1abe41351997882bec5477c775f5bc1673">OpenBracketsToken::OpenBracketsToken</link>()
<anchor xml:id="__token_8cpp_source_1l00805"/>00805 {
<anchor xml:id="__token_8cpp_source_1l00806"/>00806 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca56d9d72077d098fe411d4f715c339e92">TokenVALUE::OPENBRACKETS</link>;
<anchor xml:id="__token_8cpp_source_1l00807"/>00807 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;openBracketsP;
<anchor xml:id="__token_8cpp_source_1l00808"/>00808 }
<anchor xml:id="__token_8cpp_source_1l00809"/>00809 
<anchor xml:id="__token_8cpp_source_1l00810"/><link linkend="_class_comma_token_1abc5636c6b36a649ebed92d14ab3e6419">00810</link> <link linkend="_class_comma_token_1abc5636c6b36a649ebed92d14ab3e6419">CommaToken::CommaToken</link>()&#32;:<link linkend="_class_p_token">PToken</link>()
<anchor xml:id="__token_8cpp_source_1l00811"/>00811 {
<anchor xml:id="__token_8cpp_source_1l00812"/>00812 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca4d9b3e9fc12849d060371eb65154c751">TokenVALUE::COMMA</link>;
<anchor xml:id="__token_8cpp_source_1l00813"/>00813 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;commaP;
<anchor xml:id="__token_8cpp_source_1l00814"/>00814 }
<anchor xml:id="__token_8cpp_source_1l00815"/>00815 
<anchor xml:id="__token_8cpp_source_1l00816"/><link linkend="_class_continue_token_1a13d28523acec8f04193ce06919127a0a">00816</link> <link linkend="_class_continue_token_1a13d28523acec8f04193ce06919127a0a">ContinueToken::ContinueToken</link>()&#32;:<link linkend="_class_k_token">KToken</link>()
<anchor xml:id="__token_8cpp_source_1l00817"/>00817 {
<anchor xml:id="__token_8cpp_source_1l00818"/>00818 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca2f453cfe638e57e27bb0c9512436111e">TokenVALUE::CONTINUE</link>;
<anchor xml:id="__token_8cpp_source_1l00819"/>00819 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;continueK;
<anchor xml:id="__token_8cpp_source_1l00820"/>00820 }
<anchor xml:id="__token_8cpp_source_1l00821"/>00821 
<anchor xml:id="__token_8cpp_source_1l00822"/>00822 
<anchor xml:id="__token_8cpp_source_1l00823"/><link linkend="_class_continue_token_1aa9fad99e91e2fb23af6fed27c815b01f">00823</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_continue_token_1aa9fad99e91e2fb23af6fed27c815b01f">ContinueToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l00824"/>00824 {
<anchor xml:id="__token_8cpp_source_1l00825"/>00825 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;ContinueTag&gt;();
<anchor xml:id="__token_8cpp_source_1l00826"/>00826 }
<anchor xml:id="__token_8cpp_source_1l00827"/>00827 
<anchor xml:id="__token_8cpp_source_1l00828"/><link linkend="_class_break_token_1a87c201c9b7d271136bd63d7256a62b19">00828</link> <link linkend="_class_break_token_1a87c201c9b7d271136bd63d7256a62b19">BreakToken::BreakToken</link>()&#32;:<link linkend="_class_k_token">KToken</link>()
<anchor xml:id="__token_8cpp_source_1l00829"/>00829 {
<anchor xml:id="__token_8cpp_source_1l00830"/>00830 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca14d6a3e0201f58bfe7c01e775973e80e">TokenVALUE::BREAK</link>;
<anchor xml:id="__token_8cpp_source_1l00831"/>00831 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;breakK;
<anchor xml:id="__token_8cpp_source_1l00832"/>00832 }
<anchor xml:id="__token_8cpp_source_1l00833"/>00833 
<anchor xml:id="__token_8cpp_source_1l00834"/>00834 
<anchor xml:id="__token_8cpp_source_1l00835"/><link linkend="_class_break_token_1a623e413d2ea0c720de427739602b2002">00835</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_break_token_1a623e413d2ea0c720de427739602b2002">BreakToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l00836"/>00836 {
<anchor xml:id="__token_8cpp_source_1l00837"/>00837 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;BreakTag&gt;();
<anchor xml:id="__token_8cpp_source_1l00838"/>00838 }
<anchor xml:id="__token_8cpp_source_1l00839"/>00839 
<anchor xml:id="__token_8cpp_source_1l00840"/><link linkend="_class_print_token_1a3a58305f4f8a92f90fcca62aa4544db8">00840</link> <link linkend="_class_print_token_1a3a58305f4f8a92f90fcca62aa4544db8">PrintToken::PrintToken</link>()&#32;:<link linkend="_class_u_p_k_token">UPKToken</link>()
<anchor xml:id="__token_8cpp_source_1l00841"/>00841 {
<anchor xml:id="__token_8cpp_source_1l00842"/>00842 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46caf96eee4e48ee90430f17fb3a8388507b">TokenVALUE::PRINT</link>;
<anchor xml:id="__token_8cpp_source_1l00843"/>00843 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;printK;
<anchor xml:id="__token_8cpp_source_1l00844"/>00844 &#32;&#32;&#32;&#32;<link linkend="_class_print_token_1a0901d022b06f4b6cee86160bac8b8bb5">setOverloads</link>();
<anchor xml:id="__token_8cpp_source_1l00845"/>00845 }
<anchor xml:id="__token_8cpp_source_1l00846"/>00846 
<anchor xml:id="__token_8cpp_source_1l00847"/><link linkend="_class_print_token_1a0901d022b06f4b6cee86160bac8b8bb5">00847</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_print_token_1a0901d022b06f4b6cee86160bac8b8bb5">PrintToken::setOverloads</link>()
<anchor xml:id="__token_8cpp_source_1l00848"/>00848 {
<anchor xml:id="__token_8cpp_source_1l00849"/>00849 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a63b588d5559f64f89a416e656880b949">DataType::STRING</link>,<emphasis role="keyword">true</emphasis>),0);
<anchor xml:id="__token_8cpp_source_1l00850"/>00850 }
<anchor xml:id="__token_8cpp_source_1l00851"/>00851 
<anchor xml:id="__token_8cpp_source_1l00852"/><link linkend="_class_print_token_1a9e4931aa23c45ae8947c9a2258981fa3">00852</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_print_token_1a9e4931aa23c45ae8947c9a2258981fa3">PrintToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l00853"/>00853 {
<anchor xml:id="__token_8cpp_source_1l00854"/>00854 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l00855"/>00855 }
<anchor xml:id="__token_8cpp_source_1l00856"/>00856 
<anchor xml:id="__token_8cpp_source_1l00857"/><link linkend="_class_direction_token_1aa4defb606ee71a120de033877d441b7f">00857</link> <link linkend="_class_direction_token_1aa4defb606ee71a120de033877d441b7f">DirectionToken::DirectionToken</link>():<link linkend="_class_u_p_k_token">UPKToken</link>()
<anchor xml:id="__token_8cpp_source_1l00858"/>00858 {
<anchor xml:id="__token_8cpp_source_1l00859"/>00859 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca823d5f6b867f6d6adec93ad4999bae9f">TokenVALUE::DIRECTION</link>;
<anchor xml:id="__token_8cpp_source_1l00860"/>00860 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;directionK;
<anchor xml:id="__token_8cpp_source_1l00861"/>00861 &#32;&#32;&#32;&#32;<link linkend="_class_direction_token_1a0a49d672e7b1c45ed5a67db29dc35955">setOverloads</link>();
<anchor xml:id="__token_8cpp_source_1l00862"/>00862 }
<anchor xml:id="__token_8cpp_source_1l00863"/>00863 
<anchor xml:id="__token_8cpp_source_1l00864"/><link linkend="_class_direction_token_1a0a49d672e7b1c45ed5a67db29dc35955">00864</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_direction_token_1a0a49d672e7b1c45ed5a67db29dc35955">DirectionToken::setOverloads</link>()
<anchor xml:id="__token_8cpp_source_1l00865"/>00865 {
<anchor xml:id="__token_8cpp_source_1l00866"/>00866 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(),0);
<anchor xml:id="__token_8cpp_source_1l00867"/>00867 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a823d5f6b867f6d6adec93ad4999bae9f">DataType::DIRECTION</link>,&#32;<emphasis role="keyword">false</emphasis>),1);
<anchor xml:id="__token_8cpp_source_1l00868"/>00868 }
<anchor xml:id="__token_8cpp_source_1l00869"/>00869 
<anchor xml:id="__token_8cpp_source_1l00870"/>00870 
<anchor xml:id="__token_8cpp_source_1l00871"/>00871 
<anchor xml:id="__token_8cpp_source_1l00872"/><link linkend="_class_direction_token_1a6e02336bb4bb7f426c0cdf85ea02d8f8">00872</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_direction_token_1a6e02336bb4bb7f426c0cdf85ea02d8f8">DirectionToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00873"/>00873 {
<anchor xml:id="__token_8cpp_source_1l00874"/>00874 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a823d5f6b867f6d6adec93ad4999bae9f">DataType::DIRECTION</link>;
<anchor xml:id="__token_8cpp_source_1l00875"/>00875 }
<anchor xml:id="__token_8cpp_source_1l00876"/>00876 
<anchor xml:id="__token_8cpp_source_1l00877"/><link linkend="_class_direction_token_1a124c7609d3a4d859d6ef466cf03034b6">00877</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_direction_token_1a124c7609d3a4d859d6ef466cf03034b6">DirectionToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l00878"/>00878 {
<anchor xml:id="__token_8cpp_source_1l00879"/>00879 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l00880"/>00880 }
<anchor xml:id="__token_8cpp_source_1l00881"/>00881 
<anchor xml:id="__token_8cpp_source_1l00882"/><link linkend="_class_zone_token_1aa3c56031d3943698209e5e5b16fca705">00882</link> <link linkend="_class_zone_token_1aa3c56031d3943698209e5e5b16fca705">ZoneToken::ZoneToken</link>()&#32;:<link linkend="_class_p_k_token">PKToken</link>()
<anchor xml:id="__token_8cpp_source_1l00883"/>00883 {
<anchor xml:id="__token_8cpp_source_1l00884"/>00884 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;zoneK;
<anchor xml:id="__token_8cpp_source_1l00885"/>00885 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca1d23cac77df97a722cd2ec7767a06e06">TokenVALUE::ZONE</link>;
<anchor xml:id="__token_8cpp_source_1l00886"/>00886 &#32;&#32;&#32;&#32;<link linkend="_class_zone_token_1a0ecbf706cef317c8fa0234cbb9006824">setOverloads</link>();
<anchor xml:id="__token_8cpp_source_1l00887"/>00887 }
<anchor xml:id="__token_8cpp_source_1l00888"/>00888 
<anchor xml:id="__token_8cpp_source_1l00889"/><link linkend="_class_zone_token_1a0ecbf706cef317c8fa0234cbb9006824">00889</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_zone_token_1a0ecbf706cef317c8fa0234cbb9006824">ZoneToken::setOverloads</link>()
<anchor xml:id="__token_8cpp_source_1l00890"/>00890 {
<anchor xml:id="__token_8cpp_source_1l00891"/>00891 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(),0);
<anchor xml:id="__token_8cpp_source_1l00892"/>00892 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a1d23cac77df97a722cd2ec7767a06e06">DataType::ZONE</link>,&#32;<emphasis role="keyword">false</emphasis>),1);
<anchor xml:id="__token_8cpp_source_1l00893"/>00893 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>({&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a6a977bf6454341ccb0b79c3d0900db91">DataType::COORD</link>,<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a6a977bf6454341ccb0b79c3d0900db91">DataType::COORD</link>&#32;}),&#32;2);
<anchor xml:id="__token_8cpp_source_1l00894"/>00894 }
<anchor xml:id="__token_8cpp_source_1l00895"/>00895 
<anchor xml:id="__token_8cpp_source_1l00896"/><link linkend="_class_zone_token_1a7ebcb70f7ef89bc1cd193e86f337022a">00896</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_zone_token_1a7ebcb70f7ef89bc1cd193e86f337022a">ZoneToken::dispatchArguments</link>()
<anchor xml:id="__token_8cpp_source_1l00897"/>00897 {
<anchor xml:id="__token_8cpp_source_1l00898"/>00898 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a1620cfd1f2662ca030c5caf9bc5f5777">getID</link>())&#32;{
<anchor xml:id="__token_8cpp_source_1l00899"/>00899 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:
<anchor xml:id="__token_8cpp_source_1l00900"/>00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_zone_token_1ab04473b2a544a8c989cc36636a0ca1fe">topLeft</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_zone_token_1a470e67610ee539fb9ef8116c7b11674f">bottomRight</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00903"/>00903 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:
<anchor xml:id="__token_8cpp_source_1l00904"/>00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_zone_token_1a6393e6a8f503370941ecde68361e1f4f">zoneToken</link>&#32;=&#32;<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>.front();
<anchor xml:id="__token_8cpp_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00906"/>00906 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:
<anchor xml:id="__token_8cpp_source_1l00907"/>00907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_zone_token_1ab04473b2a544a8c989cc36636a0ca1fe">topLeft</link>&#32;=&#32;<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>.at(0);
<anchor xml:id="__token_8cpp_source_1l00908"/>00908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_zone_token_1a470e67610ee539fb9ef8116c7b11674f">bottomRight</link>&#32;=&#32;<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>.at(1);
<anchor xml:id="__token_8cpp_source_1l00909"/>00909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00910"/>00910 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00911"/>00911 }
<anchor xml:id="__token_8cpp_source_1l00912"/>00912 
<anchor xml:id="__token_8cpp_source_1l00913"/><link linkend="_class_zone_token_1af424617eb2ad025c9e4b9d470cf5d46f">00913</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_zone_token_1af424617eb2ad025c9e4b9d470cf5d46f">ZoneToken::showArguments</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nestedLayer)
<anchor xml:id="__token_8cpp_source_1l00914"/>00914 {
<anchor xml:id="__token_8cpp_source_1l00915"/>00915 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_zone_token_1a6393e6a8f503370941ecde68361e1f4f">zoneToken</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l00916"/>00916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_zone_token_1a6393e6a8f503370941ecde68361e1f4f">zoneToken</link>-&gt;showTokenTree(nestedLayer);
<anchor xml:id="__token_8cpp_source_1l00917"/>00917 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00918"/>00918 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_zone_token_1ab04473b2a544a8c989cc36636a0ca1fe">topLeft</link>&#32;&amp;&amp;&#32;<link linkend="_class_zone_token_1a470e67610ee539fb9ef8116c7b11674f">bottomRight</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l00919"/>00919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_zone_token_1ab04473b2a544a8c989cc36636a0ca1fe">topLeft</link>-&gt;showTokenTree(nestedLayer);
<anchor xml:id="__token_8cpp_source_1l00920"/>00920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;,&apos;</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00921"/>00921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_zone_token_1a470e67610ee539fb9ef8116c7b11674f">bottomRight</link>-&gt;showTokenTree(nestedLayer);
<anchor xml:id="__token_8cpp_source_1l00922"/>00922 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00923"/>00923 }
<anchor xml:id="__token_8cpp_source_1l00924"/>00924 
<anchor xml:id="__token_8cpp_source_1l00925"/><link linkend="_class_zone_token_1a0871bf05e2a5e772993e723f7c9f3027">00925</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_zone_token_1a0871bf05e2a5e772993e723f7c9f3027">ZoneToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00926"/>00926 {
<anchor xml:id="__token_8cpp_source_1l00927"/>00927 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a1d23cac77df97a722cd2ec7767a06e06">DataType::ZONE</link>;
<anchor xml:id="__token_8cpp_source_1l00928"/>00928 }
<anchor xml:id="__token_8cpp_source_1l00929"/>00929 
<anchor xml:id="__token_8cpp_source_1l00930"/>00930 
<anchor xml:id="__token_8cpp_source_1l00931"/>00931 
<anchor xml:id="__token_8cpp_source_1l00932"/><link linkend="_class_zone_token_1a9c4b24525c5f7b3b6a502662d3a4f31c">00932</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_zone_token_1a9c4b24525c5f7b3b6a502662d3a4f31c">ZoneToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l00933"/>00933 {
<anchor xml:id="__token_8cpp_source_1l00934"/>00934 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l00935"/>00935 }
<anchor xml:id="__token_8cpp_source_1l00936"/>00936 
<anchor xml:id="__token_8cpp_source_1l00937"/><link linkend="_class_coord_token_1a3540101def18b72bc447578fa6efc39f">00937</link> <link linkend="_class_coord_token_1a3540101def18b72bc447578fa6efc39f">CoordToken::CoordToken</link>()&#32;:<link linkend="_class_p_k_token">PKToken</link>()
<anchor xml:id="__token_8cpp_source_1l00938"/>00938 {
<anchor xml:id="__token_8cpp_source_1l00939"/>00939 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;coordK;
<anchor xml:id="__token_8cpp_source_1l00940"/>00940 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca6a977bf6454341ccb0b79c3d0900db91">TokenVALUE::COORD</link>;
<anchor xml:id="__token_8cpp_source_1l00941"/>00941 &#32;&#32;&#32;&#32;<link linkend="_class_coord_token_1a6cc138e57660c753a4b96c335c6105a4">setOverloads</link>();
<anchor xml:id="__token_8cpp_source_1l00942"/>00942 }
<anchor xml:id="__token_8cpp_source_1l00943"/>00943 
<anchor xml:id="__token_8cpp_source_1l00944"/><link linkend="_class_coord_token_1a6cc138e57660c753a4b96c335c6105a4">00944</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_coord_token_1a6cc138e57660c753a4b96c335c6105a4">CoordToken::setOverloads</link>()
<anchor xml:id="__token_8cpp_source_1l00945"/>00945 {
<anchor xml:id="__token_8cpp_source_1l00946"/>00946 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(),0);
<anchor xml:id="__token_8cpp_source_1l00947"/>00947 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a6a977bf6454341ccb0b79c3d0900db91">DataType::COORD</link>,&#32;<emphasis role="keyword">false</emphasis>),1);
<anchor xml:id="__token_8cpp_source_1l00948"/>00948 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>({&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a53f93baa3057821107c750323892fa92">DataType::INT</link>,&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a53f93baa3057821107c750323892fa92">DataType::INT</link>&#32;}),&#32;2);
<anchor xml:id="__token_8cpp_source_1l00949"/>00949 }
<anchor xml:id="__token_8cpp_source_1l00950"/>00950 
<anchor xml:id="__token_8cpp_source_1l00951"/><link linkend="_class_coord_token_1a427329931b6beea89e89eb777290e0b3">00951</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_coord_token_1a427329931b6beea89e89eb777290e0b3">CoordToken::dispatchArguments</link>()
<anchor xml:id="__token_8cpp_source_1l00952"/>00952 {
<anchor xml:id="__token_8cpp_source_1l00953"/>00953 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a1620cfd1f2662ca030c5caf9bc5f5777">getID</link>())&#32;{
<anchor xml:id="__token_8cpp_source_1l00954"/>00954 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:
<anchor xml:id="__token_8cpp_source_1l00955"/>00955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_coord_token_1a21470f2dfdc0677999da55c3731c1b4a">xPoint</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00956"/>00956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_coord_token_1ac1290944990250ad960c7004a7eef459">yPoint</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00957"/>00957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00958"/>00958 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:
<anchor xml:id="__token_8cpp_source_1l00959"/>00959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_coord_token_1a1da90086131fc87de755754d41ecbf41">coordToken</link>&#32;=&#32;<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>.front();
<anchor xml:id="__token_8cpp_source_1l00960"/>00960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00961"/>00961 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:
<anchor xml:id="__token_8cpp_source_1l00962"/>00962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_coord_token_1a21470f2dfdc0677999da55c3731c1b4a">xPoint</link>&#32;=&#32;<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>.at(0);
<anchor xml:id="__token_8cpp_source_1l00963"/>00963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_coord_token_1ac1290944990250ad960c7004a7eef459">yPoint</link>&#32;=&#32;<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>.at(1);
<anchor xml:id="__token_8cpp_source_1l00964"/>00964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__token_8cpp_source_1l00965"/>00965 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00966"/>00966 }
<anchor xml:id="__token_8cpp_source_1l00967"/>00967 
<anchor xml:id="__token_8cpp_source_1l00968"/><link linkend="_class_coord_token_1ad5cc8975263d8b2bfa1222fc1eaa1f6c">00968</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_coord_token_1ad5cc8975263d8b2bfa1222fc1eaa1f6c">CoordToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l00969"/>00969 {
<anchor xml:id="__token_8cpp_source_1l00970"/>00970 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a6a977bf6454341ccb0b79c3d0900db91">DataType::COORD</link>;
<anchor xml:id="__token_8cpp_source_1l00971"/>00971 }
<anchor xml:id="__token_8cpp_source_1l00972"/>00972 
<anchor xml:id="__token_8cpp_source_1l00973"/>00973 
<anchor xml:id="__token_8cpp_source_1l00974"/>00974 
<anchor xml:id="__token_8cpp_source_1l00975"/>00975 
<anchor xml:id="__token_8cpp_source_1l00976"/>00976 
<anchor xml:id="__token_8cpp_source_1l00977"/><link linkend="_class_coord_token_1a3399a3cb18d077bb51dbfc13b12bf642">00977</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_coord_token_1a3399a3cb18d077bb51dbfc13b12bf642">CoordToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l00978"/>00978 {
<anchor xml:id="__token_8cpp_source_1l00979"/>00979 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_coord_token_1a1da90086131fc87de755754d41ecbf41">coordToken</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l00980"/>00980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;CoordTag&gt;(<link linkend="_class_coord_token_1a1da90086131fc87de755754d41ecbf41">coordToken</link>-&gt;execute());
<anchor xml:id="__token_8cpp_source_1l00981"/>00981 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00982"/>00982 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_coord_token_1a21470f2dfdc0677999da55c3731c1b4a">xPoint</link>&#32;&amp;&amp;&#32;<link linkend="_class_coord_token_1ac1290944990250ad960c7004a7eef459">yPoint</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l00983"/>00983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;CoordTag&gt;(<link linkend="_class_coord_token_1a21470f2dfdc0677999da55c3731c1b4a">xPoint</link>-&gt;execute(),&#32;<link linkend="_class_coord_token_1ac1290944990250ad960c7004a7eef459">yPoint</link>-&gt;execute());
<anchor xml:id="__token_8cpp_source_1l00984"/>00984 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l00985"/>00985 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;CoordTag&gt;();
<anchor xml:id="__token_8cpp_source_1l00986"/>00986 }
<anchor xml:id="__token_8cpp_source_1l00987"/>00987 
<anchor xml:id="__token_8cpp_source_1l00988"/><link linkend="_class_compare_token_1a20829f6e8ec72cd4c9c239f20ac795b3">00988</link> <link linkend="_class_compare_token_1a20829f6e8ec72cd4c9c239f20ac795b3">CompareToken::CompareToken</link>():&#32;<link linkend="_class_p_k_token">PKToken</link>()
<anchor xml:id="__token_8cpp_source_1l00989"/>00989 {
<anchor xml:id="__token_8cpp_source_1l00990"/>00990 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;compareK;
<anchor xml:id="__token_8cpp_source_1l00991"/>00991 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46cafee1f202df8193b3ba65f00ad61efcef">TokenVALUE::COMPARE</link>;
<anchor xml:id="__token_8cpp_source_1l00992"/>00992 &#32;&#32;&#32;&#32;<link linkend="_class_compare_token_1a518feb2d1f82dab200d49538bd303ad7">setOverloads</link>();
<anchor xml:id="__token_8cpp_source_1l00993"/>00993 }
<anchor xml:id="__token_8cpp_source_1l00994"/>00994 
<anchor xml:id="__token_8cpp_source_1l00995"/><link linkend="_class_compare_token_1a518feb2d1f82dab200d49538bd303ad7">00995</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_compare_token_1a518feb2d1f82dab200d49538bd303ad7">CompareToken::setOverloads</link>()
<anchor xml:id="__token_8cpp_source_1l00996"/>00996 {
<anchor xml:id="__token_8cpp_source_1l00997"/>00997 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_class_compare_token_1a03488c79224ca6dd3c1e824a1ee13198">valuesType</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l00998"/>00998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6aa97b2c144243b2b9d2c593ec268b62f5">DataType::BOOL</link>:
<anchor xml:id="__token_8cpp_source_1l00999"/>00999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6aa97b2c144243b2b9d2c593ec268b62f5">DataType::BOOL</link>,<emphasis role="keyword">true</emphasis>),0);
<anchor xml:id="__token_8cpp_source_1l01000"/>01000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01001"/>01001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a6a977bf6454341ccb0b79c3d0900db91">DataType::COORD</link>:
<anchor xml:id="__token_8cpp_source_1l01002"/>01002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a6a977bf6454341ccb0b79c3d0900db91">DataType::COORD</link>,&#32;<emphasis role="keyword">true</emphasis>),&#32;1);
<anchor xml:id="__token_8cpp_source_1l01003"/>01003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01004"/>01004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a02ff2101e64dbed6c34c715aa8d5cfea">DataType::DATATYPE</link>:
<anchor xml:id="__token_8cpp_source_1l01005"/>01005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a02ff2101e64dbed6c34c715aa8d5cfea">DataType::DATATYPE</link>,&#32;<emphasis role="keyword">true</emphasis>),2);
<anchor xml:id="__token_8cpp_source_1l01006"/>01006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01007"/>01007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a823d5f6b867f6d6adec93ad4999bae9f">DataType::DIRECTION</link>:
<anchor xml:id="__token_8cpp_source_1l01008"/>01008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a823d5f6b867f6d6adec93ad4999bae9f">DataType::DIRECTION</link>,&#32;<emphasis role="keyword">true</emphasis>),3);
<anchor xml:id="__token_8cpp_source_1l01009"/>01009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01010"/>01010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6ae738c26bf4ce1037fa81b039a915cbf6">DataType::FLOAT</link>:
<anchor xml:id="__token_8cpp_source_1l01011"/>01011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6ae738c26bf4ce1037fa81b039a915cbf6">DataType::FLOAT</link>,&#32;<emphasis role="keyword">true</emphasis>),4);
<anchor xml:id="__token_8cpp_source_1l01012"/>01012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01013"/>01013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a53f93baa3057821107c750323892fa92">DataType::INT</link>:
<anchor xml:id="__token_8cpp_source_1l01014"/>01014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a53f93baa3057821107c750323892fa92">DataType::INT</link>,&#32;<emphasis role="keyword">true</emphasis>),5);
<anchor xml:id="__token_8cpp_source_1l01015"/>01015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01016"/>01016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a63b588d5559f64f89a416e656880b949">DataType::STRING</link>:
<anchor xml:id="__token_8cpp_source_1l01017"/>01017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a63b588d5559f64f89a416e656880b949">DataType::STRING</link>,&#32;<emphasis role="keyword">true</emphasis>),6);
<anchor xml:id="__token_8cpp_source_1l01018"/>01018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01019"/>01019 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01020"/>01020 }
<anchor xml:id="__token_8cpp_source_1l01021"/>01021 
<anchor xml:id="__token_8cpp_source_1l01022"/><link linkend="_class_compare_token_1ac38f0593eae04726ebe2fed589176916">01022</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_compare_token_1ac38f0593eae04726ebe2fed589176916">CompareToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01023"/>01023 {
<anchor xml:id="__token_8cpp_source_1l01024"/>01024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6aa97b2c144243b2b9d2c593ec268b62f5">DataType::BOOL</link>;
<anchor xml:id="__token_8cpp_source_1l01025"/>01025 }
<anchor xml:id="__token_8cpp_source_1l01026"/>01026 
<anchor xml:id="__token_8cpp_source_1l01027"/><link linkend="_class_compare_token_1ac71c9bacc5349631b6e4972746934d48">01027</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_compare_token_1ac71c9bacc5349631b6e4972746934d48">CompareToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l01028"/>01028 {
<anchor xml:id="__token_8cpp_source_1l01029"/>01029 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l01030"/>01030 }
<anchor xml:id="__token_8cpp_source_1l01031"/>01031 
<anchor xml:id="__token_8cpp_source_1l01032"/><link linkend="_class_float_token_1ac8c34bb808d391d316bcd3a7094bc98a">01032</link> <link linkend="_class_float_token_1ac8c34bb808d391d316bcd3a7094bc98a">FloatToken::FloatToken</link>()&#32;:<link linkend="_class_u_p_k_token">UPKToken</link>()
<anchor xml:id="__token_8cpp_source_1l01033"/>01033 {
<anchor xml:id="__token_8cpp_source_1l01034"/>01034 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;floatK;
<anchor xml:id="__token_8cpp_source_1l01035"/>01035 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46cae738c26bf4ce1037fa81b039a915cbf6">TokenVALUE::FLOAT</link>;
<anchor xml:id="__token_8cpp_source_1l01036"/>01036 &#32;&#32;&#32;&#32;<link linkend="_class_float_token_1a0f59e32a7fff30d2b09e509a69126305">setOverloads</link>();
<anchor xml:id="__token_8cpp_source_1l01037"/>01037 }
<anchor xml:id="__token_8cpp_source_1l01038"/>01038 
<anchor xml:id="__token_8cpp_source_1l01039"/><link linkend="_class_float_token_1a0f59e32a7fff30d2b09e509a69126305">01039</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_float_token_1a0f59e32a7fff30d2b09e509a69126305">FloatToken::setOverloads</link>()
<anchor xml:id="__token_8cpp_source_1l01040"/>01040 {
<anchor xml:id="__token_8cpp_source_1l01041"/>01041 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(),0);
<anchor xml:id="__token_8cpp_source_1l01042"/>01042 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6ae738c26bf4ce1037fa81b039a915cbf6">DataType::FLOAT</link>,&#32;<emphasis role="keyword">false</emphasis>),1);
<anchor xml:id="__token_8cpp_source_1l01043"/>01043 }
<anchor xml:id="__token_8cpp_source_1l01044"/>01044 
<anchor xml:id="__token_8cpp_source_1l01045"/><link linkend="_class_float_token_1a65675fb958678b0a82f17bc6ba8eb82b">01045</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_float_token_1a65675fb958678b0a82f17bc6ba8eb82b">FloatToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01046"/>01046 {
<anchor xml:id="__token_8cpp_source_1l01047"/>01047 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6ae738c26bf4ce1037fa81b039a915cbf6">DataType::FLOAT</link>;
<anchor xml:id="__token_8cpp_source_1l01048"/>01048 }
<anchor xml:id="__token_8cpp_source_1l01049"/>01049 
<anchor xml:id="__token_8cpp_source_1l01050"/><link linkend="_class_float_token_1af10a6ccf3e8f957f3926d837160bc429">01050</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_float_token_1af10a6ccf3e8f957f3926d837160bc429">FloatToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l01051"/>01051 {
<anchor xml:id="__token_8cpp_source_1l01052"/>01052 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;FloatTag&gt;(<link linkend="_class_u_p_k_token_1a1c9dbf2a5f4096f4891d57ece8e97288">uniqueToken</link>-&gt;execute());
<anchor xml:id="__token_8cpp_source_1l01053"/>01053 }
<anchor xml:id="__token_8cpp_source_1l01054"/>01054 
<anchor xml:id="__token_8cpp_source_1l01055"/><link linkend="_class_integer_token_1ab1ee2a5de4630d98a7d9cd6351947927">01055</link> <link linkend="_class_integer_token_1ab1ee2a5de4630d98a7d9cd6351947927">IntegerToken::IntegerToken</link>()&#32;:<link linkend="_class_u_p_k_token">UPKToken</link>()
<anchor xml:id="__token_8cpp_source_1l01056"/>01056 {
<anchor xml:id="__token_8cpp_source_1l01057"/>01057 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;intK;
<anchor xml:id="__token_8cpp_source_1l01058"/>01058 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca5d5cd46919fa987731fb2edefe0f2a0c">TokenVALUE::INTEGER</link>;
<anchor xml:id="__token_8cpp_source_1l01059"/>01059 &#32;&#32;&#32;&#32;<link linkend="_class_integer_token_1a30a0007432b5d56252b4a3f703569801">setOverloads</link>();
<anchor xml:id="__token_8cpp_source_1l01060"/>01060 }
<anchor xml:id="__token_8cpp_source_1l01061"/>01061 
<anchor xml:id="__token_8cpp_source_1l01062"/><link linkend="_class_integer_token_1a30a0007432b5d56252b4a3f703569801">01062</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_integer_token_1a30a0007432b5d56252b4a3f703569801">IntegerToken::setOverloads</link>()
<anchor xml:id="__token_8cpp_source_1l01063"/>01063 {
<anchor xml:id="__token_8cpp_source_1l01064"/>01064 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(),0);
<anchor xml:id="__token_8cpp_source_1l01065"/>01065 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a53f93baa3057821107c750323892fa92">DataType::INT</link>,<emphasis role="keyword">false</emphasis>),1);
<anchor xml:id="__token_8cpp_source_1l01066"/>01066 }
<anchor xml:id="__token_8cpp_source_1l01067"/>01067 
<anchor xml:id="__token_8cpp_source_1l01068"/>01068 
<anchor xml:id="__token_8cpp_source_1l01069"/>01069 
<anchor xml:id="__token_8cpp_source_1l01070"/><link linkend="_class_integer_token_1a44d105511a638a28a59916f91059d2cd">01070</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_integer_token_1a44d105511a638a28a59916f91059d2cd">IntegerToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01071"/>01071 {
<anchor xml:id="__token_8cpp_source_1l01072"/>01072 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a53f93baa3057821107c750323892fa92">DataType::INT</link>;
<anchor xml:id="__token_8cpp_source_1l01073"/>01073 }
<anchor xml:id="__token_8cpp_source_1l01074"/>01074 
<anchor xml:id="__token_8cpp_source_1l01075"/>01075 
<anchor xml:id="__token_8cpp_source_1l01076"/>01076 
<anchor xml:id="__token_8cpp_source_1l01077"/><link linkend="_class_integer_token_1a33e827ea234b1c0b5b305b5857331960">01077</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_integer_token_1a33e827ea234b1c0b5b305b5857331960">IntegerToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l01078"/>01078 {
<anchor xml:id="__token_8cpp_source_1l01079"/>01079 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;IntTag&gt;(<link linkend="_class_u_p_k_token_1a1c9dbf2a5f4096f4891d57ece8e97288">uniqueToken</link>-&gt;execute());
<anchor xml:id="__token_8cpp_source_1l01080"/>01080 }
<anchor xml:id="__token_8cpp_source_1l01081"/>01081 
<anchor xml:id="__token_8cpp_source_1l01082"/><link linkend="_class_store_token_1afacb2d9d11cafbf437764c86753029b4">01082</link> <link linkend="_class_store_token_1afacb2d9d11cafbf437764c86753029b4">StoreToken::StoreToken</link>()&#32;:<link linkend="_class_m_p_k_token">MPKToken</link>()
<anchor xml:id="__token_8cpp_source_1l01083"/>01083 {
<anchor xml:id="__token_8cpp_source_1l01084"/>01084 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;storeK;
<anchor xml:id="__token_8cpp_source_1l01085"/>01085 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca3cfba54f6873dfd55b0b09d32910b20e">TokenVALUE::STORE</link>;
<anchor xml:id="__token_8cpp_source_1l01086"/>01086 &#32;&#32;&#32;&#32;<link linkend="_class_store_token_1a153770d480bad3f9c611084e64641a78">setOverloads</link>();
<anchor xml:id="__token_8cpp_source_1l01087"/>01087 }
<anchor xml:id="__token_8cpp_source_1l01088"/>01088 
<anchor xml:id="__token_8cpp_source_1l01089"/><link linkend="_class_store_token_1a153770d480bad3f9c611084e64641a78">01089</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_store_token_1a153770d480bad3f9c611084e64641a78">StoreToken::setOverloads</link>()
<anchor xml:id="__token_8cpp_source_1l01090"/>01090 {
<anchor xml:id="__token_8cpp_source_1l01091"/>01091 
<anchor xml:id="__token_8cpp_source_1l01092"/>01092 }
<anchor xml:id="__token_8cpp_source_1l01093"/><link linkend="_class_store_token_1ab7dd1b936a3f820ab3b06091496f434d">01093</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_store_token_1ab7dd1b936a3f820ab3b06091496f434d">StoreToken::dispatchArguments</link>()
<anchor xml:id="__token_8cpp_source_1l01094"/>01094 {
<anchor xml:id="__token_8cpp_source_1l01095"/>01095 }
<anchor xml:id="__token_8cpp_source_1l01096"/>01096 
<anchor xml:id="__token_8cpp_source_1l01097"/>01097 
<anchor xml:id="__token_8cpp_source_1l01098"/><link linkend="_class_store_token_1a431a003fb845c3562c1ebab9b2b40bcd">01098</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_store_token_1a431a003fb845c3562c1ebab9b2b40bcd">StoreToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l01099"/>01099 {
<anchor xml:id="__token_8cpp_source_1l01100"/>01100 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l01101"/>01101 }
<anchor xml:id="__token_8cpp_source_1l01102"/>01102 
<anchor xml:id="__token_8cpp_source_1l01103"/><link linkend="_class_list_token_1a6f8b1c210bafe2fe677ddb92726567aa">01103</link> <link linkend="_class_list_token_1a6f8b1c210bafe2fe677ddb92726567aa">ListToken::ListToken</link>()&#32;:<link linkend="_class_m_p_k_token">MPKToken</link>()
<anchor xml:id="__token_8cpp_source_1l01104"/>01104 {
<anchor xml:id="__token_8cpp_source_1l01105"/>01105 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;listK;
<anchor xml:id="__token_8cpp_source_1l01106"/>01106 &#32;&#32;&#32;&#32;<link linkend="_class_list_token_1ac099c58eaacdd550708afdfb00eb8ba1">dType</link>&#32;=&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6ab50339a10e1de285ac99d4c3990b8693">DataType::NONE</link>;
<anchor xml:id="__token_8cpp_source_1l01107"/>01107 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca298cb25408234de02baf2085803a464a">TokenVALUE::LIST</link>;
<anchor xml:id="__token_8cpp_source_1l01108"/>01108 &#32;&#32;&#32;&#32;<link linkend="_class_list_token_1a7d31a5d4d920fbdaaa0073c76d9051a3">setOverloads</link>();
<anchor xml:id="__token_8cpp_source_1l01109"/>01109 }
<anchor xml:id="__token_8cpp_source_1l01110"/>01110 
<anchor xml:id="__token_8cpp_source_1l01111"/><link linkend="_class_list_token_1a7d31a5d4d920fbdaaa0073c76d9051a3">01111</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_list_token_1a7d31a5d4d920fbdaaa0073c76d9051a3">ListToken::setOverloads</link>()
<anchor xml:id="__token_8cpp_source_1l01112"/>01112 {
<anchor xml:id="__token_8cpp_source_1l01113"/>01113 
<anchor xml:id="__token_8cpp_source_1l01114"/>01114 }
<anchor xml:id="__token_8cpp_source_1l01115"/>01115 
<anchor xml:id="__token_8cpp_source_1l01116"/><link linkend="_class_list_token_1a7fe18acce7131bdfb768b8a8977173d3">01116</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_list_token_1a7fe18acce7131bdfb768b8a8977173d3">ListToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l01117"/>01117 {
<anchor xml:id="__token_8cpp_source_1l01118"/>01118 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l01119"/>01119 }
<anchor xml:id="__token_8cpp_source_1l01120"/>01120 
<anchor xml:id="__token_8cpp_source_1l01121"/><link linkend="_class_string_token_1a4d387ee58a3492caf7cc5b5c69ea1577">01121</link> <link linkend="_class_string_token_1a4d387ee58a3492caf7cc5b5c69ea1577">StringToken::StringToken</link>()&#32;:<link linkend="_class_u_p_k_token">UPKToken</link>()
<anchor xml:id="__token_8cpp_source_1l01122"/>01122 {
<anchor xml:id="__token_8cpp_source_1l01123"/>01123 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;stringK;
<anchor xml:id="__token_8cpp_source_1l01124"/>01124 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca63b588d5559f64f89a416e656880b949">TokenVALUE::STRING</link>;
<anchor xml:id="__token_8cpp_source_1l01125"/>01125 &#32;&#32;&#32;&#32;<link linkend="_class_string_token_1a5f90b2ff445397ebeb3ae09dbbc749f5">setOverloads</link>();
<anchor xml:id="__token_8cpp_source_1l01126"/>01126 }
<anchor xml:id="__token_8cpp_source_1l01127"/>01127 
<anchor xml:id="__token_8cpp_source_1l01128"/><link linkend="_class_string_token_1ab187083803bf50b09787ed3eb1d4424d">01128</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_string_token_1ab187083803bf50b09787ed3eb1d4424d">StringToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01129"/>01129 {
<anchor xml:id="__token_8cpp_source_1l01130"/>01130 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a63b588d5559f64f89a416e656880b949">DataType::STRING</link>;
<anchor xml:id="__token_8cpp_source_1l01131"/>01131 }
<anchor xml:id="__token_8cpp_source_1l01132"/>01132 
<anchor xml:id="__token_8cpp_source_1l01133"/><link linkend="_class_string_token_1a5f90b2ff445397ebeb3ae09dbbc749f5">01133</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_string_token_1a5f90b2ff445397ebeb3ae09dbbc749f5">StringToken::setOverloads</link>()
<anchor xml:id="__token_8cpp_source_1l01134"/>01134 {
<anchor xml:id="__token_8cpp_source_1l01135"/>01135 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(),0);
<anchor xml:id="__token_8cpp_source_1l01136"/>01136 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a63b588d5559f64f89a416e656880b949">DataType::STRING</link>,&#32;<emphasis role="keyword">false</emphasis>),1);
<anchor xml:id="__token_8cpp_source_1l01137"/>01137 }
<anchor xml:id="__token_8cpp_source_1l01138"/>01138 
<anchor xml:id="__token_8cpp_source_1l01139"/><link linkend="_class_string_token_1a1dbc21181980b768c55acb13d0213601">01139</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_string_token_1a1dbc21181980b768c55acb13d0213601">StringToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l01140"/>01140 {
<anchor xml:id="__token_8cpp_source_1l01141"/>01141 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_shared&lt;StringTag&gt;();
<anchor xml:id="__token_8cpp_source_1l01142"/>01142 }
<anchor xml:id="__token_8cpp_source_1l01143"/>01143 
<anchor xml:id="__token_8cpp_source_1l01144"/><link linkend="_class_second_token_1adf8fe7d7c5ae3fc0f72dd5035f7fa317">01144</link> <link linkend="_class_second_token_1adf8fe7d7c5ae3fc0f72dd5035f7fa317">SecondToken::SecondToken</link>()
<anchor xml:id="__token_8cpp_source_1l01145"/>01145 {
<anchor xml:id="__token_8cpp_source_1l01146"/>01146 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;secondL;
<anchor xml:id="__token_8cpp_source_1l01147"/>01147 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca2200becb80f0019c4a2ccecec350d0db">TokenVALUE::SECOND</link>;
<anchor xml:id="__token_8cpp_source_1l01148"/>01148 }
<anchor xml:id="__token_8cpp_source_1l01149"/>01149 
<anchor xml:id="__token_8cpp_source_1l01150"/><link linkend="_class_second_token_1a0d07e77bec144d89937bd841521f7e23">01150</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_second_token_1a0d07e77bec144d89937bd841521f7e23">SecondToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01151"/>01151 {
<anchor xml:id="__token_8cpp_source_1l01152"/>01152 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6af03689713d1683f6872267046e6de33c">DataType::TIMETYPE</link>;
<anchor xml:id="__token_8cpp_source_1l01153"/>01153 }
<anchor xml:id="__token_8cpp_source_1l01154"/>01154 
<anchor xml:id="__token_8cpp_source_1l01155"/><link linkend="_class_milli_second_token_1a0a728a23e8a29752ba7e999143741fd3">01155</link> <link linkend="_class_milli_second_token_1a0a728a23e8a29752ba7e999143741fd3">MilliSecondToken::MilliSecondToken</link>()
<anchor xml:id="__token_8cpp_source_1l01156"/>01156 {
<anchor xml:id="__token_8cpp_source_1l01157"/>01157 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;millisecondL;
<anchor xml:id="__token_8cpp_source_1l01158"/>01158 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca241d7907de05ad50c011812e927cd671">TokenVALUE::MILLISECOND</link>;
<anchor xml:id="__token_8cpp_source_1l01159"/>01159 }
<anchor xml:id="__token_8cpp_source_1l01160"/>01160 
<anchor xml:id="__token_8cpp_source_1l01161"/><link linkend="_class_milli_second_token_1a50a6415a61ced0fd046edf1f1060ec10">01161</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_milli_second_token_1a50a6415a61ced0fd046edf1f1060ec10">MilliSecondToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01162"/>01162 {
<anchor xml:id="__token_8cpp_source_1l01163"/>01163 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6af03689713d1683f6872267046e6de33c">DataType::TIMETYPE</link>;
<anchor xml:id="__token_8cpp_source_1l01164"/>01164 }
<anchor xml:id="__token_8cpp_source_1l01165"/>01165 
<anchor xml:id="__token_8cpp_source_1l01166"/><link linkend="_class_minute_token_1a7aecee81b39ae555fe1c231c3c80df17">01166</link> <link linkend="_class_minute_token_1a7aecee81b39ae555fe1c231c3c80df17">MinuteToken::MinuteToken</link>()
<anchor xml:id="__token_8cpp_source_1l01167"/>01167 {
<anchor xml:id="__token_8cpp_source_1l01168"/>01168 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;minuteL;
<anchor xml:id="__token_8cpp_source_1l01169"/>01169 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca46bda4cde2f10bdb9e51e3bbefa4a2bf">TokenVALUE::MINUTE</link>;
<anchor xml:id="__token_8cpp_source_1l01170"/>01170 }
<anchor xml:id="__token_8cpp_source_1l01171"/>01171 
<anchor xml:id="__token_8cpp_source_1l01172"/><link linkend="_class_minute_token_1a5403bb0e7b0bb4e5895c4347b9f6fb13">01172</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_minute_token_1a5403bb0e7b0bb4e5895c4347b9f6fb13">MinuteToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01173"/>01173 {
<anchor xml:id="__token_8cpp_source_1l01174"/>01174 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6af03689713d1683f6872267046e6de33c">DataType::TIMETYPE</link>;
<anchor xml:id="__token_8cpp_source_1l01175"/>01175 }
<anchor xml:id="__token_8cpp_source_1l01176"/>01176 
<anchor xml:id="__token_8cpp_source_1l01177"/><link linkend="_class_numeric_token_1a7f1b43277fb39aeab23502635e8a0126">01177</link> <link linkend="_class_numeric_token_1a7f1b43277fb39aeab23502635e8a0126">NumericToken::NumericToken</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;nb)
<anchor xml:id="__token_8cpp_source_1l01178"/>01178 {
<anchor xml:id="__token_8cpp_source_1l01179"/>01179 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46cab22f521f17b09d0fd389e231f8f6d66d">TokenVALUE::NUMERIC</link>;
<anchor xml:id="__token_8cpp_source_1l01180"/>01180 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;nb;
<anchor xml:id="__token_8cpp_source_1l01181"/>01181 &#32;&#32;&#32;&#32;<link linkend="_class_numeric_token_1a3349ba56e3f951e3c3473b66fcf195ee">number</link>&#32;=&#32;std::stoi(nb);
<anchor xml:id="__token_8cpp_source_1l01182"/>01182 }
<anchor xml:id="__token_8cpp_source_1l01183"/>01183 
<anchor xml:id="__token_8cpp_source_1l01184"/><link linkend="_class_numeric_token_1a1f22f3c47b7b5a167915b0a706415d7f">01184</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_numeric_token_1a1f22f3c47b7b5a167915b0a706415d7f">NumericToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01185"/>01185 {
<anchor xml:id="__token_8cpp_source_1l01186"/>01186 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a53f93baa3057821107c750323892fa92">DataType::INT</link>;
<anchor xml:id="__token_8cpp_source_1l01187"/>01187 }
<anchor xml:id="__token_8cpp_source_1l01188"/>01188 
<anchor xml:id="__token_8cpp_source_1l01189"/><link linkend="_class_unknown_token_1ac37d05a7251a0636f36a703cc69bbc69">01189</link> <link linkend="_class_unknown_token_1ac37d05a7251a0636f36a703cc69bbc69">UnknownToken::UnknownToken</link>():<link linkend="_class_token">Token</link>()
<anchor xml:id="__token_8cpp_source_1l01190"/>01190 {
<anchor xml:id="__token_8cpp_source_1l01191"/>01191 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca696b031073e74bf2cb98e5ef201d4aa3">TokenVALUE::UNKNOWN</link>;
<anchor xml:id="__token_8cpp_source_1l01192"/>01192 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;<emphasis role="stringliteral">&quot;Unknown&quot;</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01193"/>01193 }
<anchor xml:id="__token_8cpp_source_1l01194"/>01194 
<anchor xml:id="__token_8cpp_source_1l01195"/><link linkend="_class_string_literal_token_1af17431409d177d987b1e7e2851658e04">01195</link> <link linkend="_class_string_literal_token_1af17431409d177d987b1e7e2851658e04">StringLiteralToken::StringLiteralToken</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;content)&#32;:<link linkend="_class_l_token">LToken</link>()
<anchor xml:id="__token_8cpp_source_1l01196"/>01196 {
<anchor xml:id="__token_8cpp_source_1l01197"/>01197 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;content;
<anchor xml:id="__token_8cpp_source_1l01198"/>01198 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46cace7e8413589722ee650cbce0ea040f86">TokenVALUE::STRINGLITERAL</link>;
<anchor xml:id="__token_8cpp_source_1l01199"/>01199 }
<anchor xml:id="__token_8cpp_source_1l01200"/>01200 
<anchor xml:id="__token_8cpp_source_1l01201"/><link linkend="_class_string_literal_token_1a5326912d8172c27505120fcac4d3977b">01201</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_string_literal_token_1a5326912d8172c27505120fcac4d3977b">StringLiteralToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01202"/>01202 {
<anchor xml:id="__token_8cpp_source_1l01203"/>01203 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a63b588d5559f64f89a416e656880b949">DataType::STRING</link>;
<anchor xml:id="__token_8cpp_source_1l01204"/>01204 }
<anchor xml:id="__token_8cpp_source_1l01205"/>01205 
<anchor xml:id="__token_8cpp_source_1l01206"/>01206 
<anchor xml:id="__token_8cpp_source_1l01207"/>01207 
<anchor xml:id="__token_8cpp_source_1l01208"/><link linkend="_class_string_literal_token_1a9f1db1ae9a350867f394676d5b809be3">01208</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_string_literal_token_1a9f1db1ae9a350867f394676d5b809be3">StringLiteralToken::execute</link>()
<anchor xml:id="__token_8cpp_source_1l01209"/>01209 {
<anchor xml:id="__token_8cpp_source_1l01210"/>01210 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l01211"/>01211 }
<anchor xml:id="__token_8cpp_source_1l01212"/>01212 
<anchor xml:id="__token_8cpp_source_1l01213"/><link linkend="_class_close_angle_brackets_token_1a2009810627062cc4676f13c689e5c383">01213</link> <link linkend="_class_close_angle_brackets_token_1a2009810627062cc4676f13c689e5c383">CloseAngleBracketsToken::CloseAngleBracketsToken</link>()
<anchor xml:id="__token_8cpp_source_1l01214"/>01214 {
<anchor xml:id="__token_8cpp_source_1l01215"/>01215 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;closeAngleBracketsP;
<anchor xml:id="__token_8cpp_source_1l01216"/>01216 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46cad473a02cda3fb53f1def18c632bf4e9d">TokenVALUE::CLOSEANGLEBRACKETS</link>;
<anchor xml:id="__token_8cpp_source_1l01217"/>01217 }
<anchor xml:id="__token_8cpp_source_1l01218"/>01218 
<anchor xml:id="__token_8cpp_source_1l01219"/><link linkend="_class_open_angle_brackets_token_1a64a65c59aebef72567fcb68046362e9f">01219</link> <link linkend="_class_open_angle_brackets_token_1a64a65c59aebef72567fcb68046362e9f">OpenAngleBracketsToken::OpenAngleBracketsToken</link>()
<anchor xml:id="__token_8cpp_source_1l01220"/>01220 {
<anchor xml:id="__token_8cpp_source_1l01221"/>01221 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;openAngleBracketsP;
<anchor xml:id="__token_8cpp_source_1l01222"/>01222 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca09d62a98aa0b2c29e66b3f81c3641657">TokenVALUE::OPENANGLEBRACKETS</link>;
<anchor xml:id="__token_8cpp_source_1l01223"/>01223 }
<anchor xml:id="__token_8cpp_source_1l01224"/>01224 
<anchor xml:id="__token_8cpp_source_1l01225"/>01225 
<anchor xml:id="__token_8cpp_source_1l01226"/>01226 
<anchor xml:id="__token_8cpp_source_1l01227"/>01227 
<anchor xml:id="__token_8cpp_source_1l01228"/>01228 
<anchor xml:id="__token_8cpp_source_1l01229"/>01229 
<anchor xml:id="__token_8cpp_source_1l01230"/>01230 
<anchor xml:id="__token_8cpp_source_1l01231"/>01231 
<anchor xml:id="__token_8cpp_source_1l01232"/>01232 
<anchor xml:id="__token_8cpp_source_1l01233"/>01233 
<anchor xml:id="__token_8cpp_source_1l01234"/>01234 
<anchor xml:id="__token_8cpp_source_1l01235"/><link linkend="_class_token_result_1ac49cd5f7a236cd78ac5633df0144e54b">01235</link> <link linkend="_class_token_result_1ac49cd5f7a236cd78ac5633df0144e54b">TokenResult::TokenResult</link>()
<anchor xml:id="__token_8cpp_source_1l01236"/>01236 {
<anchor xml:id="__token_8cpp_source_1l01237"/>01237 &#32;&#32;&#32;&#32;<link linkend="_class_token_result_1aa1a7a63f6db6f6b21efb96a3d0719612">varTable</link>&#32;=&#32;std::map&lt;std::string,&#32;DataType&gt;();
<anchor xml:id="__token_8cpp_source_1l01238"/>01238 &#32;&#32;&#32;&#32;<link linkend="_class_token_result_1aaee92ea30db77e26bc0461db5908367a">listErrors</link>&#32;=&#32;std::vector&lt;Error&gt;();
<anchor xml:id="__token_8cpp_source_1l01239"/>01239 }
<anchor xml:id="__token_8cpp_source_1l01240"/>01240 
<anchor xml:id="__token_8cpp_source_1l01241"/><link linkend="_class_token_result_1a6219f0d8d1e1aeca36b204c41c739f28">01241</link> <link linkend="_class_token_result_1ac49cd5f7a236cd78ac5633df0144e54b">TokenResult::TokenResult</link>(<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;value,&#32;<emphasis role="keywordtype">int</emphasis>&#32;l)&#32;:<link linkend="_class_token_result">TokenResult</link>()
<anchor xml:id="__token_8cpp_source_1l01242"/>01242 {
<anchor xml:id="__token_8cpp_source_1l01243"/>01243 }
<anchor xml:id="__token_8cpp_source_1l01244"/>01244 
<anchor xml:id="__token_8cpp_source_1l01245"/><link linkend="_class_token_result_1a1b90cbf9042a502868ffbb657399f5bf">01245</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_token_result_1a1b90cbf9042a502868ffbb657399f5bf">TokenResult::showErrors</link>()
<anchor xml:id="__token_8cpp_source_1l01246"/>01246 {
<anchor xml:id="__token_8cpp_source_1l01247"/>01247 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;error&#32;:&#32;<link linkend="_class_token_result_1aaee92ea30db77e26bc0461db5908367a">listErrors</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l01248"/>01248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;error.showError();
<anchor xml:id="__token_8cpp_source_1l01249"/>01249 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01250"/>01250 }
<anchor xml:id="__token_8cpp_source_1l01251"/>01251 
<anchor xml:id="__token_8cpp_source_1l01252"/><link linkend="_class_token_result_1af997915a62dcb5643b9d61b78a22c9f4">01252</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_token_result_1af997915a62dcb5643b9d61b78a22c9f4">TokenResult::addError</link>(<emphasis role="keywordtype">int</emphasis>&#32;l,<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;value,&#32;<link linkend="__token_8h_1ab0df38968e4f03a3f1f6d6df0f31f45a">ErrorType</link>&#32;et)
<anchor xml:id="__token_8cpp_source_1l01253"/>01253 {
<anchor xml:id="__token_8cpp_source_1l01254"/>01254 &#32;&#32;&#32;&#32;<link linkend="_class_token_result_1aaee92ea30db77e26bc0461db5908367a">listErrors</link>.push_back(<link linkend="_class_error">Error</link>(l,value,&#32;et));
<anchor xml:id="__token_8cpp_source_1l01255"/>01255 }
<anchor xml:id="__token_8cpp_source_1l01256"/>01256 
<anchor xml:id="__token_8cpp_source_1l01257"/><link linkend="_class_token_result_1a713d0d1a5ecd4867ac7d430f68f31c2d">01257</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_token_result_1af997915a62dcb5643b9d61b78a22c9f4">TokenResult::addError</link>(<emphasis role="keywordtype">int</emphasis>&#32;l,<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;type)
<anchor xml:id="__token_8cpp_source_1l01258"/>01258 {
<anchor xml:id="__token_8cpp_source_1l01259"/>01259 &#32;&#32;&#32;&#32;<link linkend="_class_token_result_1aaee92ea30db77e26bc0461db5908367a">listErrors</link>.push_back(<link linkend="_class_error">Error</link>(l,type));
<anchor xml:id="__token_8cpp_source_1l01260"/>01260 }
<anchor xml:id="__token_8cpp_source_1l01261"/>01261 
<anchor xml:id="__token_8cpp_source_1l01262"/><link linkend="_class_token_result_1a34c94fc6f4e8703dc3c17b7c6a593a74">01262</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_token_result_1af997915a62dcb5643b9d61b78a22c9f4">TokenResult::addError</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01263"/>01263 {
<anchor xml:id="__token_8cpp_source_1l01264"/>01264 &#32;&#32;&#32;&#32;<link linkend="_class_token_result_1aaee92ea30db77e26bc0461db5908367a">listErrors</link>.insert(<link linkend="_class_token_result_1aaee92ea30db77e26bc0461db5908367a">listErrors</link>.end(),&#32;tRes.<link linkend="_class_token_result_1aaee92ea30db77e26bc0461db5908367a">listErrors</link>.begin(),&#32;tRes.<link linkend="_class_token_result_1aaee92ea30db77e26bc0461db5908367a">listErrors</link>.end());
<anchor xml:id="__token_8cpp_source_1l01265"/>01265 }
<anchor xml:id="__token_8cpp_source_1l01266"/>01266 
<anchor xml:id="__token_8cpp_source_1l01267"/><link linkend="_class_token_result_1acfc405b7a0e288b9463f24fd105931cf">01267</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_token_result_1acfc405b7a0e288b9463f24fd105931cf">TokenResult::addVar</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;name,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&amp;&#32;type)
<anchor xml:id="__token_8cpp_source_1l01268"/>01268 {
<anchor xml:id="__token_8cpp_source_1l01269"/>01269 &#32;&#32;&#32;&#32;<link linkend="_class_token_result_1aa1a7a63f6db6f6b21efb96a3d0719612">varTable</link>.insert(std::pair&lt;std::string,&#32;DataType&gt;(name,&#32;type));
<anchor xml:id="__token_8cpp_source_1l01270"/>01270 }
<anchor xml:id="__token_8cpp_source_1l01271"/>01271 
<anchor xml:id="__token_8cpp_source_1l01272"/><link linkend="_class_token_result_1aa4c6c97f68ddda0e5a14a2c5bc51fbff">01272</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_token_result_1aa4c6c97f68ddda0e5a14a2c5bc51fbff">TokenResult::success</link>()
<anchor xml:id="__token_8cpp_source_1l01273"/>01273 {
<anchor xml:id="__token_8cpp_source_1l01274"/>01274 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_token_result_1aaee92ea30db77e26bc0461db5908367a">listErrors</link>.empty();
<anchor xml:id="__token_8cpp_source_1l01275"/>01275 }
<anchor xml:id="__token_8cpp_source_1l01276"/>01276 
<anchor xml:id="__token_8cpp_source_1l01277"/><link linkend="_class_token_result_1a9dd11c802bde0c755168f74b134e5cbc">01277</link> std::map&lt;std::string,&#32;DataType&gt;&#32;<link linkend="_class_token_result_1a9dd11c802bde0c755168f74b134e5cbc">TokenResult::getVarTable</link>()
<anchor xml:id="__token_8cpp_source_1l01278"/>01278 {
<anchor xml:id="__token_8cpp_source_1l01279"/>01279 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_token_result_1aa1a7a63f6db6f6b21efb96a3d0719612">varTable</link>;
<anchor xml:id="__token_8cpp_source_1l01280"/>01280 }
<anchor xml:id="__token_8cpp_source_1l01281"/>01281 
<anchor xml:id="__token_8cpp_source_1l01282"/><link linkend="_class_token_1aa3c5868ba4115f3189df6b2ac5b36f39">01282</link> <link linkend="_class_token_1aa3c5868ba4115f3189df6b2ac5b36f39">Token::Token</link>()
<anchor xml:id="__token_8cpp_source_1l01283"/>01283 {
<anchor xml:id="__token_8cpp_source_1l01284"/>01284 &#32;&#32;&#32;&#32;
<anchor xml:id="__token_8cpp_source_1l01285"/>01285 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>&#32;=&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca94c8aa2452bccd82ee129b46f7c4be79">TokenVALUE::TOKEN</link>;
<anchor xml:id="__token_8cpp_source_1l01286"/>01286 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>&#32;=&#32;<emphasis role="stringliteral">&quot;Token&quot;</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01287"/>01287 &#32;&#32;&#32;&#32;<link linkend="_class_token_1a4b96c2a31d7c374fd2bd1986794f80dd">line</link>&#32;=&#32;0;
<anchor xml:id="__token_8cpp_source_1l01288"/>01288 }
<anchor xml:id="__token_8cpp_source_1l01289"/>01289 
<anchor xml:id="__token_8cpp_source_1l01290"/><link linkend="_class_error_1aca339d00ad8481fb4c184f0ece42698b">01290</link> <link linkend="_class_error_1aca339d00ad8481fb4c184f0ece42698b">Error::Error</link>()
<anchor xml:id="__token_8cpp_source_1l01291"/>01291 {
<anchor xml:id="__token_8cpp_source_1l01292"/>01292 &#32;&#32;&#32;&#32;<link linkend="_class_error_1a69186124b4acc75df505345de7b934a1">dType</link>&#32;=&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6ab50339a10e1de285ac99d4c3990b8693">DataType::NONE</link>;
<anchor xml:id="__token_8cpp_source_1l01293"/>01293 &#32;&#32;&#32;&#32;<link linkend="_class_error_1a435fcafbddc8eb133017119c555a2ed0">errorType</link>&#32;=&#32;<link linkend="__token_8h_1ab0df38968e4f03a3f1f6d6df0f31f45aa02ff2101e64dbed6c34c715aa8d5cfea">ErrorType::DATATYPE</link>;
<anchor xml:id="__token_8cpp_source_1l01294"/>01294 }
<anchor xml:id="__token_8cpp_source_1l01295"/>01295 
<anchor xml:id="__token_8cpp_source_1l01296"/><link linkend="_class_error_1af16825f33a69e7a5d02b0e1b329c87e1">01296</link> <link linkend="_class_error_1aca339d00ad8481fb4c184f0ece42698b">Error::Error</link>(<emphasis role="keywordtype">int</emphasis>&#32;el,&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;tv,&#32;<link linkend="__token_8h_1ab0df38968e4f03a3f1f6d6df0f31f45a">ErrorType</link>&#32;et)&#32;:<link linkend="_class_error">Error</link>()
<anchor xml:id="__token_8cpp_source_1l01297"/>01297 {
<anchor xml:id="__token_8cpp_source_1l01298"/>01298 &#32;&#32;&#32;&#32;<link linkend="_class_error_1a435fcafbddc8eb133017119c555a2ed0">errorType</link>&#32;=&#32;et;
<anchor xml:id="__token_8cpp_source_1l01299"/>01299 &#32;&#32;&#32;&#32;<link linkend="_class_error_1ad04a7a6376aba5b6337b3865648ef8ba">errorValue</link>&#32;=&#32;tv;
<anchor xml:id="__token_8cpp_source_1l01300"/>01300 &#32;&#32;&#32;&#32;<link linkend="_class_error_1acbea8a404e63977dc75c9f5e615fabe5">errorLine</link>&#32;=&#32;el;
<anchor xml:id="__token_8cpp_source_1l01301"/>01301 }
<anchor xml:id="__token_8cpp_source_1l01302"/>01302 
<anchor xml:id="__token_8cpp_source_1l01303"/><link linkend="_class_error_1a2dea54bb28d319f647a1e94ddc689d8a">01303</link> <link linkend="_class_error_1aca339d00ad8481fb4c184f0ece42698b">Error::Error</link>(<emphasis role="keywordtype">int</emphasis>&#32;el,&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;dType)&#32;:<link linkend="_class_error">Error</link>()
<anchor xml:id="__token_8cpp_source_1l01304"/>01304 {
<anchor xml:id="__token_8cpp_source_1l01305"/>01305 &#32;&#32;&#32;&#32;<link linkend="_class_error_1acbea8a404e63977dc75c9f5e615fabe5">errorLine</link>&#32;=&#32;el;
<anchor xml:id="__token_8cpp_source_1l01306"/>01306 &#32;&#32;&#32;&#32;this-&gt;dType&#32;=&#32;<link linkend="_class_error_1a69186124b4acc75df505345de7b934a1">dType</link>;
<anchor xml:id="__token_8cpp_source_1l01307"/>01307 }
<anchor xml:id="__token_8cpp_source_1l01308"/>01308 
<anchor xml:id="__token_8cpp_source_1l01309"/><link linkend="_class_error_1a690b81205a544b44f91746f086b752d2">01309</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_error_1a690b81205a544b44f91746f086b752d2">Error::showError</link>()
<anchor xml:id="__token_8cpp_source_1l01310"/>01310 {
<anchor xml:id="__token_8cpp_source_1l01311"/>01311 }
<anchor xml:id="__token_8cpp_source_1l01312"/>01312 
<anchor xml:id="__token_8cpp_source_1l01313"/><link linkend="_class_token_1ade47ed51e2f495f6d847c1bff9fe8db6">01313</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_token_1ade47ed51e2f495f6d847c1bff9fe8db6">Token::addError</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes,<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;value,&#32;<link linkend="__token_8h_1ab0df38968e4f03a3f1f6d6df0f31f45a">ErrorType</link>&#32;et)
<anchor xml:id="__token_8cpp_source_1l01314"/>01314 {
<anchor xml:id="__token_8cpp_source_1l01315"/>01315 &#32;&#32;&#32;&#32;tRes.<link linkend="_class_token_result_1af997915a62dcb5643b9d61b78a22c9f4">addError</link>(<link linkend="_class_token_1a4b96c2a31d7c374fd2bd1986794f80dd">line</link>,value,&#32;et&#32;);
<anchor xml:id="__token_8cpp_source_1l01316"/>01316 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01317"/>01317 }
<anchor xml:id="__token_8cpp_source_1l01318"/>01318 
<anchor xml:id="__token_8cpp_source_1l01319"/><link linkend="_class_token_1a61f4575ae9e05b93b8812ae9cbacc0f0">01319</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_token_1ade47ed51e2f495f6d847c1bff9fe8db6">Token::addError</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes,<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;type)
<anchor xml:id="__token_8cpp_source_1l01320"/>01320 {
<anchor xml:id="__token_8cpp_source_1l01321"/>01321 &#32;&#32;&#32;&#32;tRes.<link linkend="_class_token_result_1af997915a62dcb5643b9d61b78a22c9f4">addError</link>(<link linkend="_class_token_1a4b96c2a31d7c374fd2bd1986794f80dd">line</link>,type);
<anchor xml:id="__token_8cpp_source_1l01322"/>01322 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01323"/>01323 }
<anchor xml:id="__token_8cpp_source_1l01324"/>01324 
<anchor xml:id="__token_8cpp_source_1l01325"/><link linkend="_class_flow_token_1a3a3cb964ee95cd5e565a009e4d6aabca">01325</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_flow_token_1a3a3cb964ee95cd5e565a009e4d6aabca">FlowToken::addError</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes,&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;value,&#32;<link linkend="__token_8h_1ab0df38968e4f03a3f1f6d6df0f31f45a">ErrorType</link>&#32;et)
<anchor xml:id="__token_8cpp_source_1l01326"/>01326 {
<anchor xml:id="__token_8cpp_source_1l01327"/>01327 &#32;&#32;&#32;&#32;tRes.<link linkend="_class_token_result_1af997915a62dcb5643b9d61b78a22c9f4">addError</link>(<link linkend="_class_flow_token_1ae59bc263c0116e67191479c41e72a1b7">lineFlow</link>,&#32;value,&#32;et);
<anchor xml:id="__token_8cpp_source_1l01328"/>01328 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01329"/>01329 }
<anchor xml:id="__token_8cpp_source_1l01330"/>01330 
<anchor xml:id="__token_8cpp_source_1l01331"/><link linkend="_class_flow_token_1a36e9173c9de4db214cd2fc5fb46b2c33">01331</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_flow_token_1a3a3cb964ee95cd5e565a009e4d6aabca">FlowToken::addError</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes,&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;type)
<anchor xml:id="__token_8cpp_source_1l01332"/>01332 {
<anchor xml:id="__token_8cpp_source_1l01333"/>01333 &#32;&#32;&#32;&#32;tRes.<link linkend="_class_token_result_1af997915a62dcb5643b9d61b78a22c9f4">addError</link>(<link linkend="_class_flow_token_1ae59bc263c0116e67191479c41e72a1b7">lineFlow</link>,&#32;type);
<anchor xml:id="__token_8cpp_source_1l01334"/>01334 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01335"/>01335 }
<anchor xml:id="__token_8cpp_source_1l01336"/>01336 
<anchor xml:id="__token_8cpp_source_1l01337"/>01337 
<anchor xml:id="__token_8cpp_source_1l01338"/><link linkend="_class_token_1a2643198d67a19ce0bd8102b4379d9d12">01338</link> std::string&#32;<link linkend="_class_token_1a2643198d67a19ce0bd8102b4379d9d12">Token::getTokenText</link>()
<anchor xml:id="__token_8cpp_source_1l01339"/>01339 {
<anchor xml:id="__token_8cpp_source_1l01340"/>01340 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>;
<anchor xml:id="__token_8cpp_source_1l01341"/>01341 }
<anchor xml:id="__token_8cpp_source_1l01342"/>01342 
<anchor xml:id="__token_8cpp_source_1l01343"/><link linkend="_class_token_1a0fe3c8022c8c5f6143c7dd3fba9408fe">01343</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_token_1a0fe3c8022c8c5f6143c7dd3fba9408fe">Token::getLine</link>()
<anchor xml:id="__token_8cpp_source_1l01344"/>01344 {
<anchor xml:id="__token_8cpp_source_1l01345"/>01345 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_token_1a4b96c2a31d7c374fd2bd1986794f80dd">line</link>;
<anchor xml:id="__token_8cpp_source_1l01346"/>01346 }
<anchor xml:id="__token_8cpp_source_1l01347"/>01347 
<anchor xml:id="__token_8cpp_source_1l01348"/><link linkend="_class_token_1ad3fb88977cc7e687450f46e4f9d80a05">01348</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_token_1ad3fb88977cc7e687450f46e4f9d80a05">Token::hasValue</link>(<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;value)<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="__token_8cpp_source_1l01349"/>01349 <emphasis role="keyword"></emphasis>{
<anchor xml:id="__token_8cpp_source_1l01350"/>01350 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>==value;
<anchor xml:id="__token_8cpp_source_1l01351"/>01351 }
<anchor xml:id="__token_8cpp_source_1l01352"/>01352 
<anchor xml:id="__token_8cpp_source_1l01353"/><link linkend="_class_flow_token_1aa69e84b8a62c2aa66bc8b3a0e6b18664">01353</link> <link linkend="_class_flow_token_1aa69e84b8a62c2aa66bc8b3a0e6b18664">FlowToken::FlowToken</link>()
<anchor xml:id="__token_8cpp_source_1l01354"/>01354 {
<anchor xml:id="__token_8cpp_source_1l01355"/>01355 
<anchor xml:id="__token_8cpp_source_1l01356"/>01356 }
<anchor xml:id="__token_8cpp_source_1l01357"/>01357 
<anchor xml:id="__token_8cpp_source_1l01358"/><link linkend="_class_flow_token_1a5d10627ebe6ec8a5c023f249b31ecdd0">01358</link> <link linkend="_class_flow_token_1aa69e84b8a62c2aa66bc8b3a0e6b18664">FlowToken::FlowToken</link>(<emphasis role="keywordtype">int</emphasis>&#32;line):<link linkend="_class_flow_token">FlowToken</link>()
<anchor xml:id="__token_8cpp_source_1l01359"/>01359 {
<anchor xml:id="__token_8cpp_source_1l01360"/>01360 &#32;&#32;&#32;&#32;<link linkend="_class_flow_token_1ae59bc263c0116e67191479c41e72a1b7">lineFlow</link>&#32;=&#32;line;
<anchor xml:id="__token_8cpp_source_1l01361"/>01361 }
<anchor xml:id="__token_8cpp_source_1l01362"/>01362 
<anchor xml:id="__token_8cpp_source_1l01363"/>01363 
<anchor xml:id="__token_8cpp_source_1l01364"/>01364 
<anchor xml:id="__token_8cpp_source_1l01365"/><link linkend="_class_flow_token_1a8998fbb1c5e25b91be1936ff7ecbdc88">01365</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_flow_token_1a8998fbb1c5e25b91be1936ff7ecbdc88">FlowToken::showTokenTree</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nestedLayer)
<anchor xml:id="__token_8cpp_source_1l01366"/>01366 {
<anchor xml:id="__token_8cpp_source_1l01367"/>01367 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;openBracketsP&#32;+&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01368"/>01368 &#32;&#32;&#32;&#32;<link linkend="_class_flow_token_1a5beb3e184d04cac91394633c7c33cc3d">printTabs</link>(nestedLayer&#32;+&#32;1);
<anchor xml:id="__token_8cpp_source_1l01369"/>01369 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;elem&#32;:&#32;<link linkend="_class_flow_token_1a983bda19879009577e51360d9bdc93da">nestedTokens</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l01370"/>01370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;elem-&gt;showTokenTree(nestedLayer&#32;+&#32;1);
<anchor xml:id="__token_8cpp_source_1l01371"/>01371 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01372"/>01372 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01373"/>01373 &#32;&#32;&#32;&#32;<link linkend="_class_flow_token_1a5beb3e184d04cac91394633c7c33cc3d">printTabs</link>(nestedLayer);
<anchor xml:id="__token_8cpp_source_1l01374"/>01374 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;closeBracketsP&#32;+&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01375"/>01375 }
<anchor xml:id="__token_8cpp_source_1l01376"/>01376 
<anchor xml:id="__token_8cpp_source_1l01377"/><link linkend="_class_flow_token_1adca9213b63d564c72ec40a97f0af8210">01377</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_flow_token_1adca9213b63d564c72ec40a97f0af8210">FlowToken::addToken</link>(<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;tVal,&#32;<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01378"/>01378 {
<anchor xml:id="__token_8cpp_source_1l01379"/>01379 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01380"/>01380 }
<anchor xml:id="__token_8cpp_source_1l01381"/>01381 
<anchor xml:id="__token_8cpp_source_1l01382"/><link linkend="_class_flow_token_1a98297ec8d7ba95e69743afe1859b6eba">01382</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_flow_token_1a98297ec8d7ba95e69743afe1859b6eba">FlowToken::addType</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;tVal,&#32;<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01383"/>01383 {
<anchor xml:id="__token_8cpp_source_1l01384"/>01384 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01385"/>01385 }
<anchor xml:id="__token_8cpp_source_1l01386"/>01386 
<anchor xml:id="__token_8cpp_source_1l01387"/><link linkend="_class_flow_token_1ad835b1ba757e719a4a40a4ddfd13f8e1">01387</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_flow_token_1a98297ec8d7ba95e69743afe1859b6eba">FlowToken::addType</link>(std::vector&lt;DataType&gt;&#32;listTypes,&#32;<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01388"/>01388 {
<anchor xml:id="__token_8cpp_source_1l01389"/>01389 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01390"/>01390 }
<anchor xml:id="__token_8cpp_source_1l01391"/>01391 
<anchor xml:id="__token_8cpp_source_1l01392"/><link linkend="_class_flow_token_1a5beb3e184d04cac91394633c7c33cc3d">01392</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_flow_token_1a5beb3e184d04cac91394633c7c33cc3d">FlowToken::printTabs</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nestedLayer)
<anchor xml:id="__token_8cpp_source_1l01393"/>01393 {
<anchor xml:id="__token_8cpp_source_1l01394"/>01394 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;nestedLayer;&#32;++i)&#32;{
<anchor xml:id="__token_8cpp_source_1l01395"/>01395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;\t&apos;</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01396"/>01396 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01397"/>01397 }
<anchor xml:id="__token_8cpp_source_1l01398"/>01398 
<anchor xml:id="__token_8cpp_source_1l01399"/><link linkend="_class_token_1abd61b776070d98e2e1b748831a8ae85e">01399</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_token_1abd61b776070d98e2e1b748831a8ae85e">Token::showTokenTree</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nestedLayer)
<anchor xml:id="__token_8cpp_source_1l01400"/>01400 {
<anchor xml:id="__token_8cpp_source_1l01401"/>01401 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<link linkend="_class_token_1a8b3faba4c73c28d11fec73758a0302b2">tokenText</link>;
<anchor xml:id="__token_8cpp_source_1l01402"/>01402 }
<anchor xml:id="__token_8cpp_source_1l01403"/>01403 
<anchor xml:id="__token_8cpp_source_1l01404"/><link linkend="_class_token_1a0dec1385788e690b5dc30cd99a1ed3c8">01404</link> <link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;<link linkend="_class_token_1a0dec1385788e690b5dc30cd99a1ed3c8">Token::getValue</link>()
<anchor xml:id="__token_8cpp_source_1l01405"/>01405 {
<anchor xml:id="__token_8cpp_source_1l01406"/>01406 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_class_token_1a4c8ce9cf1eecbc7e49650307eea6a862">tValue</link>;
<anchor xml:id="__token_8cpp_source_1l01407"/>01407 }
<anchor xml:id="__token_8cpp_source_1l01408"/>01408 
<anchor xml:id="__token_8cpp_source_1l01409"/><link linkend="_class_token_1ace668259c90b6fd2acc2f61d0e141565">01409</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_token_1ace668259c90b6fd2acc2f61d0e141565">Token::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01410"/>01410 {
<anchor xml:id="__token_8cpp_source_1l01411"/>01411 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6ab50339a10e1de285ac99d4c3990b8693">DataType::NONE</link>;
<anchor xml:id="__token_8cpp_source_1l01412"/>01412 }
<anchor xml:id="__token_8cpp_source_1l01413"/>01413 
<anchor xml:id="__token_8cpp_source_1l01414"/>01414 
<anchor xml:id="__token_8cpp_source_1l01415"/>01415 
<anchor xml:id="__token_8cpp_source_1l01416"/>01416 
<anchor xml:id="__token_8cpp_source_1l01417"/><link linkend="_class_token_1aea759b8376bff558791fdc1f2f70f4fb">01417</link> std::shared_ptr&lt;Tag&gt;&#32;<link linkend="_class_token_1aea759b8376bff558791fdc1f2f70f4fb">Token::execute</link>()
<anchor xml:id="__token_8cpp_source_1l01418"/>01418 {
<anchor xml:id="__token_8cpp_source_1l01419"/>01419 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::shared_ptr&lt;Tag&gt;();
<anchor xml:id="__token_8cpp_source_1l01420"/>01420 }
<anchor xml:id="__token_8cpp_source_1l01421"/>01421 
<anchor xml:id="__token_8cpp_source_1l01422"/><link linkend="_class_u_p_k_token_1a8b97a9ffde76bf9ca5938e98c91c5a40">01422</link> <link linkend="_class_u_p_k_token_1a8b97a9ffde76bf9ca5938e98c91c5a40">UPKToken::UPKToken</link>()&#32;:<link linkend="_class_p_k_token">PKToken</link>()
<anchor xml:id="__token_8cpp_source_1l01423"/>01423 {
<anchor xml:id="__token_8cpp_source_1l01424"/>01424 }
<anchor xml:id="__token_8cpp_source_1l01425"/>01425 
<anchor xml:id="__token_8cpp_source_1l01426"/><link linkend="_class_u_p_k_token_1ab96afbaa766bc09f25fee4a0a8c8098f">01426</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_u_p_k_token_1ab96afbaa766bc09f25fee4a0a8c8098f">UPKToken::dispatchArguments</link>()
<anchor xml:id="__token_8cpp_source_1l01427"/>01427 {
<anchor xml:id="__token_8cpp_source_1l01428"/>01428 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>.empty())&#32;{
<anchor xml:id="__token_8cpp_source_1l01429"/>01429 
<anchor xml:id="__token_8cpp_source_1l01430"/>01430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a1620cfd1f2662ca030c5caf9bc5f5777">getID</link>())&#32;{
<anchor xml:id="__token_8cpp_source_1l01431"/>01431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:
<anchor xml:id="__token_8cpp_source_1l01432"/>01432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_u_p_k_token_1a1c9dbf2a5f4096f4891d57ece8e97288">uniqueToken</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;<emphasis role="comment">//&#32;will&#32;create&#32;Basic&#32;tag&#32;at&#32;compile&#32;time</emphasis>
<anchor xml:id="__token_8cpp_source_1l01433"/>01433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01434"/>01434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:
<anchor xml:id="__token_8cpp_source_1l01435"/>01435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_u_p_k_token_1a1c9dbf2a5f4096f4891d57ece8e97288">uniqueToken</link>&#32;=&#32;<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>.front();
<anchor xml:id="__token_8cpp_source_1l01436"/>01436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01437"/>01437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01438"/>01438 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01439"/>01439 }
<anchor xml:id="__token_8cpp_source_1l01440"/>01440 
<anchor xml:id="__token_8cpp_source_1l01441"/>01441 
<anchor xml:id="__token_8cpp_source_1l01442"/>01442 
<anchor xml:id="__token_8cpp_source_1l01443"/><link linkend="_class_u_p_k_token_1a001ffd8e4e33029fe1aa8e0a4cc3eaac">01443</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_u_p_k_token_1a001ffd8e4e33029fe1aa8e0a4cc3eaac">UPKToken::showArguments</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nestedLayer)
<anchor xml:id="__token_8cpp_source_1l01444"/>01444 {
<anchor xml:id="__token_8cpp_source_1l01445"/>01445 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>.empty())<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>.front()-&gt;<link linkend="_class_p_k_token_1a53a1431d31066e66aac1c2ea99245c0a">showTokenTree</link>(nestedLayer);
<anchor xml:id="__token_8cpp_source_1l01446"/>01446 }
<anchor xml:id="__token_8cpp_source_1l01447"/>01447 
<anchor xml:id="__token_8cpp_source_1l01448"/><link linkend="_class_m_p_k_token_1a02776677c87410903882f8655cbfbb7b">01448</link> <link linkend="_class_m_p_k_token_1a02776677c87410903882f8655cbfbb7b">MPKToken::MPKToken</link>()&#32;:<link linkend="_class_p_k_token">PKToken</link>()
<anchor xml:id="__token_8cpp_source_1l01449"/>01449 {
<anchor xml:id="__token_8cpp_source_1l01450"/>01450 
<anchor xml:id="__token_8cpp_source_1l01451"/>01451 }
<anchor xml:id="__token_8cpp_source_1l01452"/>01452 
<anchor xml:id="__token_8cpp_source_1l01453"/><link linkend="_class_m_p_k_token_1a9a5cbbc3269d1601a414e3dd25bfeb63">01453</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_m_p_k_token_1a9a5cbbc3269d1601a414e3dd25bfeb63">MPKToken::addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01454"/>01454 {
<anchor xml:id="__token_8cpp_source_1l01455"/>01455 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_p_k_token_1a533aa21d507b12c9682e3babc83c4396">PKToken::addTokens</link>(tl,&#32;tRes);
<anchor xml:id="__token_8cpp_source_1l01456"/>01456 }
<anchor xml:id="__token_8cpp_source_1l01457"/>01457 
<anchor xml:id="__token_8cpp_source_1l01458"/>01458 
<anchor xml:id="__token_8cpp_source_1l01459"/><link linkend="_class_m_p_k_token_1a11f6e83467f2cfef75d5b0d6affca054">01459</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_m_p_k_token_1a11f6e83467f2cfef75d5b0d6affca054">MPKToken::showArguments</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nestedLayer)
<anchor xml:id="__token_8cpp_source_1l01460"/>01460 {
<anchor xml:id="__token_8cpp_source_1l01461"/>01461 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;
<anchor xml:id="__token_8cpp_source_1l01462"/>01462 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;elem&#32;:&#32;<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l01463"/>01463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;elem-&gt;showTokenTree(nestedLayer);
<anchor xml:id="__token_8cpp_source_1l01464"/>01464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__token_8cpp_source_1l01465"/>01465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(i&lt;<link linkend="_class_p_k_token_1a4d20bfdc555a0c45d45465b9ab26d1ec">argTokens</link>.size()-1)std::cout&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;,&apos;</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01466"/>01466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++i;
<anchor xml:id="__token_8cpp_source_1l01467"/>01467 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01468"/>01468 }
<anchor xml:id="__token_8cpp_source_1l01469"/>01469 
<anchor xml:id="__token_8cpp_source_1l01470"/><link linkend="_class_arguments_1afe56d8477bfae32c239771056c233311">01470</link> <link linkend="_class_arguments_1afe56d8477bfae32c239771056c233311">Arguments::Arguments</link>()
<anchor xml:id="__token_8cpp_source_1l01471"/>01471 {
<anchor xml:id="__token_8cpp_source_1l01472"/>01472 &#32;&#32;&#32;&#32;<link linkend="_class_arguments_1a7b21382c82038b5ba0ff52f0b742f132">currentIndex</link>&#32;=&#32;0;
<anchor xml:id="__token_8cpp_source_1l01473"/>01473 &#32;&#32;&#32;&#32;<link linkend="_class_arguments_1ab6cf147a44f3f9677a27fd7ece39aa87">stillValid</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01474"/>01474 &#32;&#32;&#32;&#32;<link linkend="_class_arguments_1a0dc7c6ec89eeb3826accccdeba73a5f9">completed</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01475"/>01475 &#32;&#32;&#32;&#32;<link linkend="_class_arguments_1a24f7692626c53fa4a2e739ec2ec02f54">repeatable</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01476"/>01476 &#32;&#32;&#32;&#32;<link linkend="_class_arguments_1a291a05bded903e2165030b35dd1575ee">repeatedType</link>&#32;=&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6ab50339a10e1de285ac99d4c3990b8693">DataType::NONE</link>;
<anchor xml:id="__token_8cpp_source_1l01477"/>01477 }
<anchor xml:id="__token_8cpp_source_1l01478"/>01478 <emphasis role="comment">//repeatable&#32;type&#32;can&#32;be&#32;empty</emphasis>
<anchor xml:id="__token_8cpp_source_1l01479"/><link linkend="_class_arguments_1aeb6ef0b6ed0d8074a380700aefe59fcc">01479</link> <link linkend="_class_arguments_1afe56d8477bfae32c239771056c233311">Arguments::Arguments</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;type,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;repeat):<link linkend="_class_arguments">Arguments</link>()
<anchor xml:id="__token_8cpp_source_1l01480"/>01480 {
<anchor xml:id="__token_8cpp_source_1l01481"/>01481 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(repeat)&#32;{
<anchor xml:id="__token_8cpp_source_1l01482"/>01482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_arguments_1a24f7692626c53fa4a2e739ec2ec02f54">repeatable</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01483"/>01483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_arguments_1a291a05bded903e2165030b35dd1575ee">repeatedType</link>&#32;=&#32;type;
<anchor xml:id="__token_8cpp_source_1l01484"/>01484 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01485"/>01485 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="_class_arguments_1a12069712a9d060259c41422fe97192fd">listArgsTypes</link>.push_back(type);
<anchor xml:id="__token_8cpp_source_1l01486"/>01486 &#32;&#32;&#32;&#32;<link linkend="_class_arguments_1a0dc7c6ec89eeb3826accccdeba73a5f9">completed</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01487"/>01487 }
<anchor xml:id="__token_8cpp_source_1l01488"/>01488 
<anchor xml:id="__token_8cpp_source_1l01489"/><link linkend="_class_arguments_1a9fd795aaba644b4d852f016544f6f5df">01489</link> <link linkend="_class_arguments_1afe56d8477bfae32c239771056c233311">Arguments::Arguments</link>(std::vector&lt;DataType&gt;&#32;listTypes)&#32;:<link linkend="_class_arguments">Arguments</link>()
<anchor xml:id="__token_8cpp_source_1l01490"/>01490 {
<anchor xml:id="__token_8cpp_source_1l01491"/>01491 &#32;&#32;&#32;&#32;<link linkend="_class_arguments_1a12069712a9d060259c41422fe97192fd">listArgsTypes</link>&#32;=&#32;listTypes;
<anchor xml:id="__token_8cpp_source_1l01492"/>01492 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_arguments_1a12069712a9d060259c41422fe97192fd">listArgsTypes</link>.empty())<link linkend="_class_arguments_1a0dc7c6ec89eeb3826accccdeba73a5f9">completed</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01493"/>01493 }
<anchor xml:id="__token_8cpp_source_1l01494"/>01494 
<anchor xml:id="__token_8cpp_source_1l01495"/>01495 
<anchor xml:id="__token_8cpp_source_1l01496"/><link linkend="_class_arguments_1a7df7d548b729e703fce328951a68be9b">01496</link> std::vector&lt;DataType&gt;&#32;<link linkend="_class_arguments_1a7df7d548b729e703fce328951a68be9b">Arguments::getArgsTypes</link>()
<anchor xml:id="__token_8cpp_source_1l01497"/>01497 {
<anchor xml:id="__token_8cpp_source_1l01498"/>01498 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_1a12069712a9d060259c41422fe97192fd">listArgsTypes</link>;
<anchor xml:id="__token_8cpp_source_1l01499"/>01499 }
<anchor xml:id="__token_8cpp_source_1l01500"/>01500 
<anchor xml:id="__token_8cpp_source_1l01501"/><link linkend="_class_arguments_1a8a88bd6135f23a11ce75239ca8593223">01501</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_arguments_1a8a88bd6135f23a11ce75239ca8593223">Arguments::next</link>()
<anchor xml:id="__token_8cpp_source_1l01502"/>01502 {
<anchor xml:id="__token_8cpp_source_1l01503"/>01503 
<anchor xml:id="__token_8cpp_source_1l01504"/>01504 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_class_arguments_1a24f7692626c53fa4a2e739ec2ec02f54">repeatable</link>)&#32;++<link linkend="_class_arguments_1a7b21382c82038b5ba0ff52f0b742f132">currentIndex</link>;
<anchor xml:id="__token_8cpp_source_1l01505"/>01505 }
<anchor xml:id="__token_8cpp_source_1l01506"/>01506 
<anchor xml:id="__token_8cpp_source_1l01507"/><link linkend="_class_arguments_1a19ddf4e45cbd1f97228ba672be9d373e">01507</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_arguments_1a19ddf4e45cbd1f97228ba672be9d373e">Arguments::ended</link>()<emphasis role="keyword">const</emphasis>
<anchor xml:id="__token_8cpp_source_1l01508"/>01508 <emphasis role="keyword"></emphasis>{
<anchor xml:id="__token_8cpp_source_1l01509"/>01509 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_arguments_1a24f7692626c53fa4a2e739ec2ec02f54">repeatable</link>)<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01510"/>01510 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_1a7b21382c82038b5ba0ff52f0b742f132">currentIndex</link>&#32;&gt;=&#32;<link linkend="_class_arguments_1a12069712a9d060259c41422fe97192fd">listArgsTypes</link>.<link linkend="_class_arguments_1a518743549f5e7b43a05b7f34e004e217">size</link>();
<anchor xml:id="__token_8cpp_source_1l01511"/>01511 }
<anchor xml:id="__token_8cpp_source_1l01512"/>01512 
<anchor xml:id="__token_8cpp_source_1l01513"/><link linkend="_class_arguments_1a518743549f5e7b43a05b7f34e004e217">01513</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_arguments_1a518743549f5e7b43a05b7f34e004e217">Arguments::size</link>()
<anchor xml:id="__token_8cpp_source_1l01514"/>01514 {
<anchor xml:id="__token_8cpp_source_1l01515"/>01515 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_1a12069712a9d060259c41422fe97192fd">listArgsTypes</link>.size();
<anchor xml:id="__token_8cpp_source_1l01516"/>01516 }
<anchor xml:id="__token_8cpp_source_1l01517"/>01517 
<anchor xml:id="__token_8cpp_source_1l01518"/><link linkend="_class_arguments_1a0f434af83c0987022c83ab365af88f72">01518</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_arguments_1a0f434af83c0987022c83ab365af88f72">Arguments::empty</link>()
<anchor xml:id="__token_8cpp_source_1l01519"/>01519 {
<anchor xml:id="__token_8cpp_source_1l01520"/>01520 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_1a7df7d548b729e703fce328951a68be9b">getArgsTypes</link>().empty();
<anchor xml:id="__token_8cpp_source_1l01521"/>01521 }
<anchor xml:id="__token_8cpp_source_1l01522"/>01522 
<anchor xml:id="__token_8cpp_source_1l01523"/><link linkend="_class_arguments_1aea159bb8540c3e3cdd25abca54d77ce6">01523</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_arguments_1aea159bb8540c3e3cdd25abca54d77ce6">Arguments::at</link>(<emphasis role="keywordtype">int</emphasis>&#32;i)
<anchor xml:id="__token_8cpp_source_1l01524"/>01524 {
<anchor xml:id="__token_8cpp_source_1l01525"/>01525 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_arguments_1a24f7692626c53fa4a2e739ec2ec02f54">repeatable</link>)<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_1a291a05bded903e2165030b35dd1575ee">repeatedType</link>;
<anchor xml:id="__token_8cpp_source_1l01526"/>01526 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i&#32;&lt;&#32;<link linkend="_class_arguments_1a518743549f5e7b43a05b7f34e004e217">size</link>())<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_1a12069712a9d060259c41422fe97192fd">listArgsTypes</link>.at(i);
<anchor xml:id="__token_8cpp_source_1l01527"/>01527 }
<anchor xml:id="__token_8cpp_source_1l01528"/>01528 
<anchor xml:id="__token_8cpp_source_1l01529"/><link linkend="_class_arguments_1a2b023fdc0b17ed727222775843dab401">01529</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_arguments_1a2b023fdc0b17ed727222775843dab401">Arguments::approveType</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&amp;&#32;type)
<anchor xml:id="__token_8cpp_source_1l01530"/>01530 {
<anchor xml:id="__token_8cpp_source_1l01531"/>01531 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_arguments_1a19ddf4e45cbd1f97228ba672be9d373e">ended</link>()&amp;&amp;<link linkend="_class_arguments_1ab6cf147a44f3f9677a27fd7ece39aa87">stillValid</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l01532"/>01532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_arguments_1a6e1034236428ba4e248db47e93183e06">getCurrentDataType</link>()&#32;==&#32;type)&#32;{
<anchor xml:id="__token_8cpp_source_1l01533"/>01533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_arguments_1a24f7692626c53fa4a2e739ec2ec02f54">repeatable</link>)<link linkend="_class_arguments_1a0dc7c6ec89eeb3826accccdeba73a5f9">completed</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01534"/>01534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_arguments_1a7b21382c82038b5ba0ff52f0b742f132">currentIndex</link>&#32;==&#32;<link linkend="_class_arguments_1a12069712a9d060259c41422fe97192fd">listArgsTypes</link>.size()-1)&#32;{
<anchor xml:id="__token_8cpp_source_1l01535"/>01535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_arguments_1a0dc7c6ec89eeb3826accccdeba73a5f9">completed</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01536"/>01536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01537"/>01537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01538"/>01538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01539"/>01539 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01540"/>01540 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_class_arguments_1ab6cf147a44f3f9677a27fd7ece39aa87">stillValid</link>)<link linkend="_class_arguments_1ab6cf147a44f3f9677a27fd7ece39aa87">stillValid</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01541"/>01541 &#32;&#32;&#32;&#32;<link linkend="_class_arguments_1a0dc7c6ec89eeb3826accccdeba73a5f9">completed</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01542"/>01542 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01543"/>01543 }
<anchor xml:id="__token_8cpp_source_1l01544"/>01544 
<anchor xml:id="__token_8cpp_source_1l01545"/><link linkend="_class_arguments_1a6e1034236428ba4e248db47e93183e06">01545</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_arguments_1a6e1034236428ba4e248db47e93183e06">Arguments::getCurrentDataType</link>()
<anchor xml:id="__token_8cpp_source_1l01546"/>01546 {&#32;&#32;&#32;
<anchor xml:id="__token_8cpp_source_1l01547"/>01547 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_arguments_1a24f7692626c53fa4a2e739ec2ec02f54">repeatable</link>)<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_1a291a05bded903e2165030b35dd1575ee">repeatedType</link>;
<anchor xml:id="__token_8cpp_source_1l01548"/>01548 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_1a12069712a9d060259c41422fe97192fd">listArgsTypes</link>.at(<link linkend="_class_arguments_1a7b21382c82038b5ba0ff52f0b742f132">currentIndex</link>);
<anchor xml:id="__token_8cpp_source_1l01549"/>01549 }
<anchor xml:id="__token_8cpp_source_1l01550"/>01550 
<anchor xml:id="__token_8cpp_source_1l01551"/><link linkend="_class_arguments_1aa4b9bed6a87bba4757e6802492b2acb1">01551</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_arguments_1aa4b9bed6a87bba4757e6802492b2acb1">Arguments::isRepeatable</link>()
<anchor xml:id="__token_8cpp_source_1l01552"/>01552 {
<anchor xml:id="__token_8cpp_source_1l01553"/>01553 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_1a24f7692626c53fa4a2e739ec2ec02f54">repeatable</link>;
<anchor xml:id="__token_8cpp_source_1l01554"/>01554 }
<anchor xml:id="__token_8cpp_source_1l01555"/>01555 
<anchor xml:id="__token_8cpp_source_1l01556"/><link linkend="_class_arguments_1a3c09f2f740566f2ac6abe10e5048806a">01556</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_arguments_1a3c09f2f740566f2ac6abe10e5048806a">Arguments::isValid</link>()<emphasis role="keyword">const</emphasis>
<anchor xml:id="__token_8cpp_source_1l01557"/>01557 <emphasis role="keyword"></emphasis>{
<anchor xml:id="__token_8cpp_source_1l01558"/>01558 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_1ab6cf147a44f3f9677a27fd7ece39aa87">stillValid</link>;
<anchor xml:id="__token_8cpp_source_1l01559"/>01559 }
<anchor xml:id="__token_8cpp_source_1l01560"/>01560 
<anchor xml:id="__token_8cpp_source_1l01561"/><link linkend="_class_arguments_1a648df045d979401752e058e0ce1a645c">01561</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_arguments_1a648df045d979401752e058e0ce1a645c">Arguments::isCompleted</link>()
<anchor xml:id="__token_8cpp_source_1l01562"/>01562 {
<anchor xml:id="__token_8cpp_source_1l01563"/>01563 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_1a0dc7c6ec89eeb3826accccdeba73a5f9">completed</link>;
<anchor xml:id="__token_8cpp_source_1l01564"/>01564 }
<anchor xml:id="__token_8cpp_source_1l01565"/>01565 
<anchor xml:id="__token_8cpp_source_1l01566"/><link linkend="_class_arguments_1ab783108d7f8759a29f939710b115130d">01566</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_arguments_1ab783108d7f8759a29f939710b115130d">Arguments::isEqual</link>(<link linkend="_class_arguments">Arguments</link>&#32;args)
<anchor xml:id="__token_8cpp_source_1l01567"/>01567 {
<anchor xml:id="__token_8cpp_source_1l01568"/>01568 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_arguments_1a24f7692626c53fa4a2e739ec2ec02f54">repeatable</link>&#32;!=&#32;args.<link linkend="_class_arguments_1a24f7692626c53fa4a2e739ec2ec02f54">repeatable</link>)<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01569"/>01569 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(args.<link linkend="_class_arguments_1a518743549f5e7b43a05b7f34e004e217">size</link>()&#32;!=&#32;<link linkend="_class_arguments_1a518743549f5e7b43a05b7f34e004e217">size</link>())<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01570"/>01570 
<anchor xml:id="__token_8cpp_source_1l01571"/>01571 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;args.<link linkend="_class_arguments_1a518743549f5e7b43a05b7f34e004e217">size</link>();&#32;++i)&#32;{
<anchor xml:id="__token_8cpp_source_1l01572"/>01572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(args.<link linkend="_class_arguments_1aea159bb8540c3e3cdd25abca54d77ce6">at</link>(i)&#32;!=&#32;<link linkend="_class_arguments_1aea159bb8540c3e3cdd25abca54d77ce6">at</link>(i))<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01573"/>01573 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01574"/>01574 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01575"/>01575 }
<anchor xml:id="__token_8cpp_source_1l01576"/>01576 
<anchor xml:id="__token_8cpp_source_1l01577"/><link linkend="_class_b_m_p_k_token_1aaf92958b3e169f50d0f9d15605f17efe">01577</link> <link linkend="_class_b_m_p_k_token_1aaf92958b3e169f50d0f9d15605f17efe">BMPKToken::BMPKToken</link>():<link linkend="_class_m_p_k_token">MPKToken</link>()
<anchor xml:id="__token_8cpp_source_1l01578"/>01578 {
<anchor xml:id="__token_8cpp_source_1l01579"/>01579 &#32;&#32;&#32;&#32;<link linkend="_class_b_m_p_k_token_1a7ca2b30d87d777d1b086ef885069cfb6">setOverloads</link>();
<anchor xml:id="__token_8cpp_source_1l01580"/>01580 }
<anchor xml:id="__token_8cpp_source_1l01581"/>01581 
<anchor xml:id="__token_8cpp_source_1l01582"/><link linkend="_class_b_m_p_k_token_1a7ca2b30d87d777d1b086ef885069cfb6">01582</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_b_m_p_k_token_1a7ca2b30d87d777d1b086ef885069cfb6">BMPKToken::setOverloads</link>()
<anchor xml:id="__token_8cpp_source_1l01583"/>01583 {
<anchor xml:id="__token_8cpp_source_1l01584"/>01584 &#32;&#32;&#32;&#32;<link linkend="_class_p_k_token_1a42553332bc9d8bb3f267bf3cba36240c">argsOverload</link>.<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">addArgs</link>(<link linkend="_class_arguments">Arguments</link>(<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6aa97b2c144243b2b9d2c593ec268b62f5">DataType::BOOL</link>,&#32;<emphasis role="keyword">true</emphasis>),0);
<anchor xml:id="__token_8cpp_source_1l01585"/>01585 }
<anchor xml:id="__token_8cpp_source_1l01586"/>01586 
<anchor xml:id="__token_8cpp_source_1l01587"/>01587 
<anchor xml:id="__token_8cpp_source_1l01588"/><link linkend="_class_b_m_p_k_token_1ae198e473b9fa0da89ed741cb7e5373ae">01588</link> <link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;<link linkend="_class_b_m_p_k_token_1ae198e473b9fa0da89ed741cb7e5373ae">BMPKToken::getDataType</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01589"/>01589 {
<anchor xml:id="__token_8cpp_source_1l01590"/>01590 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6aa97b2c144243b2b9d2c593ec268b62f5">DataType::BOOL</link>;
<anchor xml:id="__token_8cpp_source_1l01591"/>01591 }
<anchor xml:id="__token_8cpp_source_1l01592"/>01592 
<anchor xml:id="__token_8cpp_source_1l01593"/><link linkend="_class_b_m_p_k_token_1aace2b852d50d884dd6da841c3fab113c">01593</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_b_m_p_k_token_1aace2b852d50d884dd6da841c3fab113c">BMPKToken::addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01594"/>01594 {
<anchor xml:id="__token_8cpp_source_1l01595"/>01595 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_m_p_k_token_1a9a5cbbc3269d1601a414e3dd25bfeb63">MPKToken::addTokens</link>(tl,tRes);
<anchor xml:id="__token_8cpp_source_1l01596"/>01596 }
<anchor xml:id="__token_8cpp_source_1l01597"/>01597 
<anchor xml:id="__token_8cpp_source_1l01598"/><link linkend="_class_arguments_overload_1a6869935a40b96521a68ae6ddacb22bac">01598</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_arguments_overload_1a6869935a40b96521a68ae6ddacb22bac">ArgumentsOverload::hasValidArg</link>()
<anchor xml:id="__token_8cpp_source_1l01599"/>01599 {
<anchor xml:id="__token_8cpp_source_1l01600"/>01600 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_overload_1af2ae8a9da94819490744df19ebf5e115">getValidArguments</link>().size()&#32;&gt;&#32;0;
<anchor xml:id="__token_8cpp_source_1l01601"/>01601 }
<anchor xml:id="__token_8cpp_source_1l01602"/>01602 
<anchor xml:id="__token_8cpp_source_1l01603"/><link linkend="_class_arguments_overload_1a65ea1970c75fddd5990ac66a1475a63f">01603</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_arguments_overload_1a65ea1970c75fddd5990ac66a1475a63f">ArgumentsOverload::hasCompletedArguments</link>()
<anchor xml:id="__token_8cpp_source_1l01604"/>01604 {
<anchor xml:id="__token_8cpp_source_1l01605"/>01605 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!<link linkend="_class_arguments_overload_1ab7709e65ce6926230400a3ed8b9483ac">getCompletedArgs</link>().empty();
<anchor xml:id="__token_8cpp_source_1l01606"/>01606 }
<anchor xml:id="__token_8cpp_source_1l01607"/>01607 
<anchor xml:id="__token_8cpp_source_1l01608"/><link linkend="_class_arguments_overload_1a6b65e84a1deed85e8403721df4358b9e">01608</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_arguments_overload_1a6b65e84a1deed85e8403721df4358b9e">ArgumentsOverload::updateCompletedArguments</link>()
<anchor xml:id="__token_8cpp_source_1l01609"/>01609 {
<anchor xml:id="__token_8cpp_source_1l01610"/>01610 &#32;&#32;&#32;&#32;std::vector&lt;int&gt;&#32;toDelete;
<anchor xml:id="__token_8cpp_source_1l01611"/>01611 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;args&#32;:&#32;<link linkend="_class_arguments_overload_1ad8da4644bf5c7597ec73958b67324593">completedArguments</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l01612"/>01612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!args.second-&gt;isValid())toDelete.emplace_back(args.first);
<anchor xml:id="__token_8cpp_source_1l01613"/>01613 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01614"/>01614 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;:&#32;toDelete)&#32;{
<anchor xml:id="__token_8cpp_source_1l01615"/>01615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_arguments_overload_1ad8da4644bf5c7597ec73958b67324593">completedArguments</link>.erase(i);
<anchor xml:id="__token_8cpp_source_1l01616"/>01616 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01617"/>01617 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;args&#32;:&#32;<link linkend="_class_arguments_overload_1aaedae5a04d3fb0f4742a5243b18c4999">validArguments</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l01618"/>01618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(args.second-&gt;isCompleted())<link linkend="_class_arguments_overload_1ad8da4644bf5c7597ec73958b67324593">completedArguments</link>.emplace(args);
<anchor xml:id="__token_8cpp_source_1l01619"/>01619 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01620"/>01620 }
<anchor xml:id="__token_8cpp_source_1l01621"/>01621 
<anchor xml:id="__token_8cpp_source_1l01622"/><link linkend="_class_arguments_overload_1adf2f990572f8ba98d4f45fec3181bca1">01622</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_arguments_overload_1adf2f990572f8ba98d4f45fec3181bca1">ArgumentsOverload::updateValidArguments</link>()
<anchor xml:id="__token_8cpp_source_1l01623"/>01623 {
<anchor xml:id="__token_8cpp_source_1l01624"/>01624 &#32;&#32;&#32;&#32;std::vector&lt;int&gt;&#32;toDelete;
<anchor xml:id="__token_8cpp_source_1l01625"/>01625 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;args&#32;:&#32;<link linkend="_class_arguments_overload_1aaedae5a04d3fb0f4742a5243b18c4999">validArguments</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l01626"/>01626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!args.second-&gt;isValid())toDelete.emplace_back(args.first);
<anchor xml:id="__token_8cpp_source_1l01627"/>01627 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01628"/>01628 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;:&#32;toDelete)&#32;{
<anchor xml:id="__token_8cpp_source_1l01629"/>01629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_arguments_overload_1aaedae5a04d3fb0f4742a5243b18c4999">validArguments</link>.erase(i);
<anchor xml:id="__token_8cpp_source_1l01630"/>01630 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01631"/>01631 }
<anchor xml:id="__token_8cpp_source_1l01632"/>01632 
<anchor xml:id="__token_8cpp_source_1l01633"/><link linkend="_class_arguments_overload_1a0316dfe033593e31fe4f754e9fc2ea3a">01633</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_arguments_overload_1a0316dfe033593e31fe4f754e9fc2ea3a">ArgumentsOverload::updateTabs</link>()
<anchor xml:id="__token_8cpp_source_1l01634"/>01634 {
<anchor xml:id="__token_8cpp_source_1l01635"/>01635 &#32;&#32;&#32;&#32;<link linkend="_class_arguments_overload_1adf2f990572f8ba98d4f45fec3181bca1">updateValidArguments</link>();
<anchor xml:id="__token_8cpp_source_1l01636"/>01636 &#32;&#32;&#32;&#32;<link linkend="_class_arguments_overload_1a6b65e84a1deed85e8403721df4358b9e">updateCompletedArguments</link>();
<anchor xml:id="__token_8cpp_source_1l01637"/>01637 }
<anchor xml:id="__token_8cpp_source_1l01638"/>01638 
<anchor xml:id="__token_8cpp_source_1l01639"/><link linkend="_class_arguments_overload_1aca5482a0169922f217e7c6633b477320">01639</link> <link linkend="_class_arguments_overload_1aca5482a0169922f217e7c6633b477320">ArgumentsOverload::ArgumentsOverload</link>()
<anchor xml:id="__token_8cpp_source_1l01640"/>01640 {
<anchor xml:id="__token_8cpp_source_1l01641"/>01641 &#32;&#32;&#32;&#32;<link linkend="_class_arguments_overload_1a36e0acb2fe2bb4e32f71ff4dcf632648">mapArguments</link>.clear();
<anchor xml:id="__token_8cpp_source_1l01642"/>01642 &#32;&#32;&#32;&#32;<link linkend="_class_arguments_overload_1ab6a918495a27c781bef999bafb8f5b44">currentDataTypes</link>.clear();
<anchor xml:id="__token_8cpp_source_1l01643"/>01643 &#32;&#32;&#32;&#32;<link linkend="_class_arguments_overload_1ae415f15bad3da58f96988327fdcf0e68">completeIndex</link>&#32;=&#32;0;
<anchor xml:id="__token_8cpp_source_1l01644"/>01644 }
<anchor xml:id="__token_8cpp_source_1l01645"/>01645 
<anchor xml:id="__token_8cpp_source_1l01646"/><link linkend="_class_arguments_overload_1a1dfc9815d235cec325412121bea6b559">01646</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_arguments_overload_1a1dfc9815d235cec325412121bea6b559">ArgumentsOverload::isPresent</link>(<link linkend="_class_arguments">Arguments</link>&#32;args)
<anchor xml:id="__token_8cpp_source_1l01647"/>01647 {
<anchor xml:id="__token_8cpp_source_1l01648"/>01648 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;arg&#32;:&#32;<link linkend="_class_arguments_overload_1a36e0acb2fe2bb4e32f71ff4dcf632648">mapArguments</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l01649"/>01649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg.second-&gt;isEqual(args))<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01650"/>01650 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01651"/>01651 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01652"/>01652 }
<anchor xml:id="__token_8cpp_source_1l01653"/>01653 
<anchor xml:id="__token_8cpp_source_1l01654"/><link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">01654</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_arguments_overload_1a17fba6858e03080178ab2cf098861e5f">ArgumentsOverload::addArgs</link>(<link linkend="_class_arguments">Arguments</link>&#32;args,<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="__token_8cpp_source_1l01655"/>01655 {
<anchor xml:id="__token_8cpp_source_1l01656"/>01656 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_class_arguments_overload_1a1dfc9815d235cec325412121bea6b559">isPresent</link>(args))&#32;{
<anchor xml:id="__token_8cpp_source_1l01657"/>01657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_arguments_overload_1a36e0acb2fe2bb4e32f71ff4dcf632648">mapArguments</link>.emplace(std::pair&lt;<emphasis role="keywordtype">int</emphasis>,&#32;std::shared_ptr&lt;Arguments&gt;&gt;(index,&#32;std::make_shared&lt;Arguments&gt;(args)));
<anchor xml:id="__token_8cpp_source_1l01658"/>01658 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01659"/>01659 }
<anchor xml:id="__token_8cpp_source_1l01660"/>01660 
<anchor xml:id="__token_8cpp_source_1l01661"/><link linkend="_class_arguments_overload_1a4fc9b2ef6a2ec9c3f963ddcb44621794">01661</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_arguments_overload_1a4fc9b2ef6a2ec9c3f963ddcb44621794">ArgumentsOverload::initTabs</link>()
<anchor xml:id="__token_8cpp_source_1l01662"/>01662 {
<anchor xml:id="__token_8cpp_source_1l01663"/>01663 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;args&#32;:&#32;<link linkend="_class_arguments_overload_1a36e0acb2fe2bb4e32f71ff4dcf632648">mapArguments</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l01664"/>01664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(args.second-&gt;isValid())<link linkend="_class_arguments_overload_1aaedae5a04d3fb0f4742a5243b18c4999">validArguments</link>.emplace(args);
<anchor xml:id="__token_8cpp_source_1l01665"/>01665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(args.second-&gt;isCompleted())<link linkend="_class_arguments_overload_1ad8da4644bf5c7597ec73958b67324593">completedArguments</link>.emplace(args);
<anchor xml:id="__token_8cpp_source_1l01666"/>01666 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01667"/>01667 }
<anchor xml:id="__token_8cpp_source_1l01668"/>01668 
<anchor xml:id="__token_8cpp_source_1l01669"/><link linkend="_class_arguments_overload_1a2dfe47467795bfb57a900505d61ed556">01669</link> std::vector&lt;DataType&gt;&#32;<link linkend="_class_arguments_overload_1a2dfe47467795bfb57a900505d61ed556">ArgumentsOverload::getPossibleDataTypes</link>()
<anchor xml:id="__token_8cpp_source_1l01670"/>01670 {
<anchor xml:id="__token_8cpp_source_1l01671"/>01671 &#32;&#32;&#32;&#32;<link linkend="_class_arguments_overload_1ab6a918495a27c781bef999bafb8f5b44">currentDataTypes</link>.clear();
<anchor xml:id="__token_8cpp_source_1l01672"/>01672 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;arg&#32;:&#32;<link linkend="_class_arguments_overload_1aaedae5a04d3fb0f4742a5243b18c4999">validArguments</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l01673"/>01673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_arguments_overload_1ab6a918495a27c781bef999bafb8f5b44">currentDataTypes</link>.push_back(arg.second-&gt;getCurrentDataType());
<anchor xml:id="__token_8cpp_source_1l01674"/>01674 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01675"/>01675 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_overload_1ab6a918495a27c781bef999bafb8f5b44">currentDataTypes</link>;
<anchor xml:id="__token_8cpp_source_1l01676"/>01676 }
<anchor xml:id="__token_8cpp_source_1l01677"/>01677 
<anchor xml:id="__token_8cpp_source_1l01678"/><link linkend="_class_arguments_overload_1a44c9abfe32ebc098862157d7ddf22b19">01678</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_arguments_overload_1a44c9abfe32ebc098862157d7ddf22b19">ArgumentsOverload::next</link>()
<anchor xml:id="__token_8cpp_source_1l01679"/>01679 {
<anchor xml:id="__token_8cpp_source_1l01680"/>01680 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;arg&#32;:&#32;<link linkend="_class_arguments_overload_1a36e0acb2fe2bb4e32f71ff4dcf632648">mapArguments</link>)arg.second-&gt;next();
<anchor xml:id="__token_8cpp_source_1l01681"/>01681 }
<anchor xml:id="__token_8cpp_source_1l01682"/>01682 
<anchor xml:id="__token_8cpp_source_1l01683"/><link linkend="_class_arguments_overload_1aaed90f32011643050b1440daed30c168">01683</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_arguments_overload_1aaed90f32011643050b1440daed30c168">ArgumentsOverload::approveType</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&amp;&#32;type)
<anchor xml:id="__token_8cpp_source_1l01684"/>01684 {
<anchor xml:id="__token_8cpp_source_1l01685"/>01685 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;res=<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01686"/>01686 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&amp;&#32;arg&#32;:&#32;<link linkend="_class_arguments_overload_1aaedae5a04d3fb0f4742a5243b18c4999">validArguments</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l01687"/>01687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(arg.second-&gt;approveType(type))res=<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01688"/>01688 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01689"/>01689 &#32;&#32;&#32;&#32;<link linkend="_class_arguments_overload_1a0316dfe033593e31fe4f754e9fc2ea3a">updateTabs</link>();
<anchor xml:id="__token_8cpp_source_1l01690"/>01690 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;res;
<anchor xml:id="__token_8cpp_source_1l01691"/>01691 }
<anchor xml:id="__token_8cpp_source_1l01692"/>01692 
<anchor xml:id="__token_8cpp_source_1l01693"/><link linkend="_class_arguments_overload_1a1620cfd1f2662ca030c5caf9bc5f5777">01693</link> <emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_arguments_overload_1a1620cfd1f2662ca030c5caf9bc5f5777">ArgumentsOverload::getID</link>()
<anchor xml:id="__token_8cpp_source_1l01694"/>01694 {
<anchor xml:id="__token_8cpp_source_1l01695"/>01695 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_overload_1ae415f15bad3da58f96988327fdcf0e68">completeIndex</link>;
<anchor xml:id="__token_8cpp_source_1l01696"/>01696 }
<anchor xml:id="__token_8cpp_source_1l01697"/>01697 
<anchor xml:id="__token_8cpp_source_1l01698"/><link linkend="_class_arguments_overload_1ab26f7552e32582556f6c7c6132e355cf">01698</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_arguments_overload_1ab26f7552e32582556f6c7c6132e355cf">ArgumentsOverload::setCompleteIndex</link>()
<anchor xml:id="__token_8cpp_source_1l01699"/>01699 {
<anchor xml:id="__token_8cpp_source_1l01700"/>01700 &#32;&#32;&#32;&#32;<link linkend="_class_arguments_overload_1ae415f15bad3da58f96988327fdcf0e68">completeIndex</link>&#32;=&#32;<link linkend="_class_arguments_overload_1ad8da4644bf5c7597ec73958b67324593">completedArguments</link>.begin()-&gt;first;
<anchor xml:id="__token_8cpp_source_1l01701"/>01701 }
<anchor xml:id="__token_8cpp_source_1l01702"/>01702 
<anchor xml:id="__token_8cpp_source_1l01703"/><link linkend="_class_arguments_overload_1af2ae8a9da94819490744df19ebf5e115">01703</link> std::map&lt;int,&#32;std::shared_ptr&lt;Arguments&gt;&gt;&#32;<link linkend="_class_arguments_overload_1af2ae8a9da94819490744df19ebf5e115">ArgumentsOverload::getValidArguments</link>()
<anchor xml:id="__token_8cpp_source_1l01704"/>01704 {
<anchor xml:id="__token_8cpp_source_1l01705"/>01705 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_overload_1aaedae5a04d3fb0f4742a5243b18c4999">validArguments</link>;
<anchor xml:id="__token_8cpp_source_1l01706"/>01706 }
<anchor xml:id="__token_8cpp_source_1l01707"/>01707 
<anchor xml:id="__token_8cpp_source_1l01708"/><link linkend="_class_arguments_overload_1ab7709e65ce6926230400a3ed8b9483ac">01708</link> std::map&lt;int,&#32;std::shared_ptr&lt;Arguments&gt;&gt;&#32;<link linkend="_class_arguments_overload_1ab7709e65ce6926230400a3ed8b9483ac">ArgumentsOverload::getCompletedArgs</link>()
<anchor xml:id="__token_8cpp_source_1l01709"/>01709 {
<anchor xml:id="__token_8cpp_source_1l01710"/>01710 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_overload_1ad8da4644bf5c7597ec73958b67324593">completedArguments</link>;
<anchor xml:id="__token_8cpp_source_1l01711"/>01711 }
<anchor xml:id="__token_8cpp_source_1l01712"/>01712 
<anchor xml:id="__token_8cpp_source_1l01713"/>01713 
<anchor xml:id="__token_8cpp_source_1l01714"/>01714 
<anchor xml:id="__token_8cpp_source_1l01715"/><link linkend="_class_arguments_overload_1a8f4306c5b1ec186eb4bd10149f744cb2">01715</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_arguments_overload_1a8f4306c5b1ec186eb4bd10149f744cb2">ArgumentsOverload::ended</link>()
<anchor xml:id="__token_8cpp_source_1l01716"/>01716 {
<anchor xml:id="__token_8cpp_source_1l01717"/>01717 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;arg&#32;:&#32;<link linkend="_class_arguments_overload_1a36e0acb2fe2bb4e32f71ff4dcf632648">mapArguments</link>)&#32;{
<anchor xml:id="__token_8cpp_source_1l01718"/>01718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!arg.second-&gt;ended())<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01719"/>01719 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01720"/>01720 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01721"/>01721 }
<anchor xml:id="__token_8cpp_source_1l01722"/>01722 
<anchor xml:id="__token_8cpp_source_1l01723"/><link linkend="_class_arguments_overload_1a38609197ba50525af302bc2a35600f30">01723</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_arguments_overload_1a38609197ba50525af302bc2a35600f30">ArgumentsOverload::size</link>()
<anchor xml:id="__token_8cpp_source_1l01724"/>01724 {
<anchor xml:id="__token_8cpp_source_1l01725"/>01725 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_overload_1a36e0acb2fe2bb4e32f71ff4dcf632648">mapArguments</link>.size();
<anchor xml:id="__token_8cpp_source_1l01726"/>01726 }
<anchor xml:id="__token_8cpp_source_1l01727"/>01727 
<anchor xml:id="__token_8cpp_source_1l01728"/><link linkend="_class_arguments_overload_1a120a10d2b4285ae672db3cea058b714d">01728</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_arguments_overload_1a120a10d2b4285ae672db3cea058b714d">ArgumentsOverload::empty</link>()
<anchor xml:id="__token_8cpp_source_1l01729"/>01729 {
<anchor xml:id="__token_8cpp_source_1l01730"/>01730 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_arguments_overload_1a36e0acb2fe2bb4e32f71ff4dcf632648">mapArguments</link>.empty();
<anchor xml:id="__token_8cpp_source_1l01731"/>01731 }
<anchor xml:id="__token_8cpp_source_1l01732"/>01732 
<anchor xml:id="__token_8cpp_source_1l01733"/><link linkend="_class_template_token_1ae1b395c24b28116b2b20429e8b87f2fc">01733</link> <link linkend="_class_template_token_1ae1b395c24b28116b2b20429e8b87f2fc">TemplateToken::TemplateToken</link>()
<anchor xml:id="__token_8cpp_source_1l01734"/>01734 {
<anchor xml:id="__token_8cpp_source_1l01735"/>01735 &#32;&#32;&#32;&#32;<link linkend="_class_template_token_1a44271a10cbc74eea133ed9e92897012e">line</link>&#32;=&#32;0;
<anchor xml:id="__token_8cpp_source_1l01736"/>01736 }
<anchor xml:id="__token_8cpp_source_1l01737"/>01737 
<anchor xml:id="__token_8cpp_source_1l01738"/><link linkend="_class_template_token_1ad1a78fec4529c4cf2aec6350a82b351a">01738</link> <link linkend="_class_template_token_1ae1b395c24b28116b2b20429e8b87f2fc">TemplateToken::TemplateToken</link>(<emphasis role="keywordtype">int</emphasis>&#32;line)&#32;:<link linkend="_class_template_token">TemplateToken</link>()
<anchor xml:id="__token_8cpp_source_1l01739"/>01739 {
<anchor xml:id="__token_8cpp_source_1l01740"/>01740 &#32;&#32;&#32;&#32;this-&gt;line&#32;=&#32;<link linkend="_class_template_token_1a44271a10cbc74eea133ed9e92897012e">line</link>;
<anchor xml:id="__token_8cpp_source_1l01741"/>01741 }
<anchor xml:id="__token_8cpp_source_1l01742"/>01742 
<anchor xml:id="__token_8cpp_source_1l01743"/><link linkend="_class_template_token_1aeab3bb725b06c1368626903bda4431ba">01743</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1aeab3bb725b06c1368626903bda4431ba">TemplateToken::addOab</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01744"/>01744 {
<anchor xml:id="__token_8cpp_source_1l01745"/>01745 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_template_token_1a3d79f7926bda1d8b49a3f12d6ff615b0">addToken</link>(<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46ca09d62a98aa0b2c29e66b3f81c3641657">TokenVALUE::OPENANGLEBRACKETS</link>,&#32;tl,&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>);
<anchor xml:id="__token_8cpp_source_1l01746"/>01746 }
<anchor xml:id="__token_8cpp_source_1l01747"/>01747 
<anchor xml:id="__token_8cpp_source_1l01748"/><link linkend="_class_template_token_1a7e5256636f4c968720a56ef5ee868274">01748</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1a7e5256636f4c968720a56ef5ee868274">TemplateToken::addCab</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01749"/>01749 {
<anchor xml:id="__token_8cpp_source_1l01750"/>01750 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_template_token_1a3d79f7926bda1d8b49a3f12d6ff615b0">addToken</link>(<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46cad473a02cda3fb53f1def18c632bf4e9d">TokenVALUE::CLOSEANGLEBRACKETS</link>,&#32;tl,&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>);
<anchor xml:id="__token_8cpp_source_1l01751"/>01751 }
<anchor xml:id="__token_8cpp_source_1l01752"/>01752 
<anchor xml:id="__token_8cpp_source_1l01753"/><link linkend="_class_template_token_1aa8277d6487df4d96660b6e60dea21ce1">01753</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1aa8277d6487df4d96660b6e60dea21ce1">TemplateToken::addTemplatedTypes</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01754"/>01754 {
<anchor xml:id="__token_8cpp_source_1l01755"/>01755 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01756"/>01756 }
<anchor xml:id="__token_8cpp_source_1l01757"/>01757 
<anchor xml:id="__token_8cpp_source_1l01758"/><link linkend="_class_template_token_1a4f803a24960bab2671effe0c746d1b8e">01758</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1a4f803a24960bab2671effe0c746d1b8e">TemplateToken::addTokens</link>(<link linkend="_class_iterator_list">IteratorList&lt;Token&gt;</link>&amp;&#32;tl,&#32;<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes)
<anchor xml:id="__token_8cpp_source_1l01759"/>01759 {
<anchor xml:id="__token_8cpp_source_1l01760"/>01760 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_template_token_1aeab3bb725b06c1368626903bda4431ba">addOab</link>(tl,<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>))&#32;{
<anchor xml:id="__token_8cpp_source_1l01761"/>01761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_template_token_1a7e5256636f4c968720a56ef5ee868274">addCab</link>(tl,&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>);
<anchor xml:id="__token_8cpp_source_1l01762"/>01762 &#32;&#32;&#32;&#32;}
<anchor xml:id="__token_8cpp_source_1l01763"/>01763 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01764"/>01764 }
<anchor xml:id="__token_8cpp_source_1l01765"/>01765 
<anchor xml:id="__token_8cpp_source_1l01766"/><link linkend="_class_template_token_1ad981d8ad4aeb0162d344d334ff3ac0f3">01766</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1ad981d8ad4aeb0162d344d334ff3ac0f3">TemplateToken::addError</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes,&#32;<link linkend="__token_8h_1acbd1e63c605cbb3dbe67c7411841b46c">TokenVALUE</link>&#32;value,&#32;<link linkend="__token_8h_1ab0df38968e4f03a3f1f6d6df0f31f45a">ErrorType</link>&#32;et)
<anchor xml:id="__token_8cpp_source_1l01767"/>01767 {
<anchor xml:id="__token_8cpp_source_1l01768"/>01768 &#32;&#32;&#32;&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>.<link linkend="_class_token_result_1af997915a62dcb5643b9d61b78a22c9f4">addError</link>(<link linkend="_class_template_token_1a44271a10cbc74eea133ed9e92897012e">line</link>,value,&#32;et);
<anchor xml:id="__token_8cpp_source_1l01769"/>01769 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01770"/>01770 }
<anchor xml:id="__token_8cpp_source_1l01771"/>01771 
<anchor xml:id="__token_8cpp_source_1l01772"/><link linkend="_class_template_token_1a2d06e59a5bfc0a7a1a56dc7496f3d2e3">01772</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_template_token_1ad981d8ad4aeb0162d344d334ff3ac0f3">TemplateToken::addError</link>(<link linkend="_class_token_result">TokenResult</link>&amp;&#32;tRes,&#32;<link linkend="__token_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link>&#32;type)
<anchor xml:id="__token_8cpp_source_1l01773"/>01773 {
<anchor xml:id="__token_8cpp_source_1l01774"/>01774 &#32;&#32;&#32;&#32;<link linkend="_class_template_token_1a8da6ae9664056d2441190c30cd332aca">tRes</link>.<link linkend="_class_token_result_1af997915a62dcb5643b9d61b78a22c9f4">addError</link>(<link linkend="_class_template_token_1a44271a10cbc74eea133ed9e92897012e">line</link>,type);
<anchor xml:id="__token_8cpp_source_1l01775"/>01775 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__token_8cpp_source_1l01776"/>01776 }
</programlisting></section>
