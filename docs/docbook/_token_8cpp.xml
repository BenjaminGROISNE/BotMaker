<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__token_8cpp" xml:lang="en-US">
<title>src/Token.cpp File Reference</title>
<indexterm><primary>src/Token.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;Token.h&quot;<?linebreak?></programlisting>Include dependency graph for Token.cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_token_8cpp__incl.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="__token_8cpp_1ad42767aaf8252eb57581d009530bd527">isTokenString</link> (const std::string &amp;text)</para>
</listitem>
            <listitem><para>bool <link linkend="__token_8cpp_1a3276e6efe4a3f409262ffe0b345e9636">isKeywordString</link> (const std::string &amp;text)</para>
</listitem>
            <listitem><para>bool <link linkend="__token_8cpp_1a8dd32087361a0d3911776dd01da96f7e">isNumericToken</link> (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp;token, <link linkend="_class_token_result">TokenResult</link> &amp;tRes)</para>
</listitem>
            <listitem><para>bool <link linkend="__token_8cpp_1ae8bab56314c8b787497a84c189b9114d">isLiteralString</link> (const std::string &amp;text)</para>
</listitem>
            <listitem><para>bool <link linkend="__token_8cpp_1ad93eecc58b3fdba57ba605dcb296f03e">isPunctuationString</link> (const std::string &amp;text)</para>
</listitem>
            <listitem><para>bool <link linkend="__token_8cpp_1ae80d3823673e42ed3ce7e84597bbd552">isOperatorString</link> (const std::string &amp;text)</para>
</listitem>
            <listitem><para>bool <link linkend="__token_8cpp_1a38a3bc682b32b85fc40cda646569d271">isTokenStringContained</link> (const std::string &amp;text)</para>
</listitem>
            <listitem><para>std::string <link linkend="__token_8cpp_1a226930df4269e20dd367d4b70f0ad457">getNextNumeric</link> (const std::string str)</para>
</listitem>
            <listitem><para>bool <link linkend="__token_8cpp_1a910f9c92b4e541a09214dedd7338b6b5">isIdentifier</link> (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp;token)</para>
</listitem>
            <listitem><para>std::string <link linkend="__token_8cpp_1a426cbd25cc7742ac6cface09364031ba">getStringLiteral</link> (std::string &amp;text)</para>
</listitem>
            <listitem><para>bool <link linkend="__token_8cpp_1a3f320bc2cacb0801375f7148d89f9094">isValue</link> (std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; token, <link linkend="_class_token_result">TokenResult</link> &amp;tRes)</para>
</listitem>
            <listitem><para>bool <link linkend="__token_8cpp_1aeae120e34ddae125123ab27fd7a2eeb3">isType</link> (std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; token)</para>
</listitem>
            <listitem><para>std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; <link linkend="__token_8cpp_1aa3e235e0cfc2dd090f76c893bbb5078c">getStringLiteralToken</link> (std::string &amp;stringLiteral)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="__token_8cpp_1a226930df4269e20dd367d4b70f0ad457"/><section>
    <title>getNextNumeric()</title>
<indexterm><primary>getNextNumeric</primary><secondary>Token.cpp</secondary></indexterm>
<indexterm><primary>Token.cpp</primary><secondary>getNextNumeric</secondary></indexterm>
<para><computeroutput>std::string getNextNumeric (const std::string str)</computeroutput></para><para>
Definition at line <link linkend="__token_8cpp_source_1l00057">57</link> of file <link linkend="__token_8cpp_source">Token.cpp</link>.</para>
</section>
<anchor xml:id="__token_8cpp_1a426cbd25cc7742ac6cface09364031ba"/><section>
    <title>getStringLiteral()</title>
<indexterm><primary>getStringLiteral</primary><secondary>Token.cpp</secondary></indexterm>
<indexterm><primary>Token.cpp</primary><secondary>getStringLiteral</secondary></indexterm>
<para><computeroutput>std::string getStringLiteral (std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__token_8cpp_source_1l00077">77</link> of file <link linkend="__token_8cpp_source">Token.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_token_8cpp_a426cbd25cc7742ac6cface09364031ba_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_token_8cpp_a426cbd25cc7742ac6cface09364031ba_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__token_8cpp_1aa3e235e0cfc2dd090f76c893bbb5078c"/><section>
    <title>getStringLiteralToken()</title>
<indexterm><primary>getStringLiteralToken</primary><secondary>Token.cpp</secondary></indexterm>
<indexterm><primary>Token.cpp</primary><secondary>getStringLiteralToken</secondary></indexterm>
<para><computeroutput>std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; getStringLiteralToken (std::string &amp; stringLiteral)</computeroutput></para><para>
Definition at line <link linkend="__token_8cpp_source_1l00547">547</link> of file <link linkend="__token_8cpp_source">Token.cpp</link>.</para>
</section>
<anchor xml:id="__token_8cpp_1a910f9c92b4e541a09214dedd7338b6b5"/><section>
    <title>isIdentifier()</title>
<indexterm><primary>isIdentifier</primary><secondary>Token.cpp</secondary></indexterm>
<indexterm><primary>Token.cpp</primary><secondary>isIdentifier</secondary></indexterm>
<para><computeroutput>bool isIdentifier (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp; token)</computeroutput></para><para>
Definition at line <link linkend="__token_8cpp_source_1l00069">69</link> of file <link linkend="__token_8cpp_source">Token.cpp</link>.</para>
</section>
<anchor xml:id="__token_8cpp_1a3276e6efe4a3f409262ffe0b345e9636"/><section>
    <title>isKeywordString()</title>
<indexterm><primary>isKeywordString</primary><secondary>Token.cpp</secondary></indexterm>
<indexterm><primary>Token.cpp</primary><secondary>isKeywordString</secondary></indexterm>
<para><computeroutput>bool isKeywordString (const std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__token_8cpp_source_1l00008">8</link> of file <link linkend="__token_8cpp_source">Token.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_token_8cpp_a3276e6efe4a3f409262ffe0b345e9636_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__token_8cpp_1ae8bab56314c8b787497a84c189b9114d"/><section>
    <title>isLiteralString()</title>
<indexterm><primary>isLiteralString</primary><secondary>Token.cpp</secondary></indexterm>
<indexterm><primary>Token.cpp</primary><secondary>isLiteralString</secondary></indexterm>
<para><computeroutput>bool isLiteralString (const std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__token_8cpp_source_1l00025">25</link> of file <link linkend="__token_8cpp_source">Token.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_token_8cpp_ae8bab56314c8b787497a84c189b9114d_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__token_8cpp_1a8dd32087361a0d3911776dd01da96f7e"/><section>
    <title>isNumericToken()</title>
<indexterm><primary>isNumericToken</primary><secondary>Token.cpp</secondary></indexterm>
<indexterm><primary>Token.cpp</primary><secondary>isNumericToken</secondary></indexterm>
<para><computeroutput>bool isNumericToken (const std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; &amp; token, <link linkend="_class_token_result">TokenResult</link> &amp; tRes)</computeroutput></para><para>
Definition at line <link linkend="__token_8cpp_source_1l00017">17</link> of file <link linkend="__token_8cpp_source">Token.cpp</link>.</para>
</section>
<anchor xml:id="__token_8cpp_1ae80d3823673e42ed3ce7e84597bbd552"/><section>
    <title>isOperatorString()</title>
<indexterm><primary>isOperatorString</primary><secondary>Token.cpp</secondary></indexterm>
<indexterm><primary>Token.cpp</primary><secondary>isOperatorString</secondary></indexterm>
<para><computeroutput>bool isOperatorString (const std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__token_8cpp_source_1l00041">41</link> of file <link linkend="__token_8cpp_source">Token.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_token_8cpp_ae80d3823673e42ed3ce7e84597bbd552_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__token_8cpp_1ad93eecc58b3fdba57ba605dcb296f03e"/><section>
    <title>isPunctuationString()</title>
<indexterm><primary>isPunctuationString</primary><secondary>Token.cpp</secondary></indexterm>
<indexterm><primary>Token.cpp</primary><secondary>isPunctuationString</secondary></indexterm>
<para><computeroutput>bool isPunctuationString (const std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__token_8cpp_source_1l00033">33</link> of file <link linkend="__token_8cpp_source">Token.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_token_8cpp_ad93eecc58b3fdba57ba605dcb296f03e_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__token_8cpp_1ad42767aaf8252eb57581d009530bd527"/><section>
    <title>isTokenString()</title>
<indexterm><primary>isTokenString</primary><secondary>Token.cpp</secondary></indexterm>
<indexterm><primary>Token.cpp</primary><secondary>isTokenString</secondary></indexterm>
<para><computeroutput>bool isTokenString (const std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__token_8cpp_source_1l00003">3</link> of file <link linkend="__token_8cpp_source">Token.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_token_8cpp_ad42767aaf8252eb57581d009530bd527_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_token_8cpp_ad42767aaf8252eb57581d009530bd527_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="__token_8cpp_1a38a3bc682b32b85fc40cda646569d271"/><section>
    <title>isTokenStringContained()</title>
<indexterm><primary>isTokenStringContained</primary><secondary>Token.cpp</secondary></indexterm>
<indexterm><primary>Token.cpp</primary><secondary>isTokenStringContained</secondary></indexterm>
<para><computeroutput>bool isTokenStringContained (const std::string &amp; text)</computeroutput></para><para>
Definition at line <link linkend="__token_8cpp_source_1l00049">49</link> of file <link linkend="__token_8cpp_source">Token.cpp</link>.</para>
</section>
<anchor xml:id="__token_8cpp_1aeae120e34ddae125123ab27fd7a2eeb3"/><section>
    <title>isType()</title>
<indexterm><primary>isType</primary><secondary>Token.cpp</secondary></indexterm>
<indexterm><primary>Token.cpp</primary><secondary>isType</secondary></indexterm>
<para><computeroutput>bool isType (std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; token)</computeroutput></para><para>
Definition at line <link linkend="__token_8cpp_source_1l00439">439</link> of file <link linkend="__token_8cpp_source">Token.cpp</link>.</para>
</section>
<anchor xml:id="__token_8cpp_1a3f320bc2cacb0801375f7148d89f9094"/><section>
    <title>isValue()</title>
<indexterm><primary>isValue</primary><secondary>Token.cpp</secondary></indexterm>
<indexterm><primary>Token.cpp</primary><secondary>isValue</secondary></indexterm>
<para><computeroutput>bool isValue (std::shared_ptr&lt; <link linkend="_class_token">Token</link> &gt; token, <link linkend="_class_token_result">TokenResult</link> &amp; tRes)</computeroutput></para><para>
Definition at line <link linkend="__token_8cpp_source_1l00435">435</link> of file <link linkend="__token_8cpp_source">Token.cpp</link>.</para>
</section>
</section>
</section>
